(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"2uBb":function(t,e){t.exports='<div class="mb-3">\n    <div class="float-md-left">\n        <a class="btn btn-outline-secondary btn-wide mb-2 mb-md-0" [routerLink]="[\'/catalog\']">\n            <i class="icon-arrow-left"></i>\n            &nbsp;\n            <span>{{\'CATALOG\' | translate}}</span>\n        </a>\n    </div>\n    <div class="float-md-right">\n\n        <div ngbDropdown class="d-block d-md-inline-block" placement="bottom-right">\n            <button class="btn btn-info  d-block d-md-inline-block width-100 width-md-auto mb-2 mb-md-0" ngbDropdownToggle>\n                <span>{{\'BATCH_ACTIONS\' | translate}}</span>\n            </button>\n            <div ngbDropdownMenu>\n                <button class="dropdown-item" (click)="blockSelected()">{{\'DISABLE_ENABLE\' | translate}}</button>\n                <button class="dropdown-item" (click)="deleteSelected()">{{\'DELETE\' | translate}}</button>\n            </div>\n        </div>\n        <button type="button" class="btn btn-success btn-wide d-block d-md-inline-block width-100 width-md-auto ml-md-2" (click)="modalOpen()">\n            <i class="icon-plus"></i>\n            &nbsp;\n            <span>{{\'ADD\' | translate}}</span>\n        </button>\n\n    </div>\n    <div class="clearfix"></div>\n</div>\n\n<app-table\n        [items]="items"\n        [(selectedIds)]="selectedIds"\n        [collectionSize]="collectionSize"\n        [queryOptions]="queryOptions"\n        [tableFields]="tableFields"\n        [isCloneAllowed]="true"\n        [(loading)]="loading"\n        (actionRequest)="actionRequest($event)" #table></app-table>\n'},"3aJA":function(t,e){t.exports='<div class="modal-header d-block">\n    <div class="d-block float-right">\n        <button type="button" class="btn btn-secondary" (click)="activeModal.dismiss()">\n            <span>{{\'CLOSE\' | translate}}</span>\n        </button>\n    </div>\n    <h4 class="modal-title">{{modalTitle}}</h4>\n</div>\n\n<form [formGroup]="form" [class.loading]="loading">\n\n    <div class="modal-body">\n\n        <div class="row form-group" [class.form-group-message]="formErrors.parentId" *ngIf="!isRoot">\n            <div class="col-md-5">\n                <label for="fieldContentType">{{\'PARENT_FOLDER\' | translate}}</label>\n            </div>\n            <div class="col-md-7">\n                <app-select-parent-dropdown\n                        name="parentId"\n                        formControlName="parentId"\n                        [filterId]="model.id"\n                        [(ngModel)]="model.parentId"></app-select-parent-dropdown>\n\n                <div *ngIf="formErrors.parentId" class="alert alert-danger">\n                    {{formErrors.parentId}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group show-on-hover-parent" [class.form-group-message]="formErrors.title">\n            <div class="col-md-5">\n                <label for="fieldTitle">\n                    {{\'TITLE\' | translate}}\n                </label>\n            </div>\n            <div class="col-md-7">\n                <input type="text" id="fieldTitle" class="form-control" formControlName="title" name="title"\n                       [(ngModel)]="model.title"\n                       [ngClass]="{\'border-success\': localeCurrent != localeDefault}">\n                <div *ngIf="formErrors.title" class="alert alert-danger">\n                    {{formErrors.title}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group" [class.form-group-message]="formErrors.name">\n            <div class="col-md-5">\n                <label for="fieldName">\n                    {{\'SYSTEM_NAME\' | translate}}\n                </label>\n            </div>\n            <div class="col-md-7">\n                <div class="input-group">\n                    <input type="text" class="form-control" name="name" formControlName="name" id="fieldName" [(ngModel)]="model.name">\n                    <div class="input-group-append">\n                        <button type="button" class="btn btn-secondary" ngbTooltip="{{\'GENERATE\' | translate}}" (click)="generateName(model)" [disabled]="getControl(\'name\').disabled">\n                            <i class="icon-reload"></i>\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf="formErrors.name" class="alert alert-danger">\n                    {{formErrors.name}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group show-on-hover-parent">\n            <div class="col-md-5">\n                <label for="fieldDescription">\n                    {{\'DESCRIPTION\' | translate}}\n                </label>\n            </div>\n            <div class="col-md-7">\n                <textarea type="text" id="fieldDescription" rows="4" class="form-control" name="description" formControlName="description"\n                          [(ngModel)]="model.description"\n                          [ngClass]="{\'border-success\': localeCurrent != localeDefault}"></textarea>\n            </div>\n        </div>\n\n        <div class="row form-group" [class.form-group-message]="formErrors.contentTypeName">\n            <div class="col-md-5">\n                <label for="fieldContentType">\n                    {{\'CONTENT_TYPE\' | translate}}\n                </label>\n            </div>\n            <div class="col-md-7">\n                <select id="fieldContentType" class="form-control" name="contentTypeName" formControlName="contentTypeName" [(ngModel)]="model.contentTypeName">\n                    <option value="1" *ngFor="let contentType of contentTypes" [value]="contentType.name">{{contentType.title}}</option>\n                </select>\n                <div *ngIf="formErrors.contentTypeName" class="alert alert-danger">\n                    {{formErrors.contentTypeName}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group" [class.form-group-message]="formErrors.menuIndex" *ngIf="!isRoot">\n            <div class="col-md-5">\n                <label for="fieldMenuIndex">\n                    {{\'MENU_INDEX\' | translate}}\n                </label>\n            </div>\n            <div class="col-md-7">\n                <input type="number" id="fieldMenuIndex" class="form-control" name="menuIndex" formControlName="menuIndex" [(ngModel)]="model.menuIndex">\n                <div *ngIf="formErrors.menuIndex" class="alert alert-danger">\n                    {{formErrors.menuIndex}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group">\n            <div class="col-md-7 ml-md-auto">\n\n                <div class="card card-body p-2 pl-3">\n\n                    <div class="custom-control custom-checkbox m-0">\n                        <input type="checkbox" class="custom-control-input" id="fieldIsActive" value="1" name="isActive" formControlName="isActive" [(ngModel)]="model.isActive">\n                        <label class="custom-control-label" for="fieldIsActive">{{\'ACTIVE\' | translate}}</label>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n\n        <div class="alert alert-danger mt-3 mb-0" [hidden]="!errorMessage">\n            <button type="button" class="close" (click)="errorMessage = \'\'">\n                <span aria-hidden="true">&times;</span>\n            </button>\n            {{errorMessage}}\n        </div>\n\n    </div>\n\n    <div class="modal-footer d-block">\n        <div class="float-right" *ngIf="localeList.length > 1">\n            <button type="button" class="btn btn-success mr-2" ngbTooltip="{{\'SAVE\' | translate}}" placement="left"\n                    [hidden]="localeCurrent == localeDefault"\n                    (click)="saveTranslations($event)">\n                <i class="icon-check"></i>\n            </button>\n            <div class="btn-group btn-group-toggle" ngbRadioGroup name="radioBasic" [(ngModel)]="localeCurrent" (ngModelChange)="onLocaleSwitch()" [ngModelOptions]="{standalone: true}">\n                <label ngbButtonLabel class="btn-secondary" *ngFor="let localeName of localeList">\n                    <input ngbButton type="radio" [value]="localeName">\n                    {{localeName}}\n                </label>\n            </div>\n        </div>\n        <button type="submit" class="btn btn-success btn-wide" [disabled]="submitted || isSaveButtonDisabled" (click)="save()">\n            <span>{{\'SAVE\' | translate}}</span>\n        </button>\n        <button type="button" class="btn btn-secondary btn-wide" (click)="close($event)">\n            <span>{{\'CANCEL\' | translate}}</span>\n        </button>\n    </div>\n\n</form>\n'},"6J3s":function(t,e,n){"use strict";n.r(e);var o,i=n("CcnG"),r=n("Ip0R"),s=n("d2mR"),l=n("ZYCi"),a=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},c=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},d=function(){function t(){}return t.prototype.ngOnInit=function(){},t.title="CATALOG",t=a([Object(i.Component)({selector:"app-catalog",template:n("ivCk")}),c("design:paramtypes",[])],t)}(),p=n("4GxJ"),u=n("LvDl"),f=n("A7o+"),m=function(){return function(t,e,n,o,i,r,s,l,a,c){this.id=t,this.isFolder=e,this.parentId=n,this.name=o,this.title=i,this.description=r,this.contentTypeName=s,this.isActive=l,this.menuIndex=a,this.translations=c,void 0===this.translations&&(this.translations={})}}(),b=n("4p3S"),g=n("gIcY"),v=function(){function t(t,e,n,o,i,r,s,l){this.id=t,this.name=e,this.title=n,this.description=o,this.collection=i,this.fields=r,this.groups=s,this.isActive=l}return t.getSystemFieldName=function(t){var e=Object(u.findIndex)(t.fields,{inputType:"system_name"});return e>-1?t.fields[e].name:"name"},t.getFieldByName=function(t,e){var n=Object(u.findIndex)(t.fields,{name:e});return n>-1?t.fields[n]:null},t}(),h=n("bbPC"),y=n("qbpQ"),T=n("e07I"),I=n("t/Na"),C=n("9Z1F"),O=n("7AsP"),E=(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),w=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},_=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},M=function(t){function e(e){var n=t.call(this,e)||this;return n.setRequestUrl("content_types"),n}return E(e,t),e.prototype.getItemByName=function(t){var e=this.getRequestUrl()+"/by_name/"+t;return this.http.get(e).pipe(Object(C.a)(this.handleError()))},e=w([Object(i.Injectable)(),_("design:paramtypes",[I.a])],e)}(O.a),R=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),N=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},A=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},P=function(t){function e(e){var n=t.call(this,e)||this;return n.setRequestUrl("products"),n}return R(e,t),e=N([Object(i.Injectable)(),A("design:paramtypes",[I.a])],e)}(O.a),x=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),S=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},k=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},F=function(t){function e(e){var n=t.call(this,e)||this;return n.setRequestUrl("files"),n}return x(e,t),e=S([Object(i.Injectable)(),k("design:paramtypes",[I.a])],e)}(O.a),L=n("3UOJ"),j=n("wgQU"),D=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),q=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},G=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},B=function(t){function e(e,n,o,i,r,s,l,a,c,d){var p=t.call(this,e,n,o,i,r,s)||this;return p.fb=e,p.dataService=n,p.systemNameService=o,p.activeModal=i,p.tooltipConfig=r,p.translateService=s,p.contentTypesService=l,p.categoriesService=a,p.filesService=c,p.appSettings=d,p.categories=[],p.contentTypes=[],p.currentContentType=new v(0,"","","","",[],[],!0),p.model={},p.formFields={parentId:{value:0,validators:[g.Validators.required],messages:{required:"Category is required."}},isActive:{value:!0,validators:[],messages:{}}},p.model.id=0,p.model.parentId=0,p}return D(e,t),e.prototype.ngOnInit=function(){var t=this;this.localeList=this.appSettings.settings.localeList,this.localeList.length>0&&(this.localeDefault=this.localeList[0],this.localeCurrent=this.localeList[0]),this.model.parentId=this.category.id,this.dataService.setRequestUrl("products/"+this.category.id),this.buildForm(),this.getCategories(),this.getContentType().then(function(e){return t.itemId?t.getModelData():Promise.reject("")},function(e){return t.errorMessage=e.error||"Error.",Promise.reject("")}).then(function(e){t.onAfterGetData(),t.updateForm()},function(){t.onAfterGetData()})},e.prototype.onAfterGetData=function(){var t=this;this.currentContentType.fields.forEach(function(e){["text","textarea","rich_text"].indexOf(e.inputType)>-1&&t.localeFieldsAllowed.push(e.name)}),this.model.translations&&!Array.isArray(this.model.translations)||(this.model.translations={})},e.prototype.getSystemFieldName=function(){return v.getSystemFieldName(this.currentContentType)},e.prototype.getCategories=function(){var t=this;this.loading=!0,this.categoriesService.getListPage().subscribe(function(e){t.categories=e.items,t.loading=!1},function(e){t.errorMessage=e.error||"Error."})},e.prototype.getContentType=function(){var t=this;return this.loading=!0,this.category.contentTypeName?new Promise(function(e,n){t.contentTypesService.getItemByName(t.category.contentTypeName).subscribe(function(n){t.currentContentType=n,t.errorMessage="",t.loading=!1,e(n)},function(e){t.errorMessage=e.error||"Error.",t.loading=!1,n(e)})}):Promise.reject({error:"Content type name not found."})},e.prototype.updateForm=function(t){var e=this;t||(t=Object(u.clone)(this.model));var n=Object(u.map)(this.currentContentType.fields,function(t){return t.name});for(var o in n.push("id","parentId","previousParentId","isActive","translations"),Object.keys(this.model).forEach(function(t){if(t.indexOf("__")>-1){var o=L.a.getFieldBaseName(t);if(o===t)return;var i=L.a.getFieldIndexData(e.currentContentType.fields,o);if(-1===i.index)return;var r=Object(u.cloneDeep)(e.currentContentType.fields[i.index]);r.name=t,e.currentContentType.fields.splice(i.index+i.additFieldsCount+1,0,r),n.push(t)}}),this.form.controls)this.form.controls.hasOwnProperty(o)&&-1===n.indexOf(o)&&this.form.removeControl(o);this.model=Object(u.pick)(t,n)},e.prototype.onChangeContentType=function(){var t=parseInt(String(this.model.parentId),10),e=Object(u.findIndex)(this.categories,{id:t});-1!==e&&(this.currentContentType&&this.currentContentType.name===this.categories[e].contentTypeName||(this.model.previousParentId=this.category.id,this.category=Object(u.cloneDeep)(this.categories[e]),this.getContentType()))},e.prototype.saveFiles=function(t){var e=this;if(0!==Object.keys(this.files).length){var n=new FormData;for(var o in this.files)this.files.hasOwnProperty(o)&&this.files[o]instanceof File&&n.append(o,this.files[o],this.files[o].name);n.append("itemId",String(t)),n.append("ownerType",this.currentContentType.name),n.append("categoryId",String(this.model.parentId)),n.append("fieldsSort",this.getFieldsSortData().join(",")),this.filesService.postFormData(n).subscribe(function(){e.closeModal()},function(t){e.errorMessage=t.error||"Error.",e.submitted=!1,e.loading=!1})}else this.closeModal()},e.prototype.getErrorsString=function(){var t=this,e=[];return Object.keys(this.form.controls).forEach(function(n){if(t.form.controls[n].invalid&&t.validationMessages[n]){var o=L.a.getFieldBaseName(n),i=v.getFieldByName(t.currentContentType,o);if(!i)return;var r="";r=t.formErrors[n]?t.formErrors[n]:i.title+" - error.",e.push(r)}}),e.join(" ")},e.prototype.getFormData=function(){var t=Object(u.cloneDeep)(this.model);for(var e in t)t.hasOwnProperty(e)&&t[e]&&"object"==typeof t[e]&&t[e].dataUrl&&delete t[e].dataUrl;return t.fieldsSort=this.getFieldsSortData(),t},e.prototype.getFieldsSortData=function(){var t=this,e=this.currentContentType.fields.map(function(t){return t.name});return e=e.filter(function(e){if(!t.model[e]||-1===e.indexOf("__"))return!1;var n=e.split("__");return!isNaN(n[1])})},e.prototype.save=function(){var t=this;if(this.submitted=!0,this.errorMessage=null,!this.form.valid)return this.onValueChanged("form"),this.errorMessage=this.getErrorsString(),void(this.submitted=!1);this.loading=!0,this.dataService.setRequestUrl("products/"+this.category.id),this.saveRequest().subscribe(function(e){Object.keys(t.files).length>0?t.saveFiles(e._id||e.id):t.closeModal()},function(e){t.errorMessage=e.error||"Error.",t.submitted=!1,t.loading=!1})},q([Object(i.Input)(),G("design:type",m)],e.prototype,"category",void 0),e=q([Object(i.Component)({selector:"app-product-modal-content",template:n("Pq0m")}),G("design:paramtypes",[g.FormBuilder,P,y.a,p.b,p.e,f.c,M,T.a,F,j.a])],e)}(h.a),U=n("RwQR"),V=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Y=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},z=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},$=function(t){function e(e,n,o,i,r){var s=t.call(this,e,n,o,i)||this;return s.dataService=e,s.activeModal=n,s.modalService=o,s.translateService=i,s.contentTypesService=r,s.queryOptions=new U.a("id","desc",1,10,0,0),s.tableFields=[],s}return V(e,t),e.prototype.ngOnInit=function(){},e.prototype.updateTableConfig=function(){var t=this;this.currentContentType&&(this.tableFields=[],this.currentContentType.fields.forEach(function(e){e.showInTable&&t.tableFields.push({name:e.name,sortName:e.name,title:e.title,outputType:e.outputType,outputProperties:e.outputProperties})}),this.tableFields.unshift({name:"id",sortName:"id",title:"ID",outputType:"text",outputProperties:{}}),this.tableFields.push({name:"isActive",sortName:"isActive",title:"STATUS",outputType:"boolean",outputProperties:{}}))},e.prototype.getModalContent=function(){return B},e.prototype.getContentType=function(){return this.contentTypesService.getItemByName(this.currentCategory.contentTypeName)},e.prototype.openCategory=function(t){var e=this;if(this.currentCategory=Object(u.clone)(t),!this.currentCategory.contentTypeName)return this.items=[],this.tableFields=[],void(this.currentCategory.id=0);this.dataService.setRequestUrl("products/"+this.currentCategory.id),this.loading=!0,this.queryOptions.page=1,this.getContentType().subscribe(function(t){e.currentContentType=t,e.loading=!1,e.updateTableConfig(),e.getList()},function(){e.items=[],e.tableFields=[],e.currentCategory.id=0})},e.prototype.openRootCategory=function(){this.currentCategory=new m(0,!1,0,"root","","","",!0),this.dataService.setRequestUrl("products/"+this.currentCategory.id),this.getList()},e.prototype.setModalInputs=function(t,e){void 0===e&&(e=!1),b.a.prototype.setModalInputs.call(this,t,e),this.modalRef.componentInstance.category=this.currentCategory},e.title="CATEGORY",e=Y([Object(i.Component)({selector:"app-catalog-category",template:n("7yzz")}),z("design:paramtypes",[P,p.b,p.c,f.c,M])],e)}(b.a),W=n("F/XL"),H=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},J=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},Z=function(){function t(t){this.http=t,this.headers=new I.c({"Content-Type":"application/json"}),this.requestUrl="collections"}return t.prototype.setRequestUrl=function(t){this.requestUrl=t},t.prototype.getRequestUrl=function(){return this.requestUrl},t.prototype.getList=function(){return this.http.get(this.getRequestUrl()).pipe(Object(C.a)(this.handleError()))},t.prototype.deleteItemByName=function(t){var e=this.getRequestUrl()+"/"+t;return this.http.delete(e,{headers:this.headers}).pipe(Object(C.a)(this.handleError()))},t.prototype.handleError=function(t,e){return void 0===t&&(t="operation"),function(t){if(t.error)throw t.error;return Object(W.a)(e)}},t=H([Object(i.Injectable)(),J("design:paramtypes",[I.a])],t)}(),Q=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),X=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},K=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},tt=function(t){function e(e){var n=t.call(this,e)||this;return n.setRequestUrl("field_types"),n}return Q(e,t),e=X([Object(i.Injectable)(),K("design:paramtypes",[I.a])],e)}(O.a),et=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),nt=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},ot=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},it=function(t){function e(e,n,o,i,r,s,l,a,c){var d=t.call(this,e,n,o,i,r,s)||this;return d.fb=e,d.dataService=n,d.systemNameService=o,d.activeModal=i,d.tooltipConfig=r,d.translateService=s,d.fieldTypesService=l,d.collectionsService=a,d.modalService=c,d.model=new v(0,"","","","products",[],["General","Service"],!0),d.fieldModel=new L.a(0,"","","","",{},"",{},"",!1,!1,!1),d.sortData=[],d.sortingfieldName="",d.fld_submitted=!1,d.action="add_field",d.currentFieldName="",d.collections=["products"],d.fieldTypeProperties={input:[],output:[]},d.formFields={name:{fieldLabel:"SYSTEM_NAME",value:"",validators:[g.Validators.required,g.Validators.pattern("[A-Za-z0-9_-]+")],messages:{pattern:"The name must contain only Latin letters and numbers."}},title:{fieldLabel:"TITLE",value:"",validators:[g.Validators.required],messages:{}},description:{fieldLabel:"DESCRIPTION",value:"",validators:[],messages:{}},collection:{fieldLabel:"COLLECTION",value:"",validators:[g.Validators.required],messages:{}},newCollection:{fieldLabel:"COLLECTION",value:"",validators:[g.Validators.pattern("[A-Za-z0-9_-]+")],messages:{pattern:"The name must contain only Latin letters and numbers.",exists:"Collection with the same name already exists."}},isActive:{fieldLabel:"ACTIVE",value:"",validators:[],messages:{}}},d.fieldsFormOptions={title:{fieldLabel:"TITLE",value:"",validators:[g.Validators.required],messages:{}},name:{fieldLabel:"SYSTEM_NAME",value:"",validators:[g.Validators.required,g.Validators.pattern("[A-Za-z0-9_-]+")],messages:{pattern:"The name must contain only Latin letters."}},description:{fieldLabel:"DESCRIPTION",value:"",validators:[],messages:{}},inputType:{fieldLabel:"INPUT_TYPE",value:"",validators:[g.Validators.required],messages:{}},outputType:{fieldLabel:"OUTPUT_TYPE",value:"",validators:[g.Validators.required],messages:{}},group:{fieldLabel:"GROUP",value:"",validators:[g.Validators.required],messages:{}},newGroup:{fieldLabel:"GROUP",value:"",validators:[],messages:{}},required:{value:"",validators:[],messages:{}},showInTable:{value:"",validators:[],messages:{}},showInList:{value:"",validators:[],messages:{}},isFilter:{value:"",validators:[],messages:{}}},d}return et(e,t),e.prototype.ngOnInit=function(){h.a.prototype.ngOnInit.call(this),this.getFieldTypes(),this.getCollectionsList()},e.prototype.buildForm=function(){var t=this;h.a.prototype.buildForm.call(this);var e=this.buildControls(this.fieldsFormOptions,"fieldModel","fld_");this.fieldForm=this.fb.group(e),this.fieldForm.valueChanges.subscribe(function(){return t.onValueChanged("fieldForm","fld_")})},e.prototype.getFieldTypes=function(){var t=this,e=new U.a("title","asc",0,0,1);this.fieldTypesService.getListPage(e).subscribe(function(e){t.fieldTypes=e.items},function(e){return t.errorMessage=e})},e.prototype.getCollectionsList=function(){var t=this;this.collectionsService.getList().subscribe(function(e){e.length>0&&(t.collections=e)})},e.prototype.selectFieldTypeProperties=function(t,e){var n=this;e&&(this.fieldModel[t+"Type"]=e);var o=Object(u.find)(this.fieldTypes,{name:this.fieldModel[t+"Type"]});if(o){var i=t+"Properties",r=Object(u.map)(o[t+"Properties"],"name");for(var s in this.fieldTypeProperties[t].splice(0),o[t+"Properties"].forEach(function(e,o){n.fieldTypeProperties[t].push(e)}),this.fieldModel[i])this.fieldModel[i].hasOwnProperty(s)&&-1===r.indexOf(s)&&delete this.fieldModel[i][s];for(var l in this.fieldTypeProperties[t])if(this.fieldTypeProperties[t].hasOwnProperty(l)){var a=this.fieldTypeProperties[t][l].name;void 0===this.fieldModel[i][a]&&(this.fieldModel[i][a]=this.fieldTypeProperties[t][l].default_value)}"input"!==t||this.fieldModel.outputType||this.selectFieldTypeProperties("output",this.fieldModel.inputType)}else this.fieldTypeProperties[t]=[]},e.prototype.addCollection=function(){var t=this.form.get("newCollection");if(!t.valid)return!1;this.formErrors.newCollection="";var e=t.value;return this.collections.indexOf(e)>-1?(this.formErrors.newCollection+=this.validationMessages.newCollection.exists,!1):(this.collections.push(e),this.model.collection=e,this.elementAddCollectionBlock.nativeElement.style.display="none",!0)},e.prototype.deleteCollection=function(t){if(this.model.collection)if(t.isOpen())t.close();else{var e;t.placement="top",t.popoverTitle="Confirm";e={p:t,confirm:(function(){var e=this;this.loading=!0,this.collectionsService.deleteItemByName(this.model.collection).subscribe(function(n){var o=e.collections.indexOf(e.model.collection);o>-1&&(e.collections.splice(o,1),e.model.collection=e.collections[0]),t.close(),e.loading=!1},function(t){e.errorMessage=t.error||"Error.",e.loading=!1})}).bind(this),message:""},t.open(e)}},e.prototype.addGroup=function(){var t=this.fieldForm.get("newGroup");if(!t||!t.valid||!t.value)return!1;this.formErrors.fld_newGroup="";var e=t.value;return this.model.groups.indexOf(e)>-1?(this.formErrors.fld_newGroup+=this.validationMessages.fld_newGroup.exists,!1):(this.model.groups.push(e),this.fieldModel.group=e,this.elementAddGroupBlock.nativeElement.style.display="none",!0)},e.prototype.deleteGroup=function(){var t=this.fieldForm.get("group").value,e=Object(u.findIndex)(this.model.fields,{group:t});this.errorFieldMessage="",e>-1?this.errorFieldMessage="You can't delete a group because it is not empty.":(e=this.model.groups.indexOf(t))>-1&&this.model.groups.splice(e,1)},e.prototype.editField=function(t){this.toggleAccordion(this.accordion,"accordion-content-type-fields"),this.action="edit_field",this.fieldModel=Object(u.cloneDeep)(t);var e={};for(var n in this.fieldsFormOptions)this.fieldsFormOptions.hasOwnProperty(n)&&(e[n]=t[n]||"");this.fieldForm.setValue(e),this.currentFieldName=this.fieldModel.name,this.fld_submitted=!1},e.prototype.copyField=function(t){this.toggleAccordion(this.accordion,"accordion-content-type-fields"),this.action="add_field",this.fieldModel=Object(u.cloneDeep)(t),this.fieldModel.name="",this.fieldForm.setValue(this.fieldModel),this.currentFieldName="",this.fld_submitted=!1},e.prototype.deleteField=function(t){var e=Object(u.findIndex)(this.model.fields,{name:t.name});-1!==e?this.model.fields.splice(e,1):this.errorMessage="Field not found."},e.prototype.resetFieldForm=function(){this.action="add_field",this.errorMessage="",this.errorFieldMessage="",this.fld_submitted=!1,this.currentFieldName="",this.fieldForm.reset(),this.fieldModel=new L.a(0,"","","","",{},"",{},"",!1,!1,!1)},e.prototype.editFieldCancel=function(){this.toggleAccordion(this.accordion,"accordion-content-type-fields",!0),this.resetFieldForm(),this.onValueChanged("fieldForm","fld_")},e.prototype.fieldMove=function(t,e){if(!("up"===e&&0===t||"down"===e&&t===this.model.fields.length-1)){var n="up"===e?t-1:t+1,o=this.model.fields[t];this.model.fields.splice(t,1),this.model.fields.splice(n,0,o)}},e.prototype.submitField=function(){if(this.toggleAccordion(this.accordion,"accordion-content-type-fields",!0),this.fld_submitted=!0,!this.fieldForm.valid)return this.onValueChanged("fieldForm","fld_"),void(this.fld_submitted=!1);var t=Object(u.cloneDeep)(this.fieldModel);t.inputProperties=Object(u.extend)({},this.fieldModel.inputProperties),t.outputProperties=Object(u.extend)({},this.fieldModel.outputProperties);var e=Object(u.findIndex)(this.model.fields,{name:t.name});e>-1&&this.currentFieldName!==t.name?this.errorMessage='A field named "'+t.name+'" already exists.':("add_field"===this.action?this.model.fields.push(t):"edit_field"===this.action&&(e=Object(u.findIndex)(this.model.fields,{name:this.currentFieldName}))>-1&&(this.model.fields[e]=t),this.resetFieldForm())},e.prototype.getFieldTypeProperty=function(t,e){if(!t)return null;var n=null,o=Object(u.findIndex)(this.fieldTypes,{name:t});return o>-1&&void 0!==this.fieldTypes[o][e]&&(n=this.fieldTypes[o][e]),n},e.prototype.sortingInit=function(t,e,n){var o=this;n&&n.preventDefault(),this.sortingfieldName=t;var i=this.model.fields.filter(function(t){return t[e]});i.sort(function(e,n){return e[t]-n[t]}),this.sortData=[],i.forEach(function(t){o.sortData.push({name:t.name,title:t.title})}),this.blockFieldList.nativeElement.style.display="none"},e.prototype.sortingApply=function(){var t=this;this.sortData.forEach(function(e,n){var o=t.model.fields.findIndex(function(t){return t.name===e.name});o>-1&&(t.model.fields[o][t.sortingfieldName]=n)}),this.sortingCancel()},e.prototype.sortingCancel=function(){var t=Object(u.findIndex)(this.model.fields,{name:this.currentFieldName});this.action=t>-1?"edit_field":"add_field",this.sortData.splice(0,this.sortData.length),this.blockFieldList.nativeElement.style.display="block"},e.prototype.save=function(){var t=this;if(this.submitted=!0,!this.form.valid)return this.onValueChanged("form"),void(this.submitted=!1);this.loading=!0,this.saveRequest().subscribe(function(){return t.closeModal()},function(e){t.errorMessage=e.error||"Error.",t.submitted=!1,t.loading=!1})},nt([Object(i.ViewChild)("addCollectionBlock"),ot("design:type",Object)],e.prototype,"elementAddCollectionBlock",void 0),nt([Object(i.ViewChild)("addGroupBlock"),ot("design:type",Object)],e.prototype,"elementAddGroupBlock",void 0),nt([Object(i.ViewChild)("accordion"),ot("design:type",Object)],e.prototype,"accordion",void 0),nt([Object(i.ViewChild)("blockFieldList"),ot("design:type",Object)],e.prototype,"blockFieldList",void 0),e=nt([Object(i.Component)({selector:"app-content-type-modal-content",template:n("xBc3")}),ot("design:paramtypes",[g.FormBuilder,M,y.a,p.b,p.e,f.c,tt,Z,p.c])],e)}(h.a),rt=function(t){function e(e,n,o,i){var r=t.call(this,e,n,o,i)||this;return r.dataService=e,r.activeModal=n,r.modalService=o,r.translateService=i,r.title="\u0422\u0438\u043f\u044b \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430",r.queryOptions=new U.a("name","asc",1,10,0,0),r.tableFields=[{name:"id",sortName:"id",title:"ID",outputType:"text",outputProperties:{}},{name:"title",sortName:"title",title:"TITLE",outputType:"text",outputProperties:{}},{name:"name",sortName:"name",title:"SYSTEM_NAME",outputType:"text",outputProperties:{}},{name:"collection",sortName:"collection",title:"COLLECTION",outputType:"text",outputProperties:{}},{name:"isActive",sortName:"isActive",title:"STATUS",outputType:"boolean",outputProperties:{}}],r}return et(e,t),e.prototype.getModalContent=function(){return it},e=nt([Object(i.Component)({selector:"app-shk-content-types",template:n("2uBb")}),ot("design:paramtypes",[M,p.b,p.c,f.c])],e)}(b.a),st=function(){return function(t,e,n,o,i,r,s){this.id=t,this.name=e,this.title=n,this.description=o,this.isActive=i,this.inputProperties=r,this.outputProperties=s}}(),lt=function(){return function(t,e,n){this.name=t,this.title=e,this.default_value=n}}(),at=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ct=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},dt=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},pt=function(t){function e(e,n,o,i,r,s){var l=t.call(this,e,n,o,i,r,s)||this;return l.fb=e,l.dataService=n,l.systemNameService=o,l.activeModal=i,l.tooltipConfig=r,l.translateService=s,l.model=new st(0,"","","",!0,[],[]),l.formFields={title:{fieldLabel:"TITLE",value:"",validators:[g.Validators.required],messages:{}},name:{fieldLabel:"SYSTEM_NAME",value:"",validators:[g.Validators.required,g.Validators.pattern("[A-Za-z0-9_-]+")],messages:{pattern:"The name must contain only Latin letters and numbers."}},description:{fieldLabel:"DESCRIPTION",value:"",validators:[],messages:{}},isActive:{fieldLabel:"ACTIVE",value:!0,validators:[],messages:{}}},l}return at(e,t),e.prototype.addRow=function(t){this.model[t]||(this.model[t]=[]),this.model[t].push(new lt("","",""))},e.prototype.deleteRow=function(t,e){this.model[e].length<t+1||this.model[e].splice(t,1)},e.prototype.save=function(){var t=this;if(this.submitted=!0,!this.form.valid)return this.onValueChanged("form"),void(this.submitted=!1);this.loading=!0,this.saveRequest().subscribe(function(){return t.closeModal()},function(e){t.errorMessage=e.error||"Error.",t.submitted=!1,t.loading=!1})},e=ct([Object(i.Component)({selector:"app-field-type-modal-content",template:n("w9YM")}),dt("design:paramtypes",[g.FormBuilder,tt,y.a,p.b,p.e,f.c])],e)}(h.a),ut=function(t){function e(e,n,o,i){var r=t.call(this,e,n,o,i)||this;return r.dataService=e,r.activeModal=n,r.modalService=o,r.translateService=i,r.title="Field types",r.queryOptions=new U.a("name","asc",1,10,0,0),r.tableFields=[{name:"id",sortName:"id",title:"ID",outputType:"text",outputProperties:{}},{name:"title",sortName:"title",title:"TITLE",outputType:"text",outputProperties:{}},{name:"name",sortName:"name",title:"SYSTEM_NAME",outputType:"text",outputProperties:{}},{name:"isActive",sortName:"isActive",title:"STATUS",outputType:"boolean",outputProperties:{}}],r}return at(e,t),e.prototype.getModalContent=function(){return pt},e=ct([Object(i.Component)({selector:"app-shk-field-types",template:n("8tLm")}),dt("design:paramtypes",[tt,p.b,p.c,f.c])],e)}(b.a),ft=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},mt=[{path:"",component:d,children:[{path:"",redirectTo:"category/0",pathMatch:"full"},{path:"category/:categoryId",component:$},{path:"content_types",component:rt},{path:"field_types",component:ut}]}],bt=function(){function t(){}return t=ft([Object(i.NgModule)({imports:[l.RouterModule.forChild(mt)],exports:[l.RouterModule]})],t)}(),gt=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},vt=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},ht=function(){function t(){}return t.prototype.ngOnInit=function(){this.filterInputItems()},t.prototype.ngOnChanges=function(t){t.inputItems&&this.filterInputItems(),t.currentId&&this.updateParentsIds()},t.prototype.filterInputItems=function(){this.items=[];var t=this.items,e=this.parentId;this.inputItems.forEach(function(n){n.id!==n.parentId&&n.parentId===e&&t.push(n)}),this.updateParentsIds()},t.prototype.updateParentsIds=function(){var t=this,e=this.inputItems.findIndex(function(e){return e.id===t.currentId});this.currentParentsIds=[],-1!==e&&(this.currentParentsIds=this.getParentIds(this.inputItems[e].parentId))},t.prototype.getParentIds=function(t,e){if(e=e||[],t>0){e.push(t);var n=Object(u.findIndex)(this.inputItems,{id:t});return-1===n?e:this.getParentIds(this.inputItems[n].parentId,e)}return e},t.prototype.getIsActiveParent=function(t){return this.currentParentsIds.indexOf(t)>-1},gt([Object(i.Input)(),vt("design:type",Array)],t.prototype,"inputItems",void 0),gt([Object(i.Input)(),vt("design:type",Array)],t.prototype,"items",void 0),gt([Object(i.Input)(),vt("design:type",Number)],t.prototype,"parentId",void 0),gt([Object(i.Input)(),vt("design:type",Number)],t.prototype,"currentId",void 0),t=gt([Object(i.Component)({selector:"app-list-recursive",template:'\n        <ul>\n            <li *ngFor="let item of items">\n                <a class="dropdown-item">\n                    {{item.title}}\n                </a>\n                <app-list-recursive [inputItems]="inputItems" [parentId]="item.id" [currentId]="currentId"></app-list-recursive>\n            </li>\n        </ul>\n    '})],t)}(),yt=n("Sy1n"),Tt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),It=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},Ct=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},Ot=function(t){function e(e,n,o,i,r,s,l,a){var c=t.call(this,e,n,o,i,r,s)||this;return c.fb=e,c.dataService=n,c.systemNameService=o,c.activeModal=i,c.tooltipConfig=r,c.translateService=s,c.contentTypesService=l,c.appSettings=a,c.isRoot=!1,c.model=new m(null,!1,0,"","","","",!0),c.contentTypes=[],c.loadingCategories=!1,c.categories=[],c.isCollapsed=!1,c.localeFieldsAllowed=["title","description"],c.formFields={title:{fieldLabel:"TITLE",value:"",disabled:!1,validators:[g.Validators.required],messages:{}},name:{fieldLabel:"SYSTEM_NAME",value:"",disabled:!1,validators:[g.Validators.required],messages:{}},description:{fieldLabel:"DESCRIPTION",value:"",disabled:!1,validators:[],messages:{}},parentId:{fieldLabel:"PARENT_FOLDER",value:0,disabled:!1,validators:[],messages:{}},contentTypeName:{fieldLabel:"CONTENT_TYPE",value:"",disabled:!1,validators:[g.Validators.required],messages:{}},menuIndex:{fieldLabel:"MENU_INDEX",value:0,disabled:!1,validators:[],messages:{}},isActive:{fieldLabel:"ACTIVE",value:!1,disabled:!1,validators:[],messages:{}}},c}return Tt(e,t),e.prototype.ngOnInit=function(){this.localeList=this.appSettings.settings.localeList,this.localeList.length>0&&(this.localeDefault=this.localeList[0],this.localeCurrent=this.localeList[0]),this.itemId&&(this.model.id=this.itemId),this.isEditMode?this.model.parentId=this.currentCategory.parentId:this.model.parentId=this.currentCategory.id,this.model.contentTypeName=this.currentCategory.contentTypeName,this.isRoot&&(this.model.id=0,this.model.title=this.getLangString("ROOT_FOLDER"),this.model.name="root",this.formFields.title.disabled=!0,this.formFields.name.disabled=!0,this.formFields.isActive.disabled=!0),h.a.prototype.ngOnInit.call(this),this.getContentTypes()},e.prototype.onAfterGetData=function(){this.model.translations&&!Array.isArray(this.model.translations)||(this.model.translations={})},e.prototype.getContentTypes=function(){var t=this;this.contentTypesService.getListPage().subscribe(function(e){t.contentTypes=e.items},function(e){return t.errorMessage=e})},e.prototype.onCategorySelect=function(t){this.form.controls.parentId.setValue(t.node.id),this.model.parentId=t.node.id},e.prototype.save=function(){var t=this;if(this.submitted=!0,!this.form.valid)return this.onValueChanged("form"),void(this.submitted=!1);this.loading=!0,this.saveRequest().subscribe(function(){return t.closeModal()},function(e){t.errorMessage=e.error,t.submitted=!1,t.loading=!1})},It([Object(i.Input)(),Ct("design:type",m)],e.prototype,"currentCategory",void 0),It([Object(i.Input)(),Ct("design:type",Object)],e.prototype,"isRoot",void 0),e=It([Object(i.Component)({selector:"app-category-modal-content",template:n("3aJA")}),Ct("design:paramtypes",[g.FormBuilder,T.a,y.a,p.b,p.e,f.c,M,j.a])],e)}(h.a),Et=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Tt(e,t),e=It([Object(i.Component)({selector:"app-categories-list",template:n("cvm9")})],e)}(ht),wt=function(){function t(t,e,n,o,r){this.router=t,this.route=e,this.modalService=n,this.categoriesService=o,this.translateService=r,this.rootTitle="\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438",this.changeRequest=new i.EventEmitter,this.currentCategory=new m(null,!1,0,"root",this.rootTitle,"","",!0),this.categories=[],this.errorMessage="",this.categoryId=0,this.loading=!1}return t.prototype.getLangString=function(t){return this.translateService.store.translations[this.translateService.currentLang][t]||t},t.prototype.ngOnInit=function(){var t=this;this.getCategoriesRequest().subscribe(function(e){t.categories=e.items,t.route.paramMap.subscribe(function(e){t.categoryId=e.get("categoryId")?parseInt(e.get("categoryId"),10):0,t.selectCurrent()})},function(e){return t.errorMessage=e})},t.prototype.selectCurrent=function(){if(this.currentCategory.id!==this.categoryId){var t=Object(u.findIndex)(this.categories,{id:this.categoryId});t>-1?(this.currentCategory=Object(u.clone)(this.categories[t]),this.changeRequest.emit(this.currentCategory)):this.openRootCategory()}},t.prototype.getCategoriesRequest=function(){return this.categoriesService.getListPage(new U.a("menuIndex,title","asc",1))},t.prototype.getCategories=function(){var t=this;this.getCategoriesRequest().subscribe(function(e){t.categories=e.items,t.selectCurrent()},function(e){return t.errorMessage=e})},t.prototype.openModalCategory=function(t,e){var n=this;void 0===e&&(e=!1);var o=0===t||null===t,i=void 0!==t&&!e;this.modalRef=this.modalService.open(Ot,{size:"lg"}),this.modalRef.componentInstance.modalTitle=i?this.getLangString("EDIT_CATEGORY"):this.getLangString("ADD_NEW_CATEGORY"),this.modalRef.componentInstance.itemId=t||0,this.modalRef.componentInstance.isItemCopy=e||!1,this.modalRef.componentInstance.currentCategory=this.currentCategory,this.modalRef.componentInstance.isRoot=o,this.modalRef.componentInstance.isEditMode=i,this.modalRef.result.then(function(t){n.currentCategory.id=null,n.getCategories()},function(t){})},t.prototype.updateCategoryData=function(t,e){var n=Object(u.findIndex)(this.categories,{id:t});if(-1!==n){var o=this.categories[n];o.parentId===e.parentId?Object.keys(o).forEach(function(t,n){e[t]&&(o[t]=e[t])}):this.getCategories()}},t.prototype.deleteCategoryItemConfirm=function(t){var e=this,n=Object(u.findIndex)(this.categories,{id:t});-1!==n&&(this.modalRef=this.modalService.open(yt.c),this.modalRef.componentInstance.modalTitle=this.getLangString("CONFIRM"),this.modalRef.componentInstance.modalContent=this.getLangString("YOU_SURE_YOU_WANT_DELETE_CATEGORY")+' "'+this.categories[n].title+'"?',this.modalRef.result.then(function(n){"accept"===n&&e.deleteCategoryItem(t)},function(t){}))},t.prototype.deleteCategoryItem=function(t){var e=this;this.loading=!0,this.categoriesService.deleteItem(t).subscribe(function(t){e.categoryId=0,e.selectCurrent(),e.getCategories(),e.loading=!1},function(t){t.error&&(e.errorMessage=t.error),e.loading=!1})},t.prototype.openRootCategory=function(){this.currentCategory=new m(null,!1,0,"root",this.rootTitle,"","",!0),this.changeRequest.emit(this.currentCategory)},t.prototype.goToRootCategory=function(){this.router.navigate(["/catalog/category/0"])},t.prototype.selectCategory=function(t){this.router.navigate(["/catalog/category",t.id])},t.prototype.copyCategory=function(){this.openModalCategory(this.currentCategory.id,!0)},It([Object(i.Input)(),Ct("design:type",Object)],t.prototype,"rootTitle",void 0),It([Object(i.Output)(),Ct("design:type",Object)],t.prototype,"changeRequest",void 0),t=It([Object(i.Component)({selector:"app-categories-menu",template:n("wweR")}),Ct("design:paramtypes",[l.Router,l.ActivatedRoute,p.c,T.a,f.c])],t)}();n.d(e,"CatalogModule",function(){return Mt});var _t=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},Mt=function(){function t(){}return t=_t([Object(i.NgModule)({imports:[r.CommonModule,s.a,bt],declarations:[d,$,rt,ut,ht,Et,wt,Ot,B,it,pt],providers:[P,tt,y.a,M,Z,T.a,F],entryComponents:[Ot,B,it,pt]})],t)}()},"7yzz":function(t,e){t.exports='<div class="mb-3">\n\n    <div>\n        <div class="float-md-left">\n\n            <app-categories-menu (changeRequest)="openCategory($event)"></app-categories-menu>\n\n        </div>\n        <div class="float-md-right">\n\n            <div ngbDropdown class="d-block d-md-inline-block mb-2 mb-md-0" placement="bottom-right">\n                <button class="btn btn-info d-block d-md-inline-block width-100 width-md-auto" ngbDropdownToggle>\n                    <span>{{\'BATCH_ACTIONS\' | translate}}</span>\n                </button>\n                <div ngbDropdownMenu>\n                    <button class="dropdown-item" (click)="blockSelected()">{{\'DISABLE_ENABLE\' | translate}}</button>\n                    <button class="dropdown-item" (click)="deleteSelected()">{{\'DELETE\' | translate}}</button>\n                </div>\n            </div>\n            <button type="button" class="btn btn-success btn-wide d-block d-md-inline-block width-100 width-md-auto ml-md-2" (click)="modalOpen()">\n                <i class="icon-plus"></i>\n                &nbsp;\n                <span>{{\'ADD\' | translate}}</span>\n            </button>\n\n        </div>\n        <div class="clearfix"></div>\n    </div>\n\n</div>\n\n<app-table\n        [items]="items"\n        [(selectedIds)]="selectedIds"\n        [collectionSize]="collectionSize"\n        [queryOptions]="queryOptions"\n        [tableFields]="tableFields"\n        [(loading)]="loading"\n        (actionRequest)="actionRequest($event)" #table></app-table>\n'},"8tLm":function(t,e){t.exports='<div class="mb-3">\n    <div class="float-md-left">\n        <a class="btn btn-outline-secondary btn-wide mb-2 mb-md-0" [routerLink]="[\'/catalog\']">\n            <i class="icon-arrow-left"></i>\n            &nbsp;\n            <span>{{\'CATALOG\' | translate}}</span>\n        </a>\n    </div>\n    <div class="float-md-right">\n\n        <div ngbDropdown class="d-block d-md-inline-block" placement="bottom-right">\n            <button class="btn btn-info d-block d-md-inline-block width-100 width-md-auto mb-2 mb-md-0" ngbDropdownToggle>\n                <span>{{\'BATCH_ACTIONS\' | translate}}</span>\n            </button>\n            <div ngbDropdownMenu>\n                <button class="dropdown-item" (click)="blockSelected()">{{\'DISABLE_ENABLE\' | translate}}</button>\n                <button class="dropdown-item" (click)="deleteSelected()">{{\'DELETE\' | translate}}</button>\n            </div>\n        </div>\n        <button type="button" class="btn btn-success btn-wide d-block d-md-inline-block width-100 width-md-auto ml-md-2" (click)="modalOpen()">\n            <i class="icon-plus"></i>\n            &nbsp;\n            <span>{{\'ADD\' | translate}}</span>\n        </button>\n\n    </div>\n    <div class="clearfix"></div>\n</div>\n\n<app-table\n        [items]="items"\n        [(selectedIds)]="selectedIds"\n        [collectionSize]="collectionSize"\n        [queryOptions]="queryOptions"\n        [tableFields]="tableFields"\n        [isCloneAllowed]="true"\n        [(loading)]="loading"\n        (actionRequest)="actionRequest($event)" #table></app-table>\n'},Pq0m:function(t,e){t.exports='<div class="modal-header d-block">\n    <div class="d-block float-right">\n        <button type="button" class="btn btn-secondary" (click)="activeModal.dismiss()">\n            <span>{{\'CLOSE\' | translate}}</span>\n        </button>\n    </div>\n    <h4 class="modal-title">{{modalTitle}}</h4>\n</div>\n\n<form [formGroup]="form" [class.loading]="loading">\n    <div class="modal-body py-0">\n\n        <div class="row form-group" [class.form-group-message]="formErrors.parentId">\n            <div class="col-md-5">\n                <label for="fieldCategory">{{\'PARENT_FOLDER\' | translate}}</label>\n            </div>\n            <div class="col-md-7">\n\n                <app-select-parent-dropdown\n                        name="parentId"\n                        formControlName="parentId"\n                        [(ngModel)]="model.parentId"\n                        (ngModelChange)="onChangeContentType()"></app-select-parent-dropdown>\n\n                <div *ngIf="formErrors.parentId" class="alert alert-danger">\n                    {{formErrors.parentId}}\n                </div>\n            </div>\n        </div>\n\n        <div class="row form-group" [class.form-group-message]="formErrors.isActive">\n            <div class="col-md-7 ml-md-auto">\n                <div class="card card-body p-2 pl-3">\n\n                    <div class="custom-control custom-checkbox m-0">\n                        <input type="checkbox" class="custom-control-input" id="fieldIsActive" value="1" name="isActive" formControlName="isActive" [(ngModel)]="model.isActive">\n                        <span class="custom-control-indicator"></span>\n                        <label class="custom-control-label" for="fieldIsActive">{{\'ACTIVE\' | translate}}</label>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <app-input-field-renderer\n                [(fields)]="currentContentType.fields"\n                [(groups)]="currentContentType.groups"\n                [(formErrors)]="formErrors"\n                [(validationMessages)]="validationMessages"\n                [(model)]="model"\n                [(form)]="form"\n                [(files)]="files"\n                [localeFieldsAllowed]="localeFieldsAllowed"\n                [isLocalizationActive]="localeCurrent !== localeDefault"></app-input-field-renderer>\n\n        <div class="alert alert-danger mt-3 mb-0" [hidden]="!errorMessage">\n            <button type="button" class="close" (click)="errorMessage = \'\'">\n                <span aria-hidden="true">&times;</span>\n            </button>\n            {{errorMessage}}\n        </div>\n\n    </div>\n\n    <div class="modal-footer d-block">\n        <div class="float-right" *ngIf="localeList.length > 1">\n            <button type="button" class="btn btn-success mr-2" ngbTooltip="{{\'SAVE\' | translate}}" placement="left"\n                    [hidden]="localeCurrent == localeDefault"\n                    (click)="saveTranslations($event)">\n                <i class="icon-check"></i>\n            </button>\n            <div class="btn-group btn-group-toggle" ngbRadioGroup name="radioBasic" [(ngModel)]="localeCurrent" (ngModelChange)="onLocaleSwitch()" [ngModelOptions]="{standalone: true}">\n                <label ngbButtonLabel class="btn-secondary" *ngFor="let localeName of localeList">\n                    <input ngbButton type="radio" [value]="localeName">\n                    {{localeName}}\n                </label>\n            </div>\n        </div>\n        <button type="button" class="btn btn-success btn-wide" [disabled]="submitted || isSaveButtonDisabled" (click)="save()">\n            <span>{{\'SAVE\' | translate}}</span>\n        </button>\n        <button type="button" class="btn btn-secondary btn-wide" (click)="activeModal.dismiss()">\n            <span>{{\'CANCEL\' | translate}}</span>\n        </button>\n    </div>\n\n</form>'},cvm9:function(t,e){t.exports='<div class="pos-absolute-right pos-absolute-right2 no-events" *ngIf="items.length > 0 && parentId != 0">\n    <i class="icon-keyboard_arrow_right"></i>\n</div>\n<ul class="dropdown-menu dropdown-menu-second" *ngIf="items.length > 0" [class.shadow]="parentId != 0">\n    <li class="dropdown-item active" *ngFor="let item of items" [class.active]="item.id == currentId"\n        [class.current-level]="getIsActiveParent(item.id)">\n        <a href="" [routerLink]="[\'/catalog/category/\', item.id]" [class.item-inactive]="!item.isActive">\n            {{item.title}}\n        </a>\n        <app-categories-list [inputItems]="inputItems" [parentId]="item.id" [currentId]="currentId"></app-categories-list>\n    </li>\n</ul>'},ivCk:function(t,e){t.exports='<div class="card">\n    <div class="card-body">\n\n        <div class="float-md-left">\n            <h3>\n                <i class="icon-layers"></i>\n                &nbsp;\n                <span>{{\'CATALOG\' | translate}}</span>\n            </h3>\n        </div>\n        <div class="text-md-right">\n            <a class="btn btn-outline-primary d-block d-md-inline-block mb-2 mb-md-0" href="" [routerLink]="[\'content_types\']" routerLinkActive="active">\n                <i class="icon-box"></i>\n                &nbsp;\n                <span>{{\'CONTENT_TYPES\' | translate}}</span>\n            </a>\n            <a class="btn btn-outline-primary d-block d-md-inline-block ml-md-2" href="" [routerLink]="[\'field_types\']" routerLinkActive="active">\n                <i class="icon-toggle"></i>\n                &nbsp;\n                <span>{{\'FIELD_TYPES\' | translate}}</span>\n            </a>\n        </div>\n\n        <div class="clearfix"></div>\n        <hr>\n\n        <router-outlet></router-outlet>\n\n    </div>\n</div>\n'},w9YM:function(t,e){t.exports='<div class="modal-header d-block">\n    <div class="d-block float-right">\n        <button type="button" class="btn btn-secondary" (click)="activeModal.dismiss()">\n            <span>{{\'CLOSE\' | translate}}</span>\n        </button>\n    </div>\n    <h4 class="modal-title">{{modalTitle}}</h4>\n</div>\n\n<div class="modal-body py-0" [class.loading]="loading">\n\n    <form #formElement="ngForm" [formGroup]="form">\n        <div class="row">\n            <div class="col-md-6">\n\n                <div class="form-group form-group-message" [class.form-group-message]="formErrors.title">\n                    <label for="fieldTitle" class="label-filled">{{\'TITLE\' | translate}}</label>\n                    <input type="text" class="form-control" name="title" formControlName="title" id="fieldTitle" [(ngModel)]="model.title">\n                    <div *ngIf="formErrors.title" class="alert alert-danger">\n                        {{formErrors.title}}\n                    </div>\n                </div>\n\n                <div class="form-group" [class.form-group-message]="formErrors.name">\n                    <label for="fieldName" class="label-filled">{{\'SYSTEM_NAME\' | translate}}</label>\n                    <div class="input-group">\n                        <input type="text" class="form-control" name="name" formControlName="name" id="fieldName" [(ngModel)]="model.name">\n                        <div class="input-group-append">\n                            <button type="button" class="btn btn-secondary" ngbTooltip="{{\'GENERATE\' | translate}}" (click)="generateName(model)">\n                                <i class="icon-reload"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div *ngIf="formErrors.name" class="alert alert-danger">\n                        {{formErrors.name}}\n                    </div>\n                </div>\n\n                <div class="form-group row">\n                    <div class="col-12">\n\n                        <div class="card card-body p-2 pl-3">\n\n                            <div class="custom-control custom-checkbox m-0">\n                                <input type="checkbox" class="custom-control-input" id="fieldIsActive" value="1" name="isActive" formControlName="isActive" [(ngModel)]="model.isActive">\n                                <label class="custom-control-label" for="fieldIsActive">{{\'ACTIVE\' | translate}}</label>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n            <div class="col-md-6">\n                <div class="form-group">\n                    <label for="fieldDescription" class="label-filled">{{\'DESCRIPTION\' | translate}}</label>\n                    <textarea class="form-control" rows="5" name="description" formControlName="description" id="fieldDescription" [(ngModel)]="model.description"></textarea>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    <ngb-accordion [closeOthers]="false" activeIds="accordion-input-options" class="ngb-accordion" #accordion="ngbAccordion">\n\n        \x3c!-- Input --\x3e\n        <ngb-panel id="accordion-input-options" [title]="\'INPUT_OPTIONS\' | translate">\n            <ng-template ngbPanelContent>\n\n                <table class="table table-bordered table-divided mb-0">\n                    <thead>\n                        <tr>\n                            <th>\n                                {{\'SYSTEM_NAME\' | translate}}\n                            </th>\n                            <th>\n                                {{\'TITLE\' | translate}}\n                            </th>\n                            <th>\n                                {{\'DEFAULT_VALUE\' | translate}}\n                            </th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor="let item of model.inputProperties; let index=index">\n                            <td>\n                                <input type="text" class="form-control" [(ngModel)]="item.name" name="name">\n                            </td>\n                            <td class="text-center">\n                                <input type="text" class="form-control" [(ngModel)]="item.title" name="title">\n                            </td>\n                            <td class="text-center">\n                                <input type="text" class="form-control" [(ngModel)]="item.default_value" name="default_value">\n                            </td>\n                            <td class="text-center">\n                                <button type="button" class="btn btn-secondary" (click)="deleteRow(index, \'inputProperties\')" ngbTooltip="{{\'DELETE\' | translate}}">\n                                    <i class="icon-cross"></i>\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tfoot>\n                        <tr class="bg-faded">\n                            <td colspan="4" class="text-center">\n                                <button type="button" class="btn btn-secondary" (click)="addRow(\'inputProperties\')">\n                                    <i class="icon-plus"></i>\n                                    &nbsp;\n                                    {{\'ADD\' | translate}}\n                                </button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n\n            </ng-template>\n        </ngb-panel>\n        \x3c!-- /Input --\x3e\n        \x3c!-- Output --\x3e\n        <ngb-panel id="accordion-output-options" [title]="\'OUTPUT_OPTIONS\' | translate">\n            <ng-template ngbPanelContent>\n\n                <table class="table table-bordered table-divided mb-0">\n                    <thead>\n                        <tr>\n                            <th>\n                                {{\'SYSTEM_NAME\' | translate}}\n                            </th>\n                            <th>\n                                {{\'TITLE\' | translate}}\n                            </th>\n                            <th>\n                                {{\'DEFAULT_VALUE\' | translate}}\n                            </th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor="let item of model.outputProperties; let index=index">\n                            <td>\n                                <input type="text" class="form-control" [(ngModel)]="item.name" name="name">\n                            </td>\n                            <td class="text-center">\n                                <input type="text" class="form-control" [(ngModel)]="item.title" name="title">\n                            </td>\n                            <td class="text-center">\n                                <input type="text" class="form-control" [(ngModel)]="item.default_value" name="default_value">\n                            </td>\n                            <td class="text-center">\n                                <button type="button" class="btn btn-secondary" (click)="deleteRow(index, \'outputProperties\')" ngbTooltip="{{\'DELETE\' | translate}}">\n                                    <i class="icon-cross"></i>\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tfoot>\n                        <tr class="bg-faded">\n                            <td colspan="4" class="text-center">\n                                <button type="button" class="btn btn-secondary" (click)="addRow(\'outputProperties\')">\n                                    <i class="icon-plus"></i>\n                                    &nbsp;\n                                    {{\'ADD\' | translate}}\n                                </button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n\n            </ng-template>\n        </ngb-panel>\n        \x3c!-- /Output --\x3e\n    </ngb-accordion>\n\n    <div class="alert alert-danger mt-3 mb-0" [hidden]="!errorMessage">\n        <button type="button" class="close" (click)="errorMessage = \'\'">\n            <span aria-hidden="true">&times;</span>\n        </button>\n        {{errorMessage}}\n    </div>\n\n</div>\n<div class="modal-footer d-block">\n    <button type="button" class="btn btn-success btn-wide" [disabled]="submitted" (click)="save()">\n        <span>{{\'SAVE\' | translate}}</span>\n    </button>\n    <button type="button" class="btn btn-secondary btn-wide" (click)="activeModal.dismiss()">\n        <span>{{\'CANCEL\' | translate}}</span>\n    </button>\n</div>\n'},wweR:function(t,e){t.exports='<div class="d-block d-md-inline-block dropdown">\n    <button class="btn btn-secondary dropdown-toggle dropdown-toggle-hover d-block d-md-inline-block width-100 width-md-auto mb-2 mb-md-0">\n        <i class="icon-folder"></i>\n        {{currentCategory.title}}\n    </button>\n    <div class="dropdown-menu shadow" #categoriesDropdown>\n        <div [class.loading]="loading">\n\n            <div class="dropdown-header">\n                <button class="btn btn-sm btn-secondary mr-2" ngbTooltip="{{\'OPEN_ROOT_CATEGORY\' | translate}}" (click)="goToRootCategory()" *ngIf="currentCategory.id > 0">\n                    <i class="icon-home"></i>\n                </button>\n                <button type="button" class="btn btn-sm btn-secondary mr-2" ngbTooltip="{{\'ADD_NEW_CATEGORY\' | translate}}" (click)="openModalCategory()">\n                    <i class="icon-plus"></i>\n                </button>\n                <button type="button" class="btn btn-sm btn-secondary mr-2" ngbTooltip="{{\'EDIT_CATEGORY\' | translate}}" (click)="openModalCategory(currentCategory.id)">\n                    <i class="icon-pencil"></i>\n                </button>\n                <button type="button" class="btn btn-sm btn-secondary mr-2" ngbTooltip="{{\'COPY_CATEGORY\' | translate}}" (click)="copyCategory()" [hidden]="!currentCategory.id">\n                    <i class="icon-stack"></i>\n                </button>\n                <button type="button" class="btn btn-sm btn-secondary mr-2" ngbTooltip="{{\'DELETE_CATEGORY\' | translate}}" (click)="deleteCategoryItemConfirm(currentCategory.id)" [hidden]="!currentCategory.id">\n                    <i class="icon-cross"></i>\n                </button>\n            </div>\n            <div class="dropdown-divider"></div>\n            <div class="dropdown-header" *ngIf="categories.length == 0">\n                No categories.\n            </div>\n\n            <app-categories-list [inputItems]="categories" [parentId]="0" [currentId]="currentCategory.id"></app-categories-list>\n\n            <div class="clearfix"></div>\n        </div>\n    </div>\n</div>'},xBc3:function(t,e){t.exports='<div class="modal-header d-block">\n    <div class="d-block float-right">\n        <button type="button" class="btn btn-secondary" (click)="activeModal.dismiss()">\n            <span>{{\'CLOSE\' | translate}}</span>\n        </button>\n    </div>\n    <h4 class="modal-title">{{modalTitle}}</h4>\n</div>\n\n<ng-template #confirmPopover let-confirm="confirm" let-p="p" let-msg="message">\n    <p class="text-center">Delete this item?</p>\n    <div class="alert alert-danger p-2" *ngIf="msg">{{msg}}</div>\n    <div class="text-center">\n        <button type="button" class="btn btn-success btn-sm" (click)="confirm()">Yes</button>\n        &nbsp;\n        <button type="button" class="btn btn-secondary btn-sm" (click)="p.close()">No</button>\n    </div>\n</ng-template>\n\n<form [class.loading]="loading">\n\n    <div class="modal-body py-0">\n\n        <div class="row mb-3">\n\n            \x3c!-- ContentType form --\x3e\n            <div class="col-lg-4" [formGroup]="form">\n\n                <div class="form-group" [class.form-group-message]="formErrors.title">\n                    <label class="label-filled">\n                        {{\'TITLE\' | translate}}\n                    </label>\n                    <input type="text" class="form-control" name="title" formControlName="title" [(ngModel)]="model.title">\n                    <div *ngIf="formErrors.title" class="alert alert-danger">\n                        {{formErrors.title}}\n                    </div>\n                </div>\n\n                <div class="form-group" [class.form-group-message]="formErrors.name">\n                    <label for="fieldName" class="label-filled">\n                        {{\'SYSTEM_NAME\' | translate}}\n                    </label>\n                    <div class="input-group">\n                        <input type="text" class="form-control" name="name" formControlName="name" id="fieldName" [(ngModel)]="model.name">\n                        <div class="input-group-append">\n                            <button type="button" class="btn btn-secondary" ngbTooltip="{{\'GENERATE\' | translate}}" (click)="generateName(model)">\n                                <i class="icon-reload"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div *ngIf="formErrors.name" class="alert alert-danger">\n                        {{formErrors.name}}\n                    </div>\n                </div>\n\n                <div class="form-group">\n                    <label class="label-filled">\n                        {{\'DESCRIPTION\' | translate}}\n                    </label>\n                    <textarea type="text" class="form-control" rows="3" name="description" formControlName="description" [(ngModel)]="model.description"></textarea>\n                </div>\n\n                <div class="form-group row" [class.form-group-message]="formErrors.collection">\n                    <div class="col-12">\n\n                        <div class="form-group mb-0">\n                            <label class="label-filled">{{\'COLLECTION\' | translate}}</label>\n\n                            <div class="input-group">\n                                <select class="form-control form-control-sm" name="collection" formControlName="collection" [(ngModel)]="model.collection">\n                                    <option value="{{collection}}" *ngFor="let collection of collections">{{collection}}</option>\n                                </select>\n                                <div class="input-group-append">\n                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'ADD_COLLECTION\' | translate}}" (click)="displayToggle(addCollectionBlock); addCollectionField.value = \'\'; onValueChanged(); addCollectionField.focus()">\n                                        <i class="icon-plus"></i>\n                                    </button>\n                                </div>\n                                <div class="input-group-append" [ngbPopover]="confirmPopover" #buttonDeleteCollection="ngbPopover" triggers="manual">\n                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'DELETE\' | translate}}" (click)="deleteCollection(buttonDeleteCollection)">\n                                        <i class="icon-cross"></i>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div class="card p-1 mt-2" #addCollectionBlock style="display: none;" [class.form-group-message]="formErrors.newCollection">\n                                <input type="text" class="form-control form-control-sm" formControlName="newCollection" #addCollectionField>\n                                <div *ngIf="formErrors.newCollection" class="alert alert-danger mb-1">\n                                    {{formErrors.newCollection}}\n                                </div>\n\n                                <div class="text-right mt-1">\n                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addCollection()">\n                                        {{\'ADD\' | translate}}\n                                    </button>\n                                    &nbsp;\n                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addCollectionBlock.style.display = \'none\'; formErrors.newCollection = \'\'">\n                                        {{\'CANCEL\' | translate}}\n                                    </button>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class="form-group row">\n                    <div class="col-12">\n\n                        <div class="card card-body p-2 pl-3">\n\n                            <div class="custom-control custom-checkbox m-0">\n                                <input type="checkbox" class="custom-control-input" id="fieldIsActive" value="1" name="isActive" formControlName="isActive" [(ngModel)]="model.isActive">\n                                <label class="custom-control-label" for="fieldIsActive">{{\'ACTIVE\' | translate}}</label>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n            \x3c!-- /ContentType form --\x3e\n\n            \x3c!-- Field form --\x3e\n            <div class="col-lg-8" [formGroup]="fieldForm">\n\n                <label class="label-filled" [hidden]="action != \'add_field\'">\n                    {{\'ADD_FIELD\' | translate}}\n                </label>\n                <label class="label-filled" [hidden]="action != \'edit_field\'">\n                    {{\'EDIT_FIELD\' | translate}}\n                </label>\n\n                <div class="card">\n                    <div class="card-body">\n\n                        <div class="form-group row" [class.form-group-message]="formErrors.fld_title">\n                            <div class="col-md-5">\n                                <label>{{\'TITLE\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n                                <input type="text" class="form-control form-control-sm" name="field_title" formControlName="title" [(ngModel)]="fieldModel.title">\n                                <div *ngIf="formErrors.fld_title" class="alert alert-danger">\n                                    {{formErrors.fld_title}}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="form-group row" [class.form-group-message]="formErrors.fld_name">\n                            <div class="col-md-5">\n                                <label>{{\'SYSTEM_NAME\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n\n                                <div class="input-group">\n                                    <input type="text" class="form-control form-control-sm" name="field_name" formControlName="name" [(ngModel)]="fieldModel.name">\n                                    <div class="input-group-append">\n                                        <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'GENERATE\' | translate}}" (click)="generateName(fieldModel)">\n                                            <i class="icon-reload"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div *ngIf="formErrors.fld_name" class="alert alert-danger">\n                                    {{formErrors.fld_name}}\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="form-group row">\n                            <div class="col-md-5">\n                                <label>{{\'DESCRIPTION\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n                                <textarea type="text" class="form-control form-control-sm" rows="3" name="field_description" formControlName="description" [(ngModel)]="fieldModel.description"></textarea>\n                            </div>\n                        </div>\n\n                        <div class="form-group row" [class.form-group-message]="formErrors.fld_inputType">\n                            <div class="col-md-5">\n                                <label>{{\'INPUT_TYPE\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n\n                                <div class="input-group">\n                                    <select class="form-control form-control-sm" name="field_inputType" formControlName="inputType" [(ngModel)]="fieldModel.inputType" (ngModelChange)="selectFieldTypeProperties(\'input\')" [ngbTooltip]="getFieldTypeProperty(fieldModel.inputType, \'description\')" placement="left">\n                                        <option value=""></option>\n                                        <option value="{{fieldType.name}}" *ngFor="let fieldType of fieldTypes">{{fieldType.title}}</option>\n                                    </select>\n                                    <div class="input-group-append">\n                                        <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'OPTIONS\' | translate}}" (click)="displayToggle(inputTypeOptionsBlock)">\n                                            <i class="icon-cog"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div *ngIf="formErrors.fld_inputType" class="alert alert-danger">\n                                    {{formErrors.fld_inputType}}\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="card card-body bg-light mb-3" #inputTypeOptionsBlock style="display: none;" [hidden]="!fieldModel.inputType">\n                            <div>\n                                <div class="alert alert-secondary small" [hidden]="fieldTypeProperties.input.length > 0">\n                                    There are no parameters.\n                                </div>\n                                <div class="row form-group" *ngFor="let property of fieldTypeProperties.input">\n                                    <div class="col-md-5">\n                                        {{property.title}}\n                                    </div>\n                                    <div class="col-md-7">\n                                        <input type="text" class="form-control form-control-sm" [(ngModel)]="fieldModel.inputProperties[property.name]" [ngModelOptions]="{standalone: true}">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="text-right mt-1">\n                                <button type="button" class="btn btn-secondary btn-sm" (click)="inputTypeOptionsBlock.style.display = \'none\';">\n                                    {{\'CLOSE\' | translate}}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="form-group row" [class.form-group-message]="formErrors.fld_outputType">\n                            <div class="col-md-5">\n                                <label>{{\'OUTPUT_TYPE\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n\n                                <div class="input-group">\n                                    <select class="form-control form-control-sm" name="field_outputType" formControlName="outputType" [(ngModel)]="fieldModel.outputType" (ngModelChange)="selectFieldTypeProperties(\'output\')" [ngbTooltip]="getFieldTypeProperty(fieldModel.outputType, \'description\')" placement="left">\n                                        <option value=""></option>\n                                        <option value="{{fieldType.name}}" *ngFor="let fieldType of fieldTypes">{{fieldType.title}}</option>\n                                    </select>\n                                    <div class="input-group-append">\n                                        <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'OPTIONS\' | translate}}" (click)="displayToggle(outputTypeOptionsBlock)">\n                                            <i class="icon-cog"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div *ngIf="formErrors.fld_outputType" class="alert alert-danger">\n                                    {{formErrors.fld_outputType}}\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="card card-body bg-light mb-3" #outputTypeOptionsBlock style="display: none;" [hidden]="!fieldModel.outputType">\n                            <div class="alert alert-secondary small" [hidden]="fieldTypeProperties.output.length > 0">\n                                There are no parameters.\n                            </div>\n                            <div class="row form-group" *ngFor="let property of fieldTypeProperties.output">\n                                <div class="col-md-5">\n                                    {{property.title}}\n                                </div>\n                                <div class="col-md-7">\n                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="fieldModel.outputProperties[property.name]" [ngModelOptions]="{standalone: true}">\n                                </div>\n                            </div>\n                            <div class="text-right mt-1">\n                                <button type="button" class="btn btn-secondary btn-sm" (click)="outputTypeOptionsBlock.style.display = \'none\'">\n                                    {{\'CLOSE\' | translate}}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class="form-group row">\n                            <div class="col-md-5">\n                                <label>{{\'GROUP\' | translate}}</label>\n                            </div>\n                            <div class="col-md-7">\n\n                                <div [class.form-group-message]="formErrors.fld_group">\n                                    <div class="input-group input-group-sm">\n                                        <select class="form-control" name="field_group" formControlName="group" [(ngModel)]="fieldModel.group">\n                                            <option value=""></option>\n                                            <option [value]="groupName" *ngFor="let groupName of model.groups">{{groupName}}</option>\n                                        </select>\n                                        <div class="input-group-append">\n                                            <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'ADD_GROUP\' | translate}}" (click)="displayToggle(addGroupBlock); addGroupField.value = \'\'; addGroupField.focus()">\n                                                <i class="icon-plus"></i>\n                                            </button>\n                                        </div>\n                                        <div class="input-group-append">\n                                            <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'DELETE_GROUP\' | translate}}" (click)="deleteGroup()">\n                                                <i class="icon-cross"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div *ngIf="formErrors.fld_group" class="alert alert-danger">\n                                        {{formErrors.fld_group}}\n                                    </div>\n\n                                    <div class="card p-1 mt-2" #addGroupBlock style="display: none;" [class.form-group-message]="formErrors.fld_newGroup">\n                                        <input type="text" class="form-control form-control-sm" #addGroupField formControlName="newGroup">\n                                        <div *ngIf="formErrors.fld_newGroup" class="alert alert-danger mb-1">\n                                            {{formErrors.fld_newGroup}}\n                                        </div>\n                                        <div class="text-right mt-1">\n                                            <button type="button" class="btn btn-secondary btn-sm" (click)="addGroup();">\n                                                {{\'ADD\' | translate}}\n                                            </button>\n                                            &nbsp;\n                                            <button type="button" class="btn btn-secondary btn-sm" (click)="addGroupBlock.style.display = \'none\'; formErrors.fld_newGroup = \'\'">\n                                                {{\'CANCEL\' | translate}}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="form-group row mb-0">\n                            <div class="col-md-7 offset-md-5">\n\n                                <div class="custom-control custom-checkbox">\n                                    <input type="checkbox" class="custom-control-input" id="fieldRequired" value="1" name="required" formControlName="required" [(ngModel)]="fieldModel.required">\n                                    <label class="custom-control-label" for="fieldRequired">{{\'REQUIRED\' | translate}}</label>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="form-group row mb-0">\n                            <div class="col-md-7 offset-md-5">\n\n                                <div class="custom-control custom-checkbox">\n                                    <input type="checkbox" class="custom-control-input" id="fieldShowInTable" value="1" name="showInTable" formControlName="showInTable" [(ngModel)]="fieldModel.showInTable">\n                                    <label class="custom-control-label" for="fieldShowInTable">{{\'SHOW_IN_TABLE\' | translate}}</label>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="form-group row mb-0">\n                            <div class="col-md-7 offset-md-5">\n\n                                <div class="custom-control custom-checkbox">\n                                    <input type="checkbox" class="custom-control-input" id="fieldShowInList" value="1" name="showInList" formControlName="showInList" [(ngModel)]="fieldModel.showInList">\n                                    <label class="custom-control-label" for="fieldShowInList">{{\'SHOW_IN_LIST\' | translate}}</label>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="form-group row mb-0">\n                            <div class="col-md-7 offset-md-5">\n\n                                <div class="custom-control custom-checkbox">\n                                    <input type="checkbox" class="custom-control-input" id="fieldIsFilter" value="1" name="isFilter" formControlName="isFilter" [(ngModel)]="fieldModel.isFilter">\n                                    <label class="custom-control-label" for="fieldIsFilter">{{\'SHOW_IN_FILTER\' | translate}}</label>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="alert alert-danger mt-3 mb-3" [hidden]="!errorFieldMessage">\n                            <button type="button" class="close" (click)="errorFieldMessage = \'\'">\n                                <span aria-hidden="true">&times;</span>\n                            </button>\n                            {{errorFieldMessage}}\n                        </div>\n\n                        <div class="mt-3">\n                            <button type="button" class="btn btn-sm btn-info btn-wide" (click)="submitField()" [hidden]="action != \'add_field\'">\n                                <i class="icon-plus"></i>\n                                {{\'ADD_FIELD\' | translate}}\n                            </button>\n                            <button type="button" class="btn btn-sm btn-success btn-wide" (click)="submitField()" [hidden]="action != \'edit_field\'">\n                                <i class="icon-check"></i>\n                                {{\'SAVE_FIELD\' | translate}}\n                            </button>\n                            &nbsp;\n                            <button type="button" class="btn btn-sm btn-secondary btn-wide" (click)="editFieldCancel()">\n                                {{\'CANCEL\' | translate}}\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n            \x3c!-- /Field form --\x3e\n\n        </div>\n\n        \x3c!-- Fields --\x3e\n        <ngb-accordion [closeOthers]="true" activeIds="accordion-content-type-fields" class="ngb-accordion" #accordion="ngbAccordion">\n            <ngb-panel id="accordion-content-type-fields" [title]="\'FIELDS\' | translate">\n                <ng-template ngbPanelContent>\n\n                    <div #blockFieldList>\n                        <div>\n                            <div class="text-right mb-2" [hidden]="model.fields.length < 2">\n                                <button type="button" class="btn btn-sm btn-secondary" (click)="sortingInit(\'listOrder\', \'showInList\', $event)">\n                                    <i class="icon-shuffle"></i>\n                                    {{\'SORT_FIELDS_LIST\' | translate}}\n                                </button>\n                                &nbsp;\n                                <button type="button" class="btn btn-sm btn-secondary" (click)="sortingInit(\'filterOrder\', \'isFilter\', $event)">\n                                    <i class="icon-shuffle"></i>\n                                    {{\'SORT_FILTERS\' | translate}}\n                                </button>\n                            </div>\n\n                            <div class="table-responsive">\n                                <table class="table table-striped table-divided mb-0">\n                                    <thead>\n                                    <tr>\n                                        <th>{{\'TITLE\' | translate}}</th>\n                                        <th>{{\'INPUT_TYPE\' | translate}}</th>\n                                        <th>{{\'GROUP\' | translate}}</th>\n                                        <th>{{\'REQUIRED\' | translate}}?</th>\n                                        <th>{{\'SHOW_IN_TABLE\' | translate}}?</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr class="show-on-hover-parent" *ngFor="let field of model.fields; let index=index">\n                                        <td>\n                                            {{field.title}}\n                                            <span class="text-muted">({{field.name}})</span>\n                                        </td>\n                                        <td>\n                                            {{field.inputType}}\n                                        </td>\n                                        <td>\n                                            {{field.group}}\n                                        </td>\n                                        <td>\n                                            <app-output-field [value]="field.required" outputType="boolean"></app-output-field>\n                                        </td>\n                                        <td>\n                                            <div class="relative">\n                                                <div class="show-on-hover-right">\n                                                    <button type="button" class="btn btn-secondary btn-sm ml-2" (click)="fieldMove(index, \'up\')" ngbTooltip="{{\'MOVE_UP\' | translate}}" *ngIf="index > 0">\n                                                        <i class="icon-arrow-up"></i>\n                                                    </button>\n                                                    <button type="button" class="btn btn-secondary btn-sm ml-2" (click)="fieldMove(index, \'down\')" ngbTooltip="{{\'MOVE_DOWN\' | translate}}" *ngIf="index < model.fields.length - 1">\n                                                        <i class="icon-arrow-down"></i>\n                                                    </button>\n                                                    <button type="button" class="btn btn-secondary btn-sm ml-2" (click)="editField(field)" [hidden]="field.name == currentFieldName" ngbTooltip="{{\'EDIT\' | translate}}">\n                                                        <i class="icon-pencil"></i>\n                                                    </button>\n                                                    <button type="button" class="btn btn-secondary btn-sm ml-2" (click)="copyField(field)" ngbTooltip="{{\'COPY\' | translate}}">\n                                                        <i class="icon-stack"></i>\n                                                    </button>\n                                                    <button type="button" class="btn btn-secondary btn-sm ml-2" (click)="deleteField(field)" [hidden]="field.name == currentFieldName" ngbTooltip="{{\'DELETE\' | translate}}">\n                                                        <i class="icon-cross"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n\n                                            <app-output-field [value]="field.showInTable" outputType="boolean"></app-output-field>\n                                        </td>\n                                    </tr>\n                                    <tr [hidden]="model.fields.length > 0" class="table-active">\n                                        <td colspan="5" class="text-center p-3">\n                                            {{\'EMPTY\' | translate}}\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n\n                    <app-sorting-dnd\n                            [(items)]="sortData"\n                            (save)="sortingApply($event)"\n                            (cancel)="sortingCancel()"></app-sorting-dnd>\n\n                </ng-template>\n            </ngb-panel>\n        </ngb-accordion>\n        \x3c!-- /Fields --\x3e\n\n        <div class="alert alert-danger mt-3 mb-0" [hidden]="!errorMessage">\n            <button type="button" class="close" (click)="errorMessage = \'\'">\n                <span aria-hidden="true">&times;</span>\n            </button>\n            {{errorMessage}}\n        </div>\n\n    </div>\n\n    <div class="modal-footer d-block">\n        <button type="button" class="btn btn-success btn-wide" [disabled]="submitted && form.valid" (click)="save()">\n            <span>{{\'SAVE\' | translate}}</span>\n        </button>\n        <button type="button" class="btn btn-secondary btn-wide" (click)="activeModal.dismiss()">\n            <span>{{\'CANCEL\' | translate}}</span>\n        </button>\n    </div>\n\n</form>'}}]);