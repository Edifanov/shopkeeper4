(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"24Yq":function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}(e("DqLj"))},"7wo0":function(t,n,e){"use strict";e.r(n);var s=e("CcnG"),a=e("Ip0R"),o=e("d2mR"),i=e("ZYCi"),l=e("LvDl"),c=e("24Yq"),r=function(){return function(t,n,e,s,a){this.changed=t,this.loading=n,this.values=e,this.defaultOptions=s,this.defaultValues=a}}(),d=e("wgQU"),g=e("b1TM"),p=e("A7o+"),S=function(t,n,e,s){var a,o=arguments.length,i=o<3?n:null===s?s=Object.getOwnPropertyDescriptor(n,e):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,s);else for(var l=t.length-1;l>=0;l--)(a=t[l])&&(i=(o<3?a(i):o>3?a(n,e,i):a(n,e))||i);return o>3&&i&&Object.defineProperty(n,e,i),i},u=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},b=function(){function t(t,n,e,s){this.messageService=t,this.settingsService=n,this.appSettings=e,this.translateService=s,this.loading=!1,this.forms={},this.composerPackages=[],this.composerPackageName="",this.composerPackageVersion="",this.settings={SETTINGS_MAIN:new r(!1,!0,[],null),SETTINGS_ORDER_STATUSES:new r(!1,!0,[],{template:{value:"userEmailStatus",type:"text"},color:{value:"#00aeff",type:"text"}}),SETTINGS_DELIVERY:new r(!1,!0,[],{price:{value:0,type:"number"},priceLimit:{value:0,type:"number"}}),SETTINGS_PAYMENT:new r(!1,!0,[],{value:{value:"",type:"text"}}),SETTINGS_CURRENCY:new r(!1,!0,[],{value:{value:"",type:"number"}}),SETTINGS_COMPOSER_PACKAGES:new r(!1,!0,[],null)},this.baseUrl=this.appSettings.settings.webApiUrl+"/"}return t.prototype.ngOnInit=function(){this.getSettings(),this.getComposerPackages()},t.prototype.getSettings=function(){var t=this;this.settingsService.getList().subscribe(function(n){n.SETTINGS_MAIN&&(t.settings.SETTINGS_MAIN.values=n.SETTINGS_MAIN,t.settings.SETTINGS_MAIN.defaultValues=Object(l.cloneDeep)(n.SETTINGS_MAIN),t.settings.SETTINGS_MAIN.loading=!1),n.SETTINGS_ORDER_STATUSES&&(t.settings.SETTINGS_ORDER_STATUSES.values=n.SETTINGS_ORDER_STATUSES,t.settings.SETTINGS_ORDER_STATUSES.defaultValues=Object(l.cloneDeep)(n.SETTINGS_ORDER_STATUSES),t.settings.SETTINGS_ORDER_STATUSES.loading=!1),n.SETTINGS_DELIVERY&&(t.settings.SETTINGS_DELIVERY.values=n.SETTINGS_DELIVERY,t.settings.SETTINGS_DELIVERY.defaultValues=Object(l.cloneDeep)(n.SETTINGS_DELIVERY),t.settings.SETTINGS_DELIVERY.loading=!1),n.SETTINGS_PAYMENT&&(t.settings.SETTINGS_PAYMENT.values=n.SETTINGS_PAYMENT,t.settings.SETTINGS_PAYMENT.defaultValues=Object(l.cloneDeep)(n.SETTINGS_PAYMENT),t.settings.SETTINGS_PAYMENT.loading=!1),n.SETTINGS_CURRENCY&&(t.settings.SETTINGS_CURRENCY.values=n.SETTINGS_CURRENCY,t.settings.SETTINGS_CURRENCY.defaultValues=Object(l.cloneDeep)(n.SETTINGS_CURRENCY),t.settings.SETTINGS_CURRENCY.loading=!1)})},t.prototype.addSetting=function(t){var n={name:"",description:"",options:Object(l.cloneDeep)(this.settings[t].defaultOptions)};this.settings[t].values.push(n)},t.prototype.deleteSetting=function(t,n){this.settings[t].values.splice(n,1),this.settings[t].changed=!0},t.prototype.saveSettings=function(t){var n=this,e=this.settings[t].values;this.settings[t].loading=!0,this.settingsService.updateGroup(t,e).subscribe(function(e){n.messageService.add({key:"message",severity:"success",summary:n.getLangString("MESSAGE"),detail:n.getLangString("DATA_SAVED_SUCCESSFULLY")}),n.settings[t].defaultValues=e,n.settings[t].loading=!1,n.settings[t].changed=!1,n.pageReload()},function(e){e.error&&n.messageService.add({key:"message",severity:"error",summary:n.getLangString("ERROR"),detail:e.error}),n.settings[t].loading=!1})},t.prototype.getCurrentLocale=function(){var t=Object(l.findIndex)(this.settings.SETTINGS_MAIN.values,{name:"locale"});return t>-1?String(this.settings.SETTINGS_MAIN.values[t].value):""},t.prototype.getLangString=function(t){return this.translateService.store.translations[this.translateService.currentLang]&&this.translateService.store.translations[this.translateService.currentLang][t]||t},t.prototype.resetSettingsForm=function(t){var n=this.settings[t].defaultValues.length;n<this.settings[t].values.length&&this.settings[t].values.splice(n-1,this.settings[t].values.length-n),Object(l.extend)(this.settings[t].values,Object(l.cloneDeepWith)(this.settings[t].defaultValues)),this.settings[t].loading=!1,this.settings[t].changed=!1},t.prototype.runActionPost=function(t){var n=this;this.loading=!0,this.settingsService.runActionPost(t).subscribe(function(e){n.loading=!1,["update_internationalization"].indexOf(t)>-1&&n.pageReload()},function(t){t.error&&n.messageService.add({key:"message",severity:"error",summary:n.getLangString("ERROR"),detail:t.error}),n.loading=!1})},t.prototype.getComposerPackages=function(){var t=this;this.settings.SETTINGS_COMPOSER_PACKAGES.loading=!0,this.settingsService.getComposerPackagesList().subscribe(function(n){t.composerPackages=n,t.settings.SETTINGS_COMPOSER_PACKAGES.loading=!1},function(n){t.settings.SETTINGS_COMPOSER_PACKAGES.loading=!1})},t.prototype.requirePackage=function(t){var n=this;t&&t.preventDefault(),this.composerPackageName&&(this.settings.SETTINGS_COMPOSER_PACKAGES.loading=!0,this.settingsService.composerRequirePackage(this.composerPackageName,this.composerPackageVersion).subscribe(function(t){n.composerPackageName="",n.composerPackageVersion="",n.settings.SETTINGS_COMPOSER_PACKAGES.loading=!1},function(t){t.error&&n.messageService.add({key:"message",severity:"error",summary:n.getLangString("ERROR"),detail:t.error}),n.settings.SETTINGS_COMPOSER_PACKAGES.loading=!1}))},t.prototype.onValueChanged=function(t){this.settings[t].changed=!0},t.prototype.pageReload=function(){window.location.reload()},t.title="SETTINGS",t=S([Object(s.Component)({selector:"app-settings",template:e("hK21"),providers:[c.MessageService]}),u("design:paramtypes",[c.MessageService,g.a,d.a,p.c])],t)}(),E=function(t,n,e,s){var a,o=arguments.length,i=o<3?n:null===s?s=Object.getOwnPropertyDescriptor(n,e):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,s);else for(var l=t.length-1;l>=0;l--)(a=t[l])&&(i=(o<3?a(i):o>3?a(n,e,i):a(n,e))||i);return o>3&&i&&Object.defineProperty(n,e,i),i},T=[{path:"",component:b}],h=function(){function t(){}return t=E([Object(s.NgModule)({imports:[i.RouterModule.forChild(T)],exports:[i.RouterModule]})],t)}();e.d(n,"SettingsModule",function(){return m});var v=function(t,n,e,s){var a,o=arguments.length,i=o<3?n:null===s?s=Object.getOwnPropertyDescriptor(n,e):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,s);else for(var l=t.length-1;l>=0;l--)(a=t[l])&&(i=(o<3?a(i):o>3?a(n,e,i):a(n,e))||i);return o>3&&i&&Object.defineProperty(n,e,i),i},m=function(){function t(){}return t=v([Object(s.NgModule)({imports:[a.CommonModule,o.a,h],providers:[g.a],declarations:[b]})],t)}()},b1TM:function(t,n,e){"use strict";e.d(n,"a",function(){return r});var s=e("CcnG"),a=e("t/Na"),o=e("F/XL"),i=e("9Z1F"),l=function(t,n,e,s){var a,o=arguments.length,i=o<3?n:null===s?s=Object.getOwnPropertyDescriptor(n,e):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,s);else for(var l=t.length-1;l>=0;l--)(a=t[l])&&(i=(o<3?a(i):o>3?a(n,e,i):a(n,e))||i);return o>3&&i&&Object.defineProperty(n,e,i),i},c=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},r=function(){function t(t){this.http=t,this.headers=new a.c({"Content-Type":"application/json"}),this.requestUrl="",this.requestUrl="settings"}return t.prototype.setRequestUrl=function(t){this.requestUrl=t},t.prototype.getRequestUrl=function(){return this.requestUrl},t.prototype.getList=function(){return this.http.get(this.getRequestUrl()).pipe(Object(i.a)(this.handleError()))},t.prototype.clearSystemCache=function(){var t=this.getRequestUrl()+"/clear_system_cache";return this.http.post(t,{},{headers:this.headers}).pipe(Object(i.a)(this.handleError()))},t.prototype.runActionPost=function(t){var n=this.getRequestUrl()+"/"+t;return this.http.post(n,{},{headers:this.headers}).pipe(Object(i.a)(this.handleError()))},t.prototype.updateGroup=function(t,n){var e=this.getRequestUrl()+"/"+t;return this.http.put(e,n,{headers:this.headers}).pipe(Object(i.a)(this.handleError()))},t.prototype.getComposerPackagesList=function(){return this.http.get(this.getRequestUrl()+"_composer_installed_packages").pipe(Object(i.a)(this.handleError()))},t.prototype.composerRequirePackage=function(t,n){var e=this.getRequestUrl()+"_composer_require_package";return this.http.post(e,{packageName:t,packageVersion:n},{headers:this.headers}).pipe(Object(i.a)(this.handleError()))},t.prototype.handleError=function(t,n){return void 0===t&&(t="operation"),function(t){if(t.error)throw t.error;return Object(o.a)(n)}},t=l([Object(s.Injectable)(),c("design:paramtypes",[a.a])],t)}()},hK21:function(t,n){t.exports='<div class="card">\n    <div class="card-body" [class.loading]="loading">\n\n        <div class="float-md-left">\n            <h3>\n                <i class="icon-cog"></i>\n                {{\'SETTINGS\' | translate}}\n            </h3>\n        </div>\n\n        <div class="float-md-right">\n            <div ngbDropdown class="d-block d-md-inline-block" placement="bottom-right">\n                <button class="btn btn-info btn-sm d-block d-md-inline-block width-100 width-md-auto mb-2 mb-md-0" ngbDropdownToggle>\n                    <i class="icon-repeat"></i>\n                    &nbsp;\n                    <span>{{\'CLEAR_CACHE\' | translate}}</span>\n                </button>\n                <div ngbDropdownMenu>\n                    <button class="dropdown-item" (click)="runActionPost(\'clear_cache\')">\n                        <i class="icon-reload text-info"></i>\n                        &nbsp;\n                        {{\'CLEAR_FILE_CACHE\' | translate}}\n                    </button>\n                    <button class="dropdown-item" (click)="runActionPost(\'clear_system_cache\')">\n                        <i class="icon-repeat text-info"></i>\n                        &nbsp;\n                        {{\'CLEAR_SYSTEM_CACHE\' | translate}}\n                    </button>\n                    <button class="dropdown-item" (click)="runActionPost(\'update_internationalization\')">\n                        <i class="icon-globe text-info"></i>\n                        &nbsp;\n                        {{\'UPDATE_DICTIONARIES\' | translate}}\n                    </button>\n                    <button class="dropdown-item" (click)="runActionPost(\'update_filters\')">\n                        <i class="icon-tag text-info"></i>\n                        &nbsp;\n                        {{\'UPDATE_FILTERS\' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class="clearfix"></div>\n        <hr>\n\n        <div class="row">\n            <div class="col-md-6">\n\n                \x3c!-- settings --\x3e\n                <div [class.loading]="settings.SETTINGS_MAIN.loading">\n                    <label class="label-filled">{{\'SETTINGS_MAIN\' | translate}}</label>\n\n                    <div class="card mb-4">\n                        <div class="table-responsive">\n\n                            <table class="table table-divided mb-0">\n                                <colgroup>\n                                    <col width="60%">\n                                    <col width="40%">\n                                </colgroup>\n                                <thead>\n                                    <tr>\n                                        <th>{{\'PARAMETER\' | translate}}</th>\n                                        <th>{{\'VALUE\' | translate}}</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor="let setting of settings.SETTINGS_MAIN.values">\n                                        <td>\n                                            <span>{{setting.name | translate}}</span>\n                                        </td>\n                                        <td>\n                                            <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.value" (ngModelChange)="onValueChanged(\'SETTINGS_MAIN\')">\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf="settings.SETTINGS_MAIN.changed">\n                                        <td colspan="2" class="text-right">\n\n                                            <button type="button" class="btn btn-info btn-sm" (click)="saveSettings(\'SETTINGS_MAIN\')">\n                                                <i class="icon-check"></i>\n                                                &nbsp;\n                                                <span>{{\'SAVE\' | translate}}</span>\n                                            </button>\n                                            &nbsp;\n                                            <button type="button" class="btn btn-secondary btn-sm" (click)="resetSettingsForm(\'SETTINGS_MAIN\')" ngbTooltip="{{\'FORM_RESET\' | translate}}">\n                                                <i class="icon-reload"></i>\n                                            </button>\n\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- /settings --\x3e\n\n            </div>\n            <div class="col-md-6">\n\n                <ngb-accordion [closeOthers]="true" activeIds="accordion-settings-1" class="ngb-accordion">\n\n                    \x3c!-- statuses --\x3e\n                    <ngb-panel id="accordion-settings-1" [title]="\'SETTINGS_ORDER_STATUSES\' | translate">\n                        <ng-template ngbPanelContent>\n                            <div [class.loading]="settings.SETTINGS_DELIVERY.loading">\n                                <div class="text-muted">\n                                    {{\'SETTINGS_STATUSES_DESCRIPTION\' | translate}}\n                                </div>\n                                <div class="table-responsive">\n                                    <table class="table table-divided mb-0">\n                                        <colgroup>\n                                            <col width="40%">\n                                            <col width="40%">\n                                            <col width="10%">\n                                            <col width="10%">\n                                        </colgroup>\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    {{\'NAME\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'MAIL_TEMPLATE\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'COLOR\' | translate}}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let setting of settings.SETTINGS_ORDER_STATUSES.values; let index=index">\n                                                <td>\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.name" (ngModelChange)="onValueChanged(\'SETTINGS_ORDER_STATUSES\')">\n                                                </td>\n                                                <td>\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.options.template.value" (ngModelChange)="onValueChanged(\'SETTINGS_ORDER_STATUSES\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <p-colorPicker\n                                                            [appendTo]="\'body\'"\n                                                            [(ngModel)]="setting.options.color.value"\n                                                            (ngModelChange)="onValueChanged(\'SETTINGS_ORDER_STATUSES\')"></p-colorPicker>\n                                                </td>\n                                                <td class="text-center">\n                                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'DELETE\' | translate}}" (click)="deleteSetting(\'SETTINGS_ORDER_STATUSES\', index)">\n                                                        <i class="icon-cross"></i>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr class="bg-faded">\n                                                <td colspan="4" class="text-center">\n                                                    <div class="relative">\n                                                        <div class="pos-absolute-right" *ngIf="settings.SETTINGS_ORDER_STATUSES.changed">\n\n                                                            <button type="button" class="btn btn-info btn-sm" (click)="saveSettings(\'SETTINGS_ORDER_STATUSES\')">\n                                                                <i class="icon-check"></i>\n                                                                &nbsp;\n                                                                <span>{{\'SAVE\' | translate}}</span>\n                                                            </button>\n                                                            &nbsp;\n                                                            <button type="button" class="btn btn-secondary btn-sm" (click)="resetSettingsForm(\'SETTINGS_ORDER_STATUSES\')" ngbTooltip="{{\'FORM_RESET\' | translate}}">\n                                                                <i class="icon-reload"></i>\n                                                            </button>\n\n                                                        </div>\n                                                    </div>\n                                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addSetting(\'SETTINGS_ORDER_STATUSES\')">\n                                                        <i class="icon-plus"></i>\n                                                        &nbsp;\n                                                        <span>{{\'ADD\' | translate}}</span>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-panel>\n                    \x3c!-- /statuses --\x3e\n\n                    \x3c!-- delivery --\x3e\n                    <ngb-panel id="accordion-settings-2" [title]="\'SETTINGS_DELIVERY\' | translate">\n                        <ng-template ngbPanelContent>\n                            <div [class.loading]="settings.SETTINGS_DELIVERY.loading">\n                                <div class="text-muted">\n                                    {{\'SETTINGS_DELIVERY_DESCRIPTION\' | translate}}\n                                </div>\n                                <div class="table-responsive">\n                                    <table class="table table-divided mb-0">\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    {{\'NAME\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'PRICE\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'MAX_PRICE\' | translate}}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let setting of settings.SETTINGS_DELIVERY.values; let index=index">\n                                                <td>\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.name" (ngModelChange)="onValueChanged(\'SETTINGS_DELIVERY\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <input type="number" class="form-control form-control-sm mwidth-80 m-auto" step="1" min="0" [(ngModel)]="setting.options.price.value" (ngModelChange)="onValueChanged(\'SETTINGS_DELIVERY\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <input type="number" class="form-control form-control-sm mwidth-80 m-auto" step="1" min="0" [(ngModel)]="setting.options.priceLimit.value" (ngModelChange)="onValueChanged(\'SETTINGS_DELIVERY\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'DELETE\' | translate}}" (click)="deleteSetting(\'SETTINGS_DELIVERY\', index)">\n                                                        <i class="icon-cross"></i>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr class="bg-faded">\n                                                <td colspan="4" class="text-center">\n                                                    <div class="relative">\n                                                        <div class="pos-absolute-right" *ngIf="settings.SETTINGS_DELIVERY.changed">\n\n                                                            <button type="button" class="btn btn-info btn-sm" (click)="saveSettings(\'SETTINGS_DELIVERY\')">\n                                                                <i class="icon-check"></i>\n                                                                &nbsp;\n                                                                <span>{{\'SAVE\' | translate}}</span>\n                                                            </button>\n                                                            &nbsp;\n                                                            <button type="button" class="btn btn-secondary btn-sm" (click)="resetSettingsForm(\'SETTINGS_DELIVERY\')" ngbTooltip="{{\'FORM_RESET\' | translate}}">\n                                                                <i class="icon-reload"></i>\n                                                            </button>\n\n                                                        </div>\n                                                    </div>\n                                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addSetting(\'SETTINGS_DELIVERY\')">\n                                                        <i class="icon-plus"></i>\n                                                        &nbsp;\n                                                        <span>{{\'ADD\' | translate}}</span>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-panel>\n                    \x3c!-- /delivery --\x3e\n\n                    \x3c!-- payments --\x3e\n                    <ngb-panel id="accordion-settings-3" [title]="\'SETTINGS_PAYMENT\' | translate">\n                        <ng-template ngbPanelContent>\n                            <div [class.loading]="settings.SETTINGS_PAYMENT.loading">\n                                <div class="text-muted">\n                                    {{\'SETTINGS_PAYMENT_DESCRIPTION\' | translate}}\n                                </div>\n                                <div class="table-responsive">\n                                    <table class="table table-divided mb-0">\n                                        <colgroup>\n                                            <col width="45%">\n                                            <col width="45%">\n                                            <col width="10%">\n                                        </colgroup>\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    {{\'NAME\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'VALUE\' | translate}}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let setting of settings.SETTINGS_PAYMENT.values; let index=index">\n                                                <td>\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.name" (ngModelChange)="onValueChanged(\'SETTINGS_PAYMENT\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.options.value.value" (ngModelChange)="onValueChanged(\'SETTINGS_PAYMENT\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'DELETE\' | translate}}" (click)="deleteSetting(\'SETTINGS_PAYMENT\', index)">\n                                                        <i class="icon-cross"></i>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr class="bg-faded">\n                                                <td colspan="4" class="text-center">\n\n                                                    <div class="relative">\n                                                        <div class="pos-absolute-right" *ngIf="settings.SETTINGS_PAYMENT.changed">\n\n                                                            <button type="button" class="btn btn-info btn-sm" (click)="saveSettings(\'SETTINGS_PAYMENT\')">\n                                                                <i class="icon-check"></i>\n                                                                &nbsp;\n                                                                <span>{{\'SAVE\' | translate}}</span>\n                                                            </button>\n                                                            &nbsp;\n                                                            <button type="button" class="btn btn-secondary btn-sm" (click)="resetSettingsForm(\'SETTINGS_PAYMENT\')" ngbTooltip="{{\'FORM_RESET\' | translate}}">\n                                                                <i class="icon-reload"></i>\n                                                            </button>\n\n                                                        </div>\n                                                    </div>\n\n                                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addSetting(\'SETTINGS_PAYMENT\')">\n                                                        <i class="icon-plus"></i>\n                                                        &nbsp;\n                                                        <span>{{\'ADD\' | translate}}</span>\n                                                    </button>\n\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-panel>\n                    \x3c!-- /payments --\x3e\n\n                    \x3c!-- currencies --\x3e\n                    <ngb-panel id="accordion-settings-4" [title]="\'SETTINGS_CURRENCY\' | translate">\n                        <ng-template ngbPanelContent>\n                            <div [class.loading]="settings.SETTINGS_CURRENCY.loading">\n                                <div class="text-muted">\n                                    {{\'SETTINGS_CURRENCY_RATE_DESCRIPTION\' | translate}}\n                                </div>\n                                <div class="table-responsive">\n                                    <table class="table table-divided mb-0">\n                                        <colgroup>\n                                            <col width="45%">\n                                            <col width="45%">\n                                            <col width="10%">\n                                        </colgroup>\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    {{\'CURRENCY\' | translate}}\n                                                </th>\n                                                <th>\n                                                    {{\'VALUE\' | translate}}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let setting of settings.SETTINGS_CURRENCY.values; let index=index">\n                                                <td>\n                                                    <input type="text" class="form-control form-control-sm" [(ngModel)]="setting.name" (ngModelChange)="onValueChanged(\'SETTINGS_CURRENCY\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <input type="number" class="form-control form-control-sm" step="1" min="0" [(ngModel)]="setting.options.value.value" (ngModelChange)="onValueChanged(\'SETTINGS_CURRENCY\')">\n                                                </td>\n                                                <td class="text-center">\n                                                    <button type="button" class="btn btn-secondary btn-sm" ngbTooltip="{{\'REMOVE\' | translate}}" (click)="deleteSetting(\'SETTINGS_CURRENCY\', index)">\n                                                        <i class="icon-cross"></i>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr class="bg-faded">\n                                                <td colspan="4" class="text-center">\n\n                                                    <div class="relative">\n                                                        <div class="pos-absolute-right" *ngIf="settings.SETTINGS_CURRENCY.changed">\n\n                                                            <button type="button" class="btn btn-info btn-sm" (click)="saveSettings(\'SETTINGS_CURRENCY\')">\n                                                                <i class="icon-check"></i>\n                                                                &nbsp;\n                                                                <span>{{\'SAVE\' | translate}}</span>\n                                                            </button>\n                                                            &nbsp;\n                                                            <button type="button" class="btn btn-secondary btn-sm" (click)="resetSettingsForm(\'SETTINGS_CURRENCY\')" ngbTooltip="{{\'FORM_RESET\' | translate}}">\n                                                                <i class="icon-reload"></i>\n                                                            </button>\n\n                                                        </div>\n                                                    </div>\n\n                                                    <button type="button" class="btn btn-secondary btn-sm" (click)="addSetting(\'SETTINGS_CURRENCY\')">\n                                                        <i class="icon-plus"></i>\n                                                        &nbsp;\n                                                        <span>{{\'ADD\' | translate}}</span>\n                                                    </button>\n\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-panel>\n                    \x3c!-- /currencies --\x3e\n\n                    \x3c!-- composerPackages --\x3e\n                    <ngb-panel id="accordion-settings-5" [title]="\'SETTINGS_COMPOSER_PACKAGES\' | translate">\n                        <ng-template ngbPanelContent>\n\n                            <div [ngClass]="{\'loading\': settings.SETTINGS_COMPOSER_PACKAGES.loading}">\n                                <div class="pb-3 text-muted">\n                                    {{\'SETTINGS_COMPOSER_PACKAGES_DESCRIPTION\' | translate}}\n                                </div>\n\n                                <div class="max-height400">\n                                    <div class="table-responsive">\n                                        <table class="table table-divided mb-0">\n                                            <colgroup>\n                                                <col width="60%">\n                                                <col width="40%">\n                                            </colgroup>\n                                            <thead>\n                                                <tr>\n                                                    <th>\n                                                        {{\'NAME\' | translate}}\n                                                    </th>\n                                                    <th>\n                                                        {{\'VERSION\' | translate}}\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor="let package of composerPackages">\n                                                    <td>{{ package.name }}</td>\n                                                    <td class="text-center">{{ package.version }}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n\n                                \x3c!--<div class="card card-body p-2 mt-3">--\x3e\n                                    \x3c!--<div class="row no-gutters">--\x3e\n                                        \x3c!--<div class="col-5 pr-1">--\x3e\n                                            \x3c!--<input type="text" class="form-control form-control-sm" [(ngModel)]="composerPackageName">--\x3e\n                                        \x3c!--</div>--\x3e\n                                        \x3c!--<div class="col-4 pl-1">--\x3e\n                                            \x3c!--<input type="text" class="form-control form-control-sm" [(ngModel)]="composerPackageVersion">--\x3e\n                                        \x3c!--</div>--\x3e\n                                        \x3c!--<div class="col-3 pl-2">--\x3e\n                                            \x3c!--<button type="button" class="btn btn-success btn-sm btn-block" (click)="requirePackage($event)">--\x3e\n                                                \x3c!--{{\'INSTALL\' | translate}}--\x3e\n                                            \x3c!--</button>--\x3e\n                                        \x3c!--</div>--\x3e\n                                    \x3c!--</div>--\x3e\n                                \x3c!--</div>--\x3e\n                            </div>\n\n                        </ng-template>\n                    </ngb-panel>\n                    \x3c!-- /composerPackages --\x3e\n\n                </ngb-accordion>\n\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<p-toast key="message" position="bottom-right"></p-toast>\n'}}]);