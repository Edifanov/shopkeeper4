{"version":3,"sources":["/var/www/html/shopkeeper4/web/shk-app/locale/messages.ru.ts","/var/www/html/shopkeeper4/web/shk-app/src/$_gendir lazy","/var/www/html/shopkeeper4/web/shk-app/src/app/app-routing.module.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/app.component.css","/var/www/html/shopkeeper4/web/shk-app/src/app/app.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/app.module.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/catalog.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/categories.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/content_types.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/field_types.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/filter-field-by-group.pipe.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/i18n-providers.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/list-recursive.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/category.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/content_field.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/content_type.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type-property.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/product.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/not-found.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/orders.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/page-table.abstract.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/product.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/categories.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/content_types.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/data-service.abstract.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/products.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/settings.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/stat.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/table.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/app.component.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/categories-menu.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/cmp-table.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_alert.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_category.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_confirm.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_content_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_field_type.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_product.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_catalog.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_content_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_field_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_orders.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_settings.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_statistics.html","/var/www/html/shopkeeper4/web/shk-app/src/environments/environment.ts","/var/www/html/shopkeeper4/web/shk-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export const TRANSLATION_RU = `\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n    <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n        <body>\n            <trans-unit id=\"4e7f5f07ae8e67878f35b34bcee10e39300ff41a\" datatype=\"html\">\n                <source>Orders</source>\n                <target>Заказы</target>\n            </trans-unit>\n            <trans-unit id=\"61e0f26d843eec0b33ff475e111b0c2f7a80b835\" datatype=\"html\">\n                <source>Statistics</source>\n                <target>Статистика</target>\n            </trans-unit>\n            <trans-unit id=\"532152365f64d8738343423767f1130c1a451e78\" datatype=\"html\">\n                <source>Catalog</source>\n                <target>Каталог</target>\n            </trans-unit>\n            <trans-unit id=\"121cc5391cd2a5115bc2b3160379ee5b36cd7716\" datatype=\"html\">\n                <source>Settings</source>\n                <target>Настройки</target>\n            </trans-unit>\n            <trans-unit id=\"1f332ec66f3bc8d943c248091be7f92772ba280f\" datatype=\"html\">\n                <source>Expand</source>\n                <target>Развернуть</target>\n            </trans-unit>\n            <trans-unit id=\"e8bcb762b48cf52fbea66ce9c4f6b970b99a80fd\" datatype=\"html\">\n                <source>Collapse</source>\n                <target>Свернуть</target>\n            </trans-unit>\n        </body>\n    </file>\n</xliff>\n`;\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/locale/messages.ru.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotFoundComponent } from './not-found.component';\nimport { OrdersComponent } from './orders.component';\nimport { CatalogComponent } from './catalog.component';\nimport { ContentTypesComponent } from './content_types.component';\nimport { FieldTypesComponent } from './field_types.component';\nimport { StatisticsComponent } from './stat.component';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/orders', pathMatch: 'full' },\n    { path: 'orders', component: OrdersComponent },\n    { path: 'catalog', component: CatalogComponent },\n    { path: 'catalog/category/:categoryId', component: CatalogComponent },\n    { path: 'catalog/content_types', component: ContentTypesComponent },\n    { path: 'catalog/field_types', component: FieldTypesComponent },\n    { path: 'statistics', component: StatisticsComponent },\n    { path: 'settings', component: SettingsComponent },\n    { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","import {Component, Input} from '@angular/core';\nimport {NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'modal_confirm',\n    templateUrl: 'templates/modal_confirm.html',\n    providers: []\n})\nexport class ConfirmModalContent {\n    @Input() modalTitle;\n    @Input() modalContent;\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n\n    accept() {\n        this.activeModal.close('accept');\n    }\n}\n\n@Component({\n    selector: 'modal_alert',\n    templateUrl: 'templates/modal_alert.html',\n    providers: []\n})\nexport class AlertModalContent {\n    @Input() modalTitle;\n    @Input() modalContent;\n    @Input() messageType;\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './templates/app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [NgbTooltipConfig]\n})\nexport class AppComponent {\n    title = 'Shopkeeper';\n\n    constructor(tooltipConfig: NgbTooltipConfig) {\n        tooltipConfig.placement = 'bottom';\n        tooltipConfig.container = 'body';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent, AlertModalContent, ConfirmModalContent } from './app.component';\nimport { NotFoundComponent } from './not-found.component';\nimport { OrdersComponent } from './orders.component';\nimport { CatalogComponent } from './catalog.component';\nimport { ProductModalContent } from './product.component';\nimport { CategoriesMenuComponent, CategoriesModalComponent, CategoriesListComponent } from './categories.component';\nimport { ContentTypesComponent, ContentTypeModalContent } from './content_types.component';\nimport { FieldTypesComponent, FieldTypeModalContent } from './field_types.component';\nimport { StatisticsComponent } from './stat.component';\nimport { SettingsComponent } from './settings.component';\nimport { ListRecursiveComponent } from './list-recursive.component';\nimport { TableComponent } from './table.component';\n\nimport { filterFieldByGroup } from \"./filter-field-by-group.pipe\";\n\nimport { ProductsService } from './services/products.service';\nimport { ContentTypesService } from './services/content_types.service';\nimport { CategoriesService } from './services/categories.service';\nimport { AppRoutingModule }     from './app-routing.module';\n\nimport { NgbModule, NgbActiveModal, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpModule,\n        AppRoutingModule,\n        NgbModule.forRoot()\n    ],\n    declarations: [\n        AppComponent,\n        NotFoundComponent,\n        OrdersComponent,\n        CategoriesMenuComponent,\n        CatalogComponent,\n        ContentTypesComponent,\n        FieldTypesComponent,\n        StatisticsComponent,\n        SettingsComponent,\n        filterFieldByGroup,\n        ListRecursiveComponent,\n        TableComponent,\n        CategoriesListComponent,\n\n        AlertModalContent,\n        ConfirmModalContent,\n        ProductModalContent,\n        ContentTypeModalContent,\n        CategoriesModalComponent,\n        FieldTypeModalContent\n    ],\n    providers: [ ProductsService, ContentTypesService, CategoriesService, NgbActiveModal, NgbTooltipConfig ],\n    entryComponents: [\n        AlertModalContent,\n        ConfirmModalContent,\n        ProductModalContent,\n        ContentTypeModalContent,\n        CategoriesModalComponent,\n        FieldTypeModalContent\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.module.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CategoriesService } from './services/categories.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ProductModalContent } from './product.component';\nimport { Category } from \"./models/category.model\";\nimport { Product } from \"./models/product.model\";\nimport * as _ from \"lodash\";\nimport { ProductsService } from \"./services/products.service\";\n\n@Component({\n    selector: 'shk-catalog',\n    templateUrl: 'templates/page_catalog.html'\n})\nexport class CatalogComponent implements OnInit {\n    title = 'Каталог';\n    errorMessage: string = '';\n    modalRef: NgbModalRef;\n    loading: boolean = false;\n    categories: Category[] = [];\n    currentCategory: Category;\n    items: Product[] = [];\n    selectedIds: number[] = [];\n\n    //TODO: get from settings\n    //TODO: add field format option\n    tableFields = [\n        {\n            name: 'id',\n            title: 'ID',\n            output_type: 'text'\n        },\n        {\n            name: 'name',\n            title: 'Системное имя',\n            output_type: 'text'\n        },\n        {\n            name: 'title',\n            title: 'Название',\n            output_type: 'text'\n        },\n        {\n            name: 'price',\n            title: 'Цена',\n            output_type: 'number'\n        },\n        {\n            name: 'published',\n            title: 'Статус',\n            output_type: 'boolean'\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private modalService: NgbModal,\n        private titleService: Title,\n        private categoriesService: CategoriesService,\n        private productsService: ProductsService\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    openCategory( category: Category ): void {\n        this.currentCategory = _.clone( category );\n        this.titleService.setTitle( this.title + ' / ' + this.currentCategory.title );\n        this.getProducts();\n    }\n\n    openRootCategory(): void {\n        this.currentCategory = new Category(0,0,'root', '','','');\n        this.titleService.setTitle( this.title );\n        this.getProducts();\n    }\n\n    getProducts(): void{\n        this.loading = true;\n        this.productsService.getList(this.currentCategory.id)\n            .subscribe(\n                items => {\n                    this.items = items;\n                    this.loading = false;\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    modalProductOpen( itemId?: number ) {\n        this.modalRef = this.modalService.open(ProductModalContent, {size: 'lg'});\n        this.modalRef.componentInstance.modalTitle = 'Add product';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.category = this.currentCategory;\n        this.modalRef.result.then((result) => {\n            if( result.reason && result.reason == 'edit' ){\n\n            } else {\n                this.getProducts();\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n    selectAll( event ): void{\n        this.selectedIds = [];\n        if( event.target.checked ){\n            for( let item of this.items ){\n                this.selectedIds.push( item.id );\n            }\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/catalog.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CategoriesService } from './services/categories.service'\nimport { ContentTypesService } from './services/content_types.service';\nimport { ContentType } from './models/content_type.model';\nimport { Category } from \"./models/category.model\";\nimport { ConfirmModalContent } from './app.component';\nimport { ListRecursiveComponent } from './list-recursive.component';\nimport 'rxjs/add/operator/switchMap';\nimport * as _ from \"lodash\";\n\n/**\n * @class CategoriesModalComponent\n */\n@Component({\n    selector: 'category-modal-content',\n    templateUrl: 'templates/modal_category.html',\n    providers: [ CategoriesService ]\n})\nexport class CategoriesModalComponent implements OnInit {\n    @Input() modalTitle: string;\n    @Input() itemId: number;\n    @Input() isItemCopy: boolean;\n    @Input() categories: Category[] = [];\n    submitted: boolean = false;\n    loading: boolean = false;\n    errorMessage: string;\n    model: Category = new Category(0,0,'','','','');\n    contentTypes: ContentType[] = [];\n\n    form: FormGroup;\n    formErrors = {\n        parent_id: '',\n        name: '',\n        title: '',\n        content_type: ''\n    };\n    validationMessages = {\n        parent_id: {\n            required: 'Parent is required.'\n        },\n        title: {\n            required: 'Title is required.'\n        },\n        name: {\n            required: 'Name is required.',\n            pattern: 'The name must contain only Latin letters.'\n        },\n        content_type: {\n            required: 'Content type is required.'\n        }\n    };\n\n    constructor(\n        private fb: FormBuilder,\n        private contentTypesService: ContentTypesService,\n        private categoriesService: CategoriesService,\n        public activeModal: NgbActiveModal\n    ) {}\n\n    /** On initialize */\n    ngOnInit(): void {\n        this.buildForm();\n        this.getContentTypes();\n        if( this.itemId ){\n            this.getModelData();\n        }\n    }\n\n    getModelData(){\n        this.loading = true;\n        this.categoriesService.getItem( this.itemId )\n            .then(item => {\n                if( this.isItemCopy ){\n                    item.id = 0;\n                    item.name = '';\n                }\n                this.model = item;\n                this.loading = false;\n            });\n    }\n\n    getContentTypes(){\n        this.contentTypesService.getList()\n            .then(\n                items => {\n                    this.contentTypes = items;\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    buildForm(): void {\n        this.form = this.fb.group({\n            parent_id: [this.model.parent_id, [Validators.required]],\n            title: [this.model.title, [Validators.required]],\n            name: [this.model.name, [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')]],\n            description: [this.model.description, []],\n            content_type: [this.model.content_type, [Validators.required]]\n        });\n        this.form.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n    }\n\n    /**\n     * On form value changed\n     * @param data\n     */\n    onValueChanged(data?: any): void {\n        if (!this.form) { return; }\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = this.form.get(field);\n            if (control && (control.dirty || this.submitted) && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n    }\n\n    /**\n     * On form submit\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        if( !this.form.valid ){\n            this.onValueChanged();\n            return;\n        }\n\n        if( this.model.id ){\n\n            this.categoriesService.editItem( this.model.id, this.model )\n                .then((res) => {\n                    if( res.success ){\n                        this.closeModal();\n                    } else {\n                        if( res.msg ){\n                            this.errorMessage = res.msg;\n                        }\n                    }\n                });\n\n        } else {\n\n            this.categoriesService.createItem( this.model )\n                .then((res) => {\n                    if( res.success ){\n                        this.closeModal();\n                    } else {\n                        if( res.msg ){\n                            this.errorMessage = res.msg;\n                        }\n                    }\n                });\n        }\n    }\n\n    closeModal() {\n        let reason = this.itemId ? 'edit' : 'create';\n        this.activeModal.close( { reason: reason, data: this.model } );\n    }\n\n}\n\n/**\n * @class CategoriesListComponent\n */\n@Component({\n    selector: 'categories-list',\n    template: `        \n        <ul class=\"dropdown-menu dropdown-menu-hover\" *ngIf=\"items.length > 0\" [class.shadow]=\"parentId != 0\">\n            <li class=\"dropdown-item active\" *ngFor=\"let item of items\" [class.active]=\"item.id == currentId\" [class.current-level]=\"getIsActiveParent(item.id)\">\n                <a href=\"#/catalog/category/{{item.id}}\">\n                    {{item.title}}\n                </a>\n                <categories-list [inputItems]=\"inputItems\" [parentId]=\"item.id\" [currentId]=\"currentId\"></categories-list>\n            </li>\n        </ul>\n    `\n})\nexport class CategoriesListComponent extends ListRecursiveComponent {\n\n}\n\n/**\n * @class CategoriesMenuComponent\n */\n@Component({\n    selector: 'categories-menu',\n    templateUrl: 'templates/categories-menu.html',\n    providers: [ CategoriesService ]\n})\nexport class CategoriesMenuComponent implements OnInit {\n    @Input() rootTitle: string = 'Категории';\n    @Output() changeRequest = new EventEmitter<Category>();\n    currentCategory: Category = new Category(0,0,'root',this.rootTitle,'','');\n    categories: Category[] = [];\n    errorMessage: string = '';\n    modalRef: NgbModalRef;\n    categoryId: number = 0;\n\n    constructor(\n        public router: Router,\n        private route: ActivatedRoute,\n        private modalService: NgbModal,\n        private categoriesService: CategoriesService\n    ) {}\n\n    /** On initialize component */\n    ngOnInit(): void {\n        this.getCategories();\n\n        let categoryId = this.route.snapshot.params['categoryId']\n            ? parseInt( this.route.snapshot.params['categoryId'] )\n            : 0;\n\n        this.route.paramMap\n            .subscribe(\n                params => {\n                    this.categoryId = params.get('categoryId')\n                        ? parseInt( params.get('categoryId') )\n                        : 0;\n                    this.selectCurrent();\n                }\n            );\n\n        if( !categoryId ){\n            this.openRootCategory();\n        }\n    }\n\n    /** Select current category */\n    selectCurrent(): void {\n        if( this.currentCategory.id === this.categoryId ){\n            return;\n        }\n        for( let category of this.categories ){\n            if( category.id == this.categoryId ){\n                this.currentCategory = category;\n                this.changeRequest.emit( this.currentCategory );\n                break;\n            }\n        }\n    }\n\n    /** Get categories */\n    getCategories(): void {\n        this.categoriesService.getList()\n            .subscribe(\n                items => {\n                    this.categories = items;\n                    this.selectCurrent();\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    /**\n     * Open modal category\n     * @param itemId\n     * @param isItemCopy\n     */\n    openModalCategory( itemId?: number, isItemCopy?: boolean ): void {\n        this.modalRef = this.modalService.open(CategoriesModalComponent, {size: 'lg'});\n        this.modalRef.componentInstance.modalTitle = itemId && !isItemCopy ? 'Edit category' : 'Add category';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.isItemCopy = isItemCopy || false;\n        this.modalRef.componentInstance.categories = this.categories;\n        this.modalRef.result.then((result) => {\n            if( result.reason && result.reason == 'edit' ){\n                this.updateCategoryData( result.data.id, result.data );\n            } else {\n                this.getCategories();\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    /**\n     * Update category data\n     * @param itemId\n     * @param data\n     */\n    updateCategoryData( itemId: number, data: any ): void {\n        let index = _.findIndex( this.categories, {id: itemId} );\n        if( index === -1 ){\n            return;\n        }\n        let category = this.categories[index];\n        if( category.parent_id == data.parent_id ){\n            Object.keys(category).forEach(function(k, i) {\n                if( data[k] ){\n                    category[k] = data[k];\n                }\n            });\n        } else {\n            this.getCategories();\n        }\n    }\n\n    /**\n     * Confirm delete category\n     * @param itemId\n     */\n    deleteCategoryItemConfirm( itemId: number ): void{\n        let index = _.findIndex( this.categories, {id: itemId} );\n        if( index == -1 ){\n            return;\n        }\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = 'Are you sure you want to remove category \"' + this.categories[index].title + '\"?';\n        this.modalRef.result.then((result) => {\n            if( result == 'accept' ){\n                this.deleteCategoryItem( itemId );\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    /**\n     * Delete category\n     * @param itemId\n     */\n    deleteCategoryItem( itemId: number ): void{\n        this.categoriesService.deleteItem( itemId )\n            .then((res) => {\n                if( res.success ){\n                    this.openRootCategory();\n                    this.getCategories();\n                } else {\n                    if( res.msg ){\n                        this.errorMessage = res.msg;\n                    }\n                }\n            });\n    }\n\n    /** Open root category */\n    openRootCategory(): void {\n        this.currentCategory = new Category(0,0,'root',this.rootTitle,'','');\n        this.changeRequest.emit( this.currentCategory );\n    }\n\n    /** Go to root category */\n    goToRootCategory(): void {\n        this.router.navigate(['/catalog']);\n    }\n\n    /**\n     * Select category\n     * @param category\n     */\n    selectCategory( category: Category ): void {\n        this.router.navigate(['/catalog/category', category.id]);\n    }\n\n    /** Copy category */\n    copyCategory(): void {\n        this.openModalCategory( this.currentCategory.id, true );\n    }\n\n    /** Move category */\n    moveCategory(): void {\n\n        console.log( 'moveCategory' );\n\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/categories.component.ts","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ContentTypesService } from './services/content_types.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContentField } from './models/content_field.model';\nimport { ContentType } from './models/content_type.model';\nimport { ConfirmModalContent } from './app.component';\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'content-type-modal-content',\n    templateUrl: 'templates/modal_content_types.html',\n    providers: [ ContentTypesService ]\n})\nexport class ContentTypeModalContent implements OnInit {\n    @Input() modalTitle;\n    @Input() itemId;\n    @Input() isItemCopy;\n    @ViewChild('addCollectionBlock') elementAddCollectionBlock;\n    @ViewChild('addGroupBlock') elementAddGroupBlock;\n\n    model = new ContentType('','','','','products',[],['Содержание', 'Служебное'], true);\n    submitted: boolean = false;\n    fieldSubmitted: boolean = false;\n    loading: boolean = false;\n    errorMessage: string;\n    errorFieldMessage: string;\n    action: string = 'add_field';\n    currentFieldName = '';\n    collections = ['products'];\n    contentTypeForm: FormGroup;\n    fieldForm: FormGroup;\n    formErrors = {\n        contentType: {\n            name: '',\n            title: '',\n            new_collection: ''\n        },\n        field: {\n            name: '',\n            title: '',\n            input_type: '',\n            output_type: '',\n            group: '',\n            new_group: ''\n        }\n    };\n    validationMessages = {\n        contentType: {\n            title: {\n                required: 'Title is required.'\n            },\n            name: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters.'\n            },\n            new_collection: {\n                pattern: 'The collection name must contain only Latin letters.',\n                exists: 'Collection with the same name already exists.'\n            }\n        },\n        field: {\n            title: {\n                required: 'Title is required.'\n            },\n            name: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters.'\n            },\n            input_type: {\n                required: 'Input type is required.'\n            },\n            output_type: {\n                required: 'Output type is required.'\n            },\n            group: {\n                required: 'Group is required.'\n            },\n            new_group: {\n                exists: 'Group with the same name already exists.'\n            }\n        }\n    };\n\n    constructor(\n        private fb: FormBuilder,\n        private contentTypesService: ContentTypesService,\n        private activeModal: NgbActiveModal,\n        tooltipConfig: NgbTooltipConfig\n    ) {\n        tooltipConfig.placement = 'bottom';\n        tooltipConfig.container = 'body';\n    }\n\n    /** On initialize */\n    ngOnInit(): void {\n        this.buildForm();\n        if( this.itemId ){\n            this.getModelData();\n        }\n    }\n\n    /** Build form groups */\n    buildForm(): void {\n        this.contentTypeForm = this.fb.group({\n            title: [this.model.title, [Validators.required]],\n            name: [this.model.name, [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')]],\n            description: [this.model.description, []],\n            collection: [this.model.collection, [Validators.required]],\n            new_collection: ['', [Validators.pattern('[A-Za-z0-9_-]+')]]\n        });\n        this.contentTypeForm.valueChanges\n            .subscribe(data => this.onValueChanged('contentType', data));\n\n        this.fieldForm = this.fb.group({\n            title: ['', [Validators.required]],\n            name: ['', [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')]],\n            description: ['', []],\n            input_type: ['', [Validators.required]],\n            output_type: ['', [Validators.required]],\n            is_filter: ['', []],\n            required: ['', []],\n            group: ['', [Validators.required]],\n            new_group: ['', []]\n        });\n        this.fieldForm.valueChanges\n            .subscribe(data => this.onValueChanged('field', data));\n    }\n\n    /** Element display toggle */\n    displayToggle(element: HTMLElement, display?: boolean): void {\n        display = display || element.style.display == 'none';\n        element.style.display = display ? 'block' : 'none';\n    }\n\n    /**\n     * On form value changed\n     * @param type\n     * @param data\n     */\n    onValueChanged(type: string, data?: any): void{\n        if (!this.contentTypeForm) { return; }\n        const form = type == 'contentType'\n            ? this.contentTypeForm\n            : this.fieldForm;\n        const isSubmitted = type == 'contentType'\n            ? this.submitted\n            : this.fieldSubmitted;\n\n        for (const field in this.formErrors[type]) {\n            this.formErrors[type][field] = '';\n            const control = form.get(field);\n            if (control && (control.dirty || isSubmitted) && !control.valid) {\n                const messages = this.validationMessages[type][field];\n                for (const key in control.errors) {\n                    this.formErrors[type][field] += messages[key] + ' ';\n                }\n            }\n        }\n    }\n\n    /** Get model data */\n    getModelData(){\n        this.loading = true;\n        this.contentTypesService.getItem( this.itemId )\n            .then(item => {\n                if( this.isItemCopy ){\n                    item.id = '';\n                    item.name = '';\n                }\n                this.model = item;\n                this.loading = false;\n            });\n    }\n\n    /** Add collection */\n    addCollection(){\n        const fieldName = 'new_collection';\n        const control = this.contentTypeForm.get(fieldName);\n        if( !control.valid ){\n            return false;\n        }\n        this.formErrors.contentType[fieldName] = '';\n        const value = control.value;\n        let exists = false;\n        for (let name of this.collections) {\n            if(value == name){\n                exists = true;\n                break;\n            }\n        }\n        if( exists ){\n            this.formErrors.contentType[fieldName] += this.validationMessages.contentType[fieldName].exists;\n            return false;\n        }\n        this.collections.push( value );\n        this.elementAddCollectionBlock.nativeElement.style.display = 'none';\n        return true;\n    }\n\n    /** Delete collection */\n    deleteCollection(){\n\n        console.log( 'deleteCollection' );\n\n    }\n\n    /** Add group */\n    addGroup(){\n        const fieldName = 'new_group';\n        const control = this.fieldForm.get(fieldName);\n        if( !control || !control.valid || !control.value ){\n            return false;\n        }\n        this.formErrors.field[fieldName] = '';\n        const value = control.value;\n        let index = this.model.groups.indexOf(value);\n        if( index > -1 ){\n            this.formErrors.field[fieldName] += this.validationMessages.field[fieldName].exists;\n            return false;\n        }\n        this.model.groups.push( value );\n        this.elementAddGroupBlock.nativeElement.style.display = 'none';\n        return true;\n    }\n\n    /** Delete group */\n    deleteGroup(){\n        let currentGroupName = this.fieldForm.get('group').value;\n        let index = _.findIndex( this.model.fields, {group: currentGroupName} );\n        this.errorFieldMessage = '';\n        if( index > -1 ){\n            this.errorFieldMessage = 'You can\\'t delete a group because it is not empty.';\n            return;\n        }\n        index = this.model.groups.indexOf( currentGroupName );\n        if( index > -1 ){\n            this.model.groups.splice(index, 1);\n        }\n    }\n\n    /**\n     * Edit field\n     * @param field\n     */\n    editField(field: ContentField){\n        let defaults = new ContentField('','','','','',[],'',[],'',false,false);\n        field = _.extend( defaults, field );\n        this.fieldForm.setValue( _.omit( field, ['id','input_type_options','output_type_options'] ) );\n        this.currentFieldName = field.name;\n        this.fieldSubmitted = false;\n        this.action = 'edit_field';\n    }\n\n    /**\n     * Copy field\n     * @param field\n     */\n    copyField(field: ContentField){\n        let data = _.clone( field );\n        data.name = '';\n        this.fieldForm.setValue( data );\n        this.currentFieldName = '';\n        this.fieldSubmitted = false;\n        this.action = 'add_field';\n    }\n\n    /**\n     * Delete field\n     * @param field\n     */\n    deleteField(field: ContentField){\n        let index = _.findIndex( this.model.fields, {name: field.name} );\n        if( index == -1 ){\n            this.errorMessage = 'Field not found.';\n            return;\n        }\n        this.model.fields.splice(index, 1);\n    }\n\n    /** Reset field form */\n    resetFieldForm(){\n        this.errorMessage = '';\n        this.errorFieldMessage = '';\n        this.fieldSubmitted = false;\n        this.currentFieldName = '';\n        this.action = 'add_field';\n        this.fieldForm.reset();\n    }\n\n    /** Cancel edit field */\n    editFieldCancel(){\n        this.resetFieldForm();\n        this.onValueChanged('field');\n    }\n\n    /** Submit field */\n    submitField(){\n        this.fieldSubmitted = true;\n\n        if( !this.fieldForm.valid ){\n            this.onValueChanged('field');\n            return;\n        }\n\n        let data = this.fieldForm.value;\n        let index = _.findIndex( this.model.fields, {name: data.name} );\n        if( index > -1 && this.currentFieldName != data.name ){\n            this.errorMessage = 'A field named \"' + data.name + '\" already exists.';\n            return;\n        }\n\n        if( this.action == 'add_field' ){\n            this.model.fields.push( _.clone( data ) );\n        }\n        else if( this.action == 'edit_field' ){\n            index = _.findIndex( this.model.fields, {name: this.currentFieldName} );\n            if( index > -1 ){\n                this.model.fields[index] = _.clone( data );\n            }\n        }\n        this.resetFieldForm();\n    }\n\n    /** Submit Content type form */\n    onSubmit() {\n\n        this.submitted = true;\n\n        if( !this.contentTypeForm.valid ){\n            this.onValueChanged('contentType');\n            return;\n        }\n        if( this.model.fields.length == 0 ){\n            this.errorMessage = 'You have not created any fields.';\n            return;\n        }\n\n        if( this.model.id ){\n\n            this.contentTypesService.editItem( this.model.id, this.model )\n                .then((res) => {\n                    if( res.success ){\n                        this.closeModal();\n                    } else {\n                        if( res.msg ){\n                            this.errorMessage = res.msg;\n                        }\n                    }\n                });\n        }\n        else {\n\n            this.contentTypesService.createItem( this.model )\n                .then((res) => {\n                    if( res.success ){\n                        this.closeModal();\n                    } else {\n                        if( res.msg ){\n                            this.errorMessage = res.msg;\n                        }\n                    }\n                });\n        }\n    }\n\n    /** Close modal */\n    closeModal() {\n        this.activeModal.close();\n    }\n}\n\n@Component({\n    selector: 'shk-content-types',\n    templateUrl: 'templates/page_content_types.html'\n})\nexport class ContentTypesComponent implements OnInit {\n    errorMessage: string;\n    items: ContentType[] = [];\n    title: string = 'Типы товаров';\n    modalRef: NgbModalRef;\n    loading: boolean = false;\n    selectedIds: string[] = [];\n\n    //TODO: get from settings\n    tableFields = [\n        {\n            name: 'name',\n            title: 'Системное имя',\n            output_type: 'text'\n        },\n        {\n            name: 'title',\n            title: 'Название',\n            output_type: 'text'\n        },\n        {\n            name: 'collection',\n            title: 'Коллекция',\n            output_type: 'text'\n        },\n        {\n            name: 'published',\n            title: 'Статус',\n            output_type: 'boolean'\n        }\n    ];\n\n    constructor(\n        private contentTypesService: ContentTypesService,\n        private modalService: NgbModal,\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n        this.getList();\n    }\n\n    public setTitle( newTitle: string ) {\n        this.titleService.setTitle( newTitle );\n    }\n\n    getList(): void {\n        this.loading = true;\n        this.contentTypesService.getList()\n            .then(\n                items => {\n                    this.items = items;\n                    this.loading = false;\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    modalOpen( itemId?: number, isItemCopy?: boolean ): void {\n        this.modalRef = this.modalService.open(ContentTypeModalContent, {size: 'lg'});\n        this.modalRef.componentInstance.modalTitle = itemId && !isItemCopy\n            ? 'Edit content type'\n            : 'Add content type';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.isItemCopy = isItemCopy || false;\n        this.modalRef.result.then((result) => {\n            this.getList();\n        }, (reason) => {\n            //console.log( 'reason', reason );\n        });\n    }\n\n    copyItem( itemId: number ): void {\n        this.modalOpen( itemId, true );\n    }\n\n    modalClose(): void {\n        this.modalRef.close();\n    }\n\n    deleteItemConfirm( itemId ): void{\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = 'Are you sure you want to remove this item?';\n        this.modalRef.result.then((result) => {\n            if( result == 'accept' ){\n                this.deleteItem( itemId );\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    deleteItem( itemId: string ): void{\n        this.contentTypesService.deleteItem( itemId )\n            .then((res) => {\n                if( res.success ){\n                    this.getList();\n                } else {\n                    if( res.msg ){\n                        //this.errorMessage = res.msg;\n                    }\n                }\n            });\n    }\n\n    selectAll( event ): void{\n        this.selectedIds = [];\n        if( event.target.checked ){\n            for( let item of this.items ){\n                this.selectedIds.push( item.id );\n            }\n        }\n    }\n\n    setSelected( event, itemId: string ): void{\n        const index = this.selectedIds.indexOf( itemId );\n        if( event.target.checked ){\n            if( index == -1 ){\n                this.selectedIds.push( itemId );\n            }\n        } else if( index > -1 ){\n            this.selectedIds.splice( index, 1 );\n        }\n    }\n\n    getIsSelected( itemId: string ): boolean{\n        return this.selectedIds.lastIndexOf( itemId ) > -1;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/content_types.component.ts","import { Component, Injectable, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ContentTypesService } from './services/content_types.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ContentField } from './models/content_field.model';\nimport { ContentType } from './models/content_type.model';\nimport { ConfirmModalContent } from './app.component';\nimport { FieldType } from './models/field-type.model';\nimport { FieldTypeProperty } from './models/field-type-property.model';\nimport * as _ from \"lodash\";\n\nimport { DataService } from './services/data-service.abstract';\nimport { PageTableAbstractComponent, ModalContentAbstractComponent } from './page-table.abstract';\n\n@Injectable()\nexport class FieldTypesService extends DataService {\n\n    constructor(http: Http) {\n        super(http);\n        this.setRequestUrl('admin/field_types');\n    }\n\n}\n\n@Component({\n    selector: 'field-type-modal-content',\n    templateUrl: 'templates/modal_field_type.html',\n    providers: [ FieldTypesService ]\n})\nexport class FieldTypeModalContent extends ModalContentAbstractComponent {\n\n    data: FieldType;\n\n    formFields = {\n        name: {\n            value: '',\n            validators: [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')],\n            messages: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters and numbers.'\n            }\n        },\n        title: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        description: {\n            value: '',\n            validators: [],\n            messages: {}\n        }\n    };\n\n    constructor(\n        fb: FormBuilder,\n        dataService: FieldTypesService,\n        activeModal: NgbActiveModal,\n        tooltipConfig: NgbTooltipConfig\n    ) {\n        super(fb, dataService, activeModal, tooltipConfig);\n\n        this.data.properties = [new FieldTypeProperty('','','')];\n    }\n\n    addRow(){\n        if(!this.data.properties){\n            this.data.properties = [];\n        }\n        this.data.properties.push(new FieldTypeProperty('','',''));\n    }\n\n    deleteRow(index){\n        if(this.data.properties.length < index + 1){\n            return;\n        }\n        this.data.properties.splice(index, 1);\n    }\n\n    save(){\n        this.submitted = true;\n        if(!this.form.valid){\n            this.onValueChanged(this.form.value);\n            this.submitted = false;\n        }\n        else {\n            this.dataService.create(this.data)\n                .then((res) => {\n                    if( res.success ){\n                        this.closeModal();\n                    } else {\n                        if( res.msg ){\n                            this.submitted = false;\n                            this.errorMessage = res.msg;\n                        }\n                    }\n                });\n        }\n    }\n\n}\n\n@Component({\n    selector: 'shk-field-types',\n    templateUrl: 'templates/page_field_types.html',\n    providers: [ FieldTypesService ]\n})\nexport class FieldTypesComponent extends PageTableAbstractComponent {\n    title: string = 'Field types';\n\n    constructor(\n        dataService: FieldTypesService,\n        activeModal: NgbActiveModal,\n        modalService: NgbModal,\n        titleService: Title\n    ) {\n        super(dataService, activeModal, modalService, titleService);\n    }\n\n    tableFields = [\n        {\n            name: 'name',\n            title: 'Системное имя',\n            output_type: 'text'\n        },\n        {\n            name: 'title',\n            title: 'Название',\n            output_type: 'text'\n        }\n    ];\n\n    getList(): void {\n        this.loading = true;\n        this.dataService.getList()\n            .subscribe(\n                items => {\n                    this.items = items;\n                    this.loading = false;\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    getModalContent(){\n        return FieldTypeModalContent;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/field_types.component.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ContentField } from \"./models/content_field.model\";\n\n@Pipe({ name: 'filterFieldByGroup' })\nexport class filterFieldByGroup implements PipeTransform {\n    transform(allFields: ContentField[], groupName: string) {\n        return allFields.filter(field => field.group == groupName);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/filter-field-by-group.pipe.ts","import { TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID } from '@angular/core';\nimport { TRANSLATION_RU } from '../../locale/messages.ru';\n\nexport function getTranslationProviders(): Promise<Object[]> {\n    // Get the locale id from the global\n    const locale = document['locale'] as string;\n    // return no providers if fail to get translation file for locale\n    const noProviders: Object[] = [];\n    // No locale or U.S. English: no translation providers\n    if (!locale || locale === 'en-US') {\n        return Promise.resolve(noProviders);\n    }\n    return getTranslations(locale)\n        .then( (translations: string ) => [\n            { provide: TRANSLATIONS, useValue: translations },\n            { provide: TRANSLATIONS_FORMAT, useValue: 'xlf' },\n            { provide: LOCALE_ID, useValue: locale }\n        ])\n        .catch(() => noProviders); // ignore if file not found\n}\n\nfunction getTranslations(locale: string) {\n    let translation;\n    switch (locale){\n        case 'ru':\n        case 'ru-RU':\n            translation = TRANSLATION_RU;\n            break;\n    }\n    return Promise.resolve( translation );\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/i18n-providers.ts","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'list-recursive',\n    template: `\n        <ul>\n            <li *ngFor=\"let item of items\">\n                <a class=\"dropdown-item\">\n                    {{item.title}}\n                </a>\n                <list-recursive [inputItems]=\"inputItems\" [parentId]=\"item.id\" [currentId]=\"currentId\"></list-recursive>\n            </li>\n        </ul>\n    `\n})\nexport class ListRecursiveComponent implements OnInit, OnChanges {\n    @Input() inputItems: any[];\n    @Input() items: any[];\n    @Input() parentId: number;\n    @Input() currentId: number;\n    currentParentsIds: number[];\n\n    ngOnInit(): void {\n        this.filterInputItems();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if( changes.inputItems ){\n            this.filterInputItems();\n        }\n        if( changes.currentId ){\n            this.updateParentsIds();\n        }\n    }\n\n    filterInputItems()\n    {\n        this.items = [];\n        let items = this.items;\n        const parentId = this.parentId;\n        this.inputItems.forEach(function(item){\n            if( item.parent_id === parentId ){\n                items.push( item );\n            }\n        });\n        this.updateParentsIds();\n    }\n\n    /**\n     * Update parents ids\n     */\n    updateParentsIds(): void {\n        let index = _.findIndex( this.inputItems, {id: this.currentId} );\n        this.currentParentsIds = [];\n        if( index === -1 ){\n            return;\n        }\n        this.currentParentsIds = this.getParentIds( this.inputItems[index].parent_id );\n    }\n\n    /**\n     *\n     * @param parentId\n     * @param parentIds\n     * @returns {number[]}\n     */\n    getParentIds( parentId, parentIds ?: number[] ): number[] {\n        parentIds = parentIds || [];\n        if( parentId > 0 ){\n            parentIds.push( parentId );\n            let index = _.findIndex( this.inputItems, {id: parentId} );\n            if( index === -1 ){\n                return parentIds;\n            }\n            return this.getParentIds( this.inputItems[index].parent_id, parentIds );\n        } else {\n            return parentIds;\n        }\n    }\n\n    /**\n     * Check parent id\n     * @param itemId\n     * @returns {boolean}\n     */\n    getIsActiveParent( itemId: number ): boolean {\n        return this.currentParentsIds.indexOf( itemId ) > -1;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/list-recursive.component.ts","export class Category {\n    constructor(\n        public id: number,\n        public parent_id: number,\n        public name: string,\n        public title: string,\n        public description: string,\n        public content_type: string\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/category.model.ts","export class ContentField {\n    constructor(\n        public id: string,\n        public name: string,\n        public title: string,\n        public description: string,\n        public input_type: string,\n        public input_type_options: any[],\n        public output_type: string,\n        public output_type_options: any[],\n        public group: string,\n        public is_filter: boolean,\n        public required: boolean\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/content_field.model.ts","import { ContentField } from './content_field.model';\n\nexport class ContentType {\n    constructor(\n        public id: string,\n        public name: string,\n        public title: string,\n        public description: string,\n        public collection: string,\n        public fields: ContentField[],\n        public groups: string[],\n        public is_active: boolean\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/content_type.model.ts","export class FieldTypeProperty {\n    constructor(\n        public name: string,\n        public title: string,\n        public default_value: string\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type-property.model.ts","export class Product {\n    constructor(\n        public id: number,\n        public parent_id: number,\n        public content_type: string,\n        public name: string,\n        public title: string,\n        public description: string,\n        public price: number\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/product.model.ts","import { Component} from '@angular/core';\n\n@Component({\n    selector: 'not-found-app',\n    template: `<h3 class=\"mt-3\">Page not found.</h3>`\n})\nexport class NotFoundComponent { }\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/not-found.component.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page_orders.html'\n})\nexport class OrdersComponent implements OnInit {\n    title = 'Заказы';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/orders.component.ts","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { DataService } from './services/data-service.abstract';\nimport { AlertModalContent, ConfirmModalContent } from './app.component';\n\n@Component({\n\n})\nexport abstract class ModalContentAbstractComponent implements OnInit {\n    @Input() modalTitle;\n    @Input() itemId;\n    @Input() isItemCopy;\n\n    private fb: FormBuilder;\n    public dataService: DataService;\n    private activeModal: NgbActiveModal;\n\n    submitted: boolean = false;\n    loading: boolean = false;\n    errorMessage: string;\n    form: FormGroup;\n    formErrors = {};\n    validationMessages = {};\n    formFields = {};\n    data = {};\n\n    constructor(\n        fb: FormBuilder,\n        dataService: DataService,\n        activeModal: NgbActiveModal,\n        tooltipConfig: NgbTooltipConfig\n    ) {\n        this.fb = fb;\n        this.dataService = dataService;\n        this.activeModal = activeModal;\n\n        tooltipConfig.placement = 'bottom';\n        tooltipConfig.container = 'body';\n    }\n\n    ngOnInit(): void {\n        this.buildForm(this.formFields);\n        if(this.itemId){\n            this.getModelData();\n        }\n    }\n\n    getModelData(): void {\n        this.loading = true;\n        this.dataService.getItem(this.itemId)\n            .then(item => {\n                if(this.isItemCopy){\n                    item.id = '';\n                    item.name = '';\n                }\n                this.data = item;\n                this.loading = false;\n            });\n    }\n\n    /** Build form groups */\n    buildForm(formFields: any): void {\n        let controls = {};\n        for (let key in formFields) {\n            let options = formFields[key];\n            if(!this.data[key]){\n                this.data[key] = options.value;\n            }\n            controls[key] = new FormControl(this.data[key], options.validators);\n            this.formErrors[key] = '';\n            this.validationMessages[key] = options.messages;\n        }\n\n        this.form = this.fb.group(controls);\n        this.form.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n    }\n\n    /** Callback on form value changed */\n    onValueChanged(data?: any): void{\n        if (!this.form) { return; }\n\n        for (let fieldName in data) {\n            this.formErrors[fieldName] = '';\n            let control = this.form.get(fieldName);\n            if (control && (control.dirty || this.submitted) && !control.valid) {\n                for (let key in control.errors) {\n                    this.formErrors[fieldName] += this.validationMessages[fieldName][key] + ' ';\n                }\n            }\n\n        }\n    }\n\n    /** Close modal */\n    closeModal() {\n        this.activeModal.close();\n    }\n\n    /** Submit form */\n    onSubmit() {\n        this.submitted = true;\n        this.closeModal();\n    }\n}\n\n@Component({\n    //providers: [ NgbTooltipConfig ]\n})\nexport abstract class PageTableAbstractComponent implements OnInit {\n    errorMessage: string;\n    items: any[] = [];\n    title: string = 'Page with data table';\n    modalRef: NgbModalRef;\n    loading: boolean = false;\n    selectedIds: string[] = [];\n\n    public dataService: DataService;\n    private activeModal: NgbActiveModal;\n    private modalService: NgbModal;\n    private titleService: Title;\n\n    constructor(\n        dataService: DataService,\n        activeModal: NgbActiveModal,\n        modalService: NgbModal,\n        titleService: Title\n    ) {\n        this.dataService = dataService;\n        this.activeModal = activeModal;\n        this.modalService = modalService;\n        this.titleService = titleService;\n    }\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n        this.getList();\n    }\n\n    public setTitle( newTitle: string ) {\n        this.titleService.setTitle( newTitle );\n    }\n\n    modalOpen(itemId?: number, isItemCopy?: boolean): void {\n        this.modalRef = this.modalService.open(this.getModalContent(), {size: 'lg'});\n        this.modalRef.componentInstance.modalTitle = itemId && !isItemCopy\n            ? 'Edit'\n            : 'Add';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.isItemCopy = isItemCopy || false;\n        this.modalRef.result.then((result) => {\n            this.getList();\n        }, (reason) => {\n            //console.log( 'reason', reason );\n        });\n    }\n\n    deleteItemConfirm(itemId): void{\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = 'Are you sure you want to remove this item?';\n        this.modalRef.result.then((result) => {\n            if( result == 'accept' ){\n                this.deleteItem(itemId);\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    deleteItem(itemId: number): void{\n        this.dataService.deleteItem(itemId)\n            .then((res) => {\n                if(res.success){\n                    this.getList();\n                } else {\n                    if(res.msg){\n                        this.modalRef = this.modalService.open(AlertModalContent);\n                        this.modalRef.componentInstance.modalContent = res.msg;\n                        this.modalRef.componentInstance.modalTitle = 'Error';\n                        this.modalRef.componentInstance.messageType = 'error';\n                    }\n                }\n            });\n    }\n\n    getModalContent(){\n        return ModalContentAbstractComponent;\n    }\n\n    getList(): void {\n        this.loading = true;\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/page-table.abstract.ts","import { Component, OnInit, Input, Pipe, PipeTransform } from '@angular/core';\nimport { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CategoriesService } from './services/categories.service';\nimport { ContentTypesService } from './services/content_types.service';\nimport { ProductsService } from './services/products.service';\nimport { ContentType } from './models/content_type.model';\nimport { Category } from \"./models/category.model\";\nimport { Product } from \"./models/product.model\";\nimport { ContentField } from \"./models/content_field.model\";\nimport { filterFieldByGroup } from \"./filter-field-by-group.pipe\";\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'ngbd-modal-content',\n    templateUrl: 'templates/modal_product.html'\n})\nexport class ProductModalContent implements OnInit {\n    @Input() modalTitle: string;\n    @Input() itemId: number;\n    @Input() category: Category;\n    submitted: boolean = false;\n    loading: boolean = false;\n    errorMessage: string;\n    model: Product;\n    contentTypes: ContentType[] = [];\n    currentContentType: ContentType = new ContentType('','','','','',[],[],true);\n\n    form: FormGroup;\n    formErrors = {\n        parent_id: '',\n        name: '',\n        title: '',\n        content_type: ''\n    };\n\n    constructor(\n        private fb: FormBuilder,\n        public activeModal: NgbActiveModal,\n        private contentTypesService: ContentTypesService,\n        private productsService: ProductsService\n    ) {}\n\n    /** On initialize */\n    ngOnInit(): void {\n        this.model = new Product(0,0,this.category.content_type,'','','',0);\n\n        this.buildForm();\n        if( this.itemId ){\n\n            this.getData();\n\n        } else {\n            this.getContentTypes()\n                .then(\n                    items => {\n                        this.contentTypes = items;\n                        this.selectCurrentContentType();\n                        this.updateForm();\n                    },\n                    error => this.errorMessage = <any>error);\n        }\n    }\n\n    buildForm(): void{\n        let group: any = {};\n        group['content_type'] = new FormControl(this.category.content_type, Validators.required);\n        this.form = new FormGroup(group);\n    }\n\n    /** Build form */\n    updateForm(data ?: any): void {\n        if( !data ){\n            data = this.form.value;\n        }\n        let newKeys = _.map(this.currentContentType.fields, function(field){\n            return field.name;\n        });\n        newKeys.push( 'content_type' );\n\n        //Remove keys\n        for (let key in this.form.controls) {\n            if (this.form.controls.hasOwnProperty(key)) {\n                if( newKeys.indexOf(key) === -1 ){\n                    this.form.removeControl( key );\n                }\n            }\n        }\n\n        //Add new controls\n        this.currentContentType.fields.forEach(field => {\n            if( !this.form.controls[ field.name ] ){\n                let group = field.required\n                    ? new FormControl(data[field.name] || '', Validators.required)\n                    : new FormControl(data[field.name] || '');\n                this.form.addControl( field.name, group );\n            }\n        });\n    }\n\n    getData(): void {\n        this.loading = true;\n\n        this.productsService.getItem( this.itemId )\n            .then(data => {\n                return new Promise((resolve, reject) => {\n                    this.getContentTypes()\n                        .then(items => {\n                            this.contentTypes = items;\n                            resolve(data);\n                        });\n                });\n            })\n            .then(data => {\n                this.setCurrentContentType( data.content_type );\n                this.updateForm( data );\n                this.loading = false;\n            });\n    }\n\n    /** Select current content type */\n    selectCurrentContentType(): void {\n        let index = _.findIndex( this.contentTypes, {name: this.form.get('content_type').value} );\n        if( index == -1 ){\n            index = 0;\n        }\n        if( this.contentTypes[index] ){\n            this.currentContentType = _.clone( this.contentTypes[index] );\n            this.form.get('content_type').setValue(this.currentContentType.name);\n            this.updateForm();\n        }\n    }\n\n    setCurrentContentType( contentTypeName: string ): void {\n        let index = _.findIndex( this.contentTypes, {name: contentTypeName} );\n        if( index == -1 ){\n            index = 0;\n        }\n        if( this.contentTypes[index] ){\n            this.currentContentType = _.clone( this.contentTypes[index] );\n            this.form.get('content_type').setValue(this.currentContentType.name);\n        }\n    }\n\n    /** On change content type */\n    onChangeContentType(): void {\n        this.selectCurrentContentType();\n    }\n\n    /** Get content types */\n    getContentTypes(){\n        return this.contentTypesService.getList( true );\n    }\n\n    /**\n     * On form value changed\n     * @param data\n     */\n    onValueChanged(data?: any){\n        if (!this.form) { return; }\n\n        //console.log( 'onValueChange', data );\n\n    }\n\n    /** Submit form */\n    onSubmit() {\n\n        this.errorMessage = '';\n        this.submitted = true;\n\n        if( !this.form.valid ){\n            this.onValueChanged();\n            this.errorMessage = 'Please fix the errors fill.';\n            return;\n        }\n\n        let data = this.form.value;\n        data.parent_id = this.category.id;\n\n        //TODO: write code for update\n        this.productsService.createItem( data )\n            .then((res) => {\n                if( res.success ){\n                    this.closeModal();\n                } else {\n                    if( res.msg ){\n                        this.errorMessage = res.msg;\n                    }\n                }\n            });\n    }\n\n    /** Close modal */\n    closeModal() {\n        let reason = this.itemId ? 'edit' : 'create';\n        this.activeModal.close( { reason: reason, data: this.model } );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/product.component.ts","import { Injectable }              from '@angular/core';\nimport { Http, Response }          from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { Category } from '../models/category.model';\n\n@Injectable()\nexport class CategoriesService {\n\n    private headers = new Headers({'Content-Type': 'application/json'});\n    private listUrl = 'app/categories_list';\n    private oneUrl = 'app/category';\n\n    constructor (private http: Http) {}\n\n    createItem(item: Category): Promise<any> {\n        return this.http\n            .post(this.oneUrl, JSON.stringify( item ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    editItem(id: number, item: Category): Promise<any> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http\n            .put(url, JSON.stringify( item ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    getItem(id: number): Promise<Category> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => response.json().data as Category)\n            .catch(this.handleError);\n    }\n\n    getList(): Observable<Category[]> {\n        return this.http.get(this.listUrl)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    deleteItem(id: number): Promise<any> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http.delete(url, {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response): any {\n        let body = res.json();\n        return body.data || {};\n    }\n\n    private handleError (error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Promise.reject(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/categories.service.ts","import { Injectable }              from '@angular/core';\nimport { Http, Response }          from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { ContentType } from '../models/content_type.model';\n\n@Injectable()\nexport class ContentTypesService {\n\n    private headers = new Headers({'Content-Type': 'application/json'});\n    private listUrl = 'app/content_type_list';\n    private listUrlFull = 'app/content_type_list?full=1';\n    private oneUrl = 'app/content_type';\n\n    constructor (private http: Http) {}\n\n    getList(full?: boolean): Promise<ContentType[]> {\n        let url = full ? this.listUrlFull : this.listUrl;\n        return this.http.get( url )\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    getItem(id: string): Promise<ContentType> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => response.json().data as ContentType)\n            .catch(this.handleError);\n    }\n\n    createItem(item: ContentType): Promise<any> {\n        return this.http\n            .post(this.oneUrl, JSON.stringify( item ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    editItem(id: string, item: ContentType): Promise<any> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http\n            .put(url, JSON.stringify( item ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    deleteItem(id: string): Promise<any> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http.delete(url, {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response): any {\n        let body = res.json();\n        return body.data || {};\n    }\n\n    private handleError (error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Promise.reject(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/content_types.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport abstract class DataService {\n\n    private http: Http;\n    private headers = new Headers({'Content-Type': 'application/json'});\n    private requestUrl = '';\n\n    constructor(http: Http) {\n        this.http = http;\n        this.requestUrl = 'app/data_list';\n    }\n\n    setRequestUrl(url){\n        this.requestUrl = url;\n    }\n\n    getItem(id: string): Promise<any> {\n        const url = `${this.requestUrl}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => response.json().data)\n            .catch(this.handleError);\n    }\n\n    getList(): Observable<any[]> {\n        return this.http.get(this.requestUrl)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    deleteItem(id: number): Promise<any> {\n        const url = `${this.requestUrl}/${id}`;\n        return this.http.delete(url, {headers: this.headers})\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.handleError);\n    }\n\n    create(item: any): Promise<any> {\n        return this.http\n            .post(this.requestUrl, JSON.stringify(item), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    update(item: any): Promise<any> {\n        const url = `${this.requestUrl}/${item.id}`;\n        return this.http\n            .put(url, JSON.stringify(item), {headers: this.headers})\n            .toPromise()\n            .then(() => item)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response): any {\n        let body = res.json();\n        return body.data || {};\n    }\n\n    private handleError (error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Promise.reject(errMsg);\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/data-service.abstract.ts","import { Injectable }              from '@angular/core';\nimport { Http, Response }          from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { Product } from '../models/product.model';\n\n@Injectable()\nexport class ProductsService {\n\n    private headers = new Headers({'Content-Type': 'application/json'});\n    private listUrl = 'app/products_list';\n    private oneUrl = 'app/product';\n\n    constructor (private http: Http) {}\n\n    createItem(data: any): Promise<any> {\n        return this.http\n            .post(this.oneUrl, JSON.stringify( data ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    editItem(id: number, data: any): Promise<any> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http\n            .put(url, JSON.stringify( data ), {headers: this.headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    getList(categoryId: number): Observable<Product[]> {\n        return this.http.get(this.listUrl + '/' + categoryId)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    getItem(id: number): Promise<Product> {\n        const url = `${this.oneUrl}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => response.json().data as Product)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response): any {\n        let body = res.json();\n        return body.data || {};\n    }\n\n    private handleError (error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Promise.reject(errMsg);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/products.service.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page_settings.html'\n})\nexport class SettingsComponent implements OnInit {\n    title = 'Настройки';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/settings.component.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page_statistics.html'\n})\nexport class StatisticsComponent implements OnInit {\n    title = 'Статистика';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/stat.component.ts","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'cmp-table',\n    templateUrl: 'templates/cmp-table.html'\n})\nexport class TableComponent implements OnInit {\n    @Input() items: any[];\n    @Input() tableFields: any[];\n    @Input() itemsTotal: number;\n    @Output() editItemRequest = new EventEmitter();\n    @Output() copyItemRequest = new EventEmitter();\n    @Output() deleteItemRequest = new EventEmitter();\n    loading: boolean = false;\n    selectedIds: string[] = [];\n    sortBy: string;\n    sortDir: string = 'asc';\n\n    constructor(public router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.sortBy = this.tableFields[0].name;\n    }\n\n    editItem(itemId: number): void {\n        this.editItemRequest.emit(itemId);\n    }\n\n    copyItem(itemId: number): void {\n        this.copyItemRequest.emit(itemId);\n    }\n\n    deleteItem(itemId: number): void {\n        this.deleteItemRequest.emit(itemId);\n    }\n\n    selectSortBy(fieldName: string): void {\n        if (this.sortBy == fieldName) {\n            this.sortDir = this.sortDir == 'asc' ? 'desc' : 'asc';\n        } else {\n            this.sortBy = fieldName;\n        }\n    }\n\n    selectAll(event): void {\n        this.selectedIds = [];\n        if (event.target.checked) {\n            for (let item of this.items) {\n                this.selectedIds.push(item.id);\n            }\n        }\n    }\n\n    setSelected(event, itemId: string): void {\n        const index = this.selectedIds.indexOf(itemId);\n        if (event.target.checked) {\n            if (index == -1) {\n                this.selectedIds.push(itemId);\n            }\n        } else if (index > -1) {\n            this.selectedIds.splice(index, 1);\n        }\n    }\n\n    getIsSelected(itemId: string): boolean {\n        return this.selectedIds.lastIndexOf(itemId) > -1;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/table.component.ts","module.exports = \"<div>\\n\\n    <div class=\\\"card-navbar\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/orders']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-bag\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Orders</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/statistics']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-bar-graph-2\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Statistics</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/catalog']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-layers\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Catalog</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/settings']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-cog\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Settings</span>\\n            </a>\\n        </div>\\n    </div>\\n\\n    <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/app.component.html\n// module id = ../../../../../src/app/templates/app.component.html\n// module chunks = main","module.exports = \"<div class=\\\"d-inline-block dropdown\\\">\\n    <button class=\\\"btn btn-info dropdown-toggle dropdown-toggle-hover\\\">\\n        <i class=\\\"icon-folder\\\"></i>\\n        {{currentCategory.title}}\\n    </button>\\n    <div class=\\\"dropdown-menu shadow\\\" #categoriesDropdown>\\n        <div class=\\\"dropdown-header\\\">\\n            <button class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Open root category\\\" (click)=\\\"goToRootCategory()\\\" *ngIf=\\\"currentCategory.id > 0\\\">\\n                <i class=\\\"icon-home\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Add new category\\\" (click)=\\\"openModalCategory()\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Edit current category\\\" (click)=\\\"openModalCategory(currentCategory.id)\\\" [hidden]=\\\"currentCategory.id == 0\\\">\\n                <i class=\\\"icon-pencil\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Copy category\\\" (click)=\\\"copyCategory()\\\" [hidden]=\\\"currentCategory.id == 0\\\">\\n                <i class=\\\"icon-stack\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Move current category\\\" (click)=\\\"moveCategory()\\\" [hidden]=\\\"currentCategory.id == 0\\\">\\n                <i class=\\\"icon-arrow-right\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Delete current category\\\" (click)=\\\"deleteCategoryItemConfirm(currentCategory.id)\\\" [hidden]=\\\"currentCategory.id == 0\\\">\\n                <i class=\\\"icon-cross\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <div class=\\\"dropdown-header\\\" *ngIf=\\\"categories.length == 0\\\">\\n            No categories.\\n        </div>\\n\\n        <categories-list [inputItems]=\\\"categories\\\" [parentId]=\\\"0\\\" [currentId]=\\\"currentCategory.id\\\"></categories-list>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/categories-menu.html\n// module id = ../../../../../src/app/templates/categories-menu.html\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\" [class.loading]=\\\"loading\\\">\\n    <table class=\\\"table table-striped table-divided mb-0\\\">\\n        <thead>\\n            <tr>\\n                <th class=\\\"text-left\\\">\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" (click)=\\\"selectAll($event)\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </th>\\n                <th *ngFor=\\\"let tableField of tableFields; let index=index\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\" (click)=\\\"selectSortBy(tableField.name)\\\">\\n                        {{tableField.title}}\\n                        <i [class.icon-arrow-down]=\\\"sortDir == 'asc'\\\" [class.icon-arrow-up]=\\\"sortDir == 'desc'\\\" [style.visibility]=\\\"tableField.name == sortBy ? 'visible' : 'hidden'\\\"></i>\\n                    </button>\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr class=\\\"show-on-hover-parent\\\" *ngFor=\\\"let item of items\\\">\\n                <td>\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [checked]=\\\"getIsSelected(item.id)\\\" (click)=\\\"setSelected($event, item.id)\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </td>\\n                <td *ngFor=\\\"let tableField of tableFields; let index=index\\\">\\n                    <div class=\\\"relative\\\" *ngIf=\\\"index == tableFields.length - 1\\\">\\n                        <div class=\\\"show-on-hover no-wrap\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Edit\\\" (click)=\\\"editItem(item.id)\\\">\\n                                <i class=\\\"icon-pencil\\\"></i>\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Copy\\\" (click)=\\\"copyItem(item.id)\\\">\\n                                <i class=\\\"icon-stack\\\"></i>\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete\\\" (click)=\\\"deleteItem(item.id)\\\">\\n                                <i class=\\\"icon-cross\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    {{item[tableField.name]}}\\n\\n                    <!--i class=\\\"big text-success icon-circle-check\\\" [hidden]=\\\"!item.is_active\\\"></i>\\n                    <i class=\\\"big text-muted icon-circle-cross\\\" [hidden]=\\\"item.is_active\\\"></i-->\\n                </td>\\n            </tr>\\n        <tr [hidden]=\\\"items.length > 0\\\" class=\\\"table-active\\\">\\n            <td [attr.colspan]=\\\"tableFields.length + 1\\\" class=\\\"text-center p-4\\\">\\n                Empty.\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<div class=\\\"card-footer\\\">\\n\\n    <div class=\\\"float-right\\\">\\n        <select class=\\\"form-control\\\">\\n            <option value=\\\"10\\\">10</option>\\n            <option value=\\\"20\\\">20</option>\\n            <option value=\\\"50\\\">50</option>\\n            <option value=\\\"100\\\">100</option>\\n        </select>\\n    </div>\\n\\n    <ngb-pagination [class]=\\\"'mb-0'\\\" [collectionSize]=\\\"120\\\" [page]=\\\"1\\\" [maxSize]=\\\"8\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"false\\\"></ngb-pagination>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/cmp-table.html\n// module id = ../../../../../src/app/templates/cmp-table.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{modalContent}}\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-info btn-wide\\\" (click)=\\\"activeModal.close()\\\">\\n        Ok\\n    </button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_alert.html\n// module id = ../../../../../src/app/templates/modal_alert.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" [class.loading]=\\\"loading\\\">\\n\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.parent_id\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldContentType\\\">Родительская папка</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldParent\\\" class=\\\"form-control\\\" name=\\\"parent_id\\\" formControlName=\\\"parent_id\\\" [(ngModel)]=\\\"model.parent_id\\\">\\n                    <option value=\\\"0\\\">Корневая категория</option>\\n                    <option value=\\\"{{category.id}}\\\" *ngFor=\\\"let category of categories\\\">{{category.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.parent_id\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.parent_id}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.name\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldName\\\">Системное имя</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <input type=\\\"text\\\" id=\\\"fieldName\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"model.name\\\">\\n                <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.name}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.title\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldTitle\\\">Название</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <input type=\\\"text\\\" id=\\\"fieldTitle\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\">\\n                <div *ngIf=\\\"formErrors.title\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.title}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldDescription\\\">Описание</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <textarea type=\\\"text\\\" id=\\\"fieldDescription\\\" rows=\\\"4\\\" class=\\\"form-control\\\" name=\\\"description\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.content_type\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldContentType\\\">Тип контента</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldContentType\\\" class=\\\"form-control\\\" name=\\\"content_type\\\" formControlName=\\\"content_type\\\" [(ngModel)]=\\\"model.content_type\\\">\\n                    <option value=\\\"1\\\" *ngFor=\\\"let contentType of contentTypes\\\" [value]=\\\"contentType.name\\\">{{contentType.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.content_type\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.content_type}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            {{errorMessage}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-wide\\\">\\n            Save\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Cancel\\n        </button>\\n    </div>\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_category.html\n// module id = ../../../../../src/app/templates/modal_category.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{modalContent}}\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success btn-wide\\\" (click)=\\\"accept()\\\">\\n        Yes\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.close()\\\">\\n        No\\n    </button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_confirm.html\n// module id = ../../../../../src/app/templates/modal_confirm.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [class.loading]=\\\"loading\\\">\\n\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n            <!-- ContentType form -->\\n            <div class=\\\"col-lg-4\\\" [formGroup]=\\\"contentTypeForm\\\">\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.contentType.title\\\">\\n                    <label class=\\\"label-filled\\\">\\n                        Название\\n                    </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" formControlName=\\\"title\\\" [(ngModel)]=\\\"model.title\\\">\\n                    <div *ngIf=\\\"formErrors.contentType.title\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.contentType.title}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.contentType.name\\\">\\n                    <label class=\\\"label-filled\\\">\\n                        Системное имя\\n                    </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"model.name\\\">\\n                    <div *ngIf=\\\"formErrors.contentType.name\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.contentType.name}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"label-filled\\\">\\n                        Описание\\n                    </label>\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-12\\\">\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"label-filled\\\">Коллекция</label>\\n                            <div class=\\\"input-group\\\">\\n                                <select class=\\\"form-control form-control-sm\\\" name=\\\"collection\\\" formControlName=\\\"collection\\\" [(ngModel)]=\\\"model.collection\\\">\\n                                    <option value=\\\"{{collection}}\\\" *ngFor=\\\"let collection of collections\\\">{{collection}}</option>\\n                                </select>\\n                                <div class=\\\"input-group-btn\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Add collection\\\" (click)=\\\"displayToggle(addCollectionBlock); addCollectionField.value = ''; onValueChanged(); addCollectionField.focus()\\\">\\n                                        <i class=\\\"icon-plus\\\"></i>\\n                                    </button>\\n                                </div>\\n                                <div class=\\\"input-group-btn\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete collection\\\" (click)=\\\"deleteCollection()\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"card p-1 mt-2\\\" #addCollectionBlock style=\\\"display: none;\\\" [class.form-group-message]=\\\"formErrors.contentType.new_collection\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"new_collection\\\" #addCollectionField>\\n                                <div *ngIf=\\\"formErrors.contentType.new_collection\\\" class=\\\"alert alert-danger mb-1\\\">\\n                                    {{formErrors.contentType.new_collection}}\\n                                </div>\\n\\n                                <div class=\\\"text-right mt-1\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addCollection();\\\">\\n                                        Add\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addCollectionBlock.style.display = 'none'; formErrors.contentType.new_collection = ''\\\">\\n                                        Cancel\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <!-- /ContentType form -->\\n\\n            <!-- Field form -->\\n            <div class=\\\"col-lg-8\\\" [formGroup]=\\\"fieldForm\\\">\\n\\n                <label class=\\\"label-filled\\\" [hidden]=\\\"action != 'add_field'\\\">\\n                    Добавить поле\\n                </label>\\n                <label class=\\\"label-filled\\\" [hidden]=\\\"action != 'edit_field'\\\">\\n                    Редактировать поле\\n                </label>\\n\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.field.title\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Название</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"field_title\\\" formControlName=\\\"title\\\">\\n                                <div *ngIf=\\\"formErrors.field.title\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.field.title}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.field.name\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Системное имя</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"field_name\\\" formControlName=\\\"name\\\">\\n                                <div *ngIf=\\\"formErrors.field.name\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.field.name}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Описание</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <textarea type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"field_description\\\" formControlName=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.field.input_type\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Тип ввода</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"field_input_type\\\" formControlName=\\\"input_type\\\">\\n                                        <option value=\\\"text\\\">Текстовое поле</option>\\n                                        <option value=\\\"textarea\\\">Многострочный текст</option>\\n                                        <option value=\\\"richtext\\\">Текстовый редактор</option>\\n                                        <option value=\\\"number\\\">Число</option>\\n                                        <option value=\\\"select\\\">Выпадающий список</option>\\n                                        <option value=\\\"checkbox\\\">Чекбокс</option>\\n                                        <option value=\\\"radio\\\">Переключатель</option>\\n                                        <option value=\\\"table\\\">Таблица</option>\\n                                        <option value=\\\"date\\\">Дата</option>\\n                                        <option value=\\\"file\\\">Файл</option>\\n                                        <option value=\\\"image\\\">Картинка</option>\\n                                    </select>\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Options\\\" (click)=\\\"displayToggle(inputTypeOptionsBlock)\\\">\\n                                            <i class=\\\"icon-cog\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors.field.input_type\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.field.input_type}}\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"card card-body mb-3\\\" #inputTypeOptionsBlock style=\\\"display: none;\\\">\\n                            <div>\\n                                Тут будут параметры\\n                            </div>\\n                            <div class=\\\"text-right mt-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"inputTypeOptionsBlock.style.display = 'none';\\\">\\n                                    Close\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.field.output_type\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Тип вывода</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"field_output_type\\\" formControlName=\\\"output_type\\\">\\n                                        <option value=\\\"text\\\">Текст</option>\\n                                        <option value=\\\"number\\\">Число</option>\\n                                        <option value=\\\"select\\\">Выпадающий список</option>\\n                                        <option value=\\\"checkbox\\\">Чекбокс</option>\\n                                        <option value=\\\"radio\\\">Переключатель</option>\\n                                        <option value=\\\"table\\\">Таблица</option>\\n                                        <option value=\\\"image\\\">Картинка</option>\\n                                        <option value=\\\"boolean\\\">Да/Нет</option>\\n                                    </select>\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Options\\\" (click)=\\\"displayToggle(outputTypeOptionsBlock)\\\">\\n                                            <i class=\\\"icon-cog\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors.field.output_type\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.field.output_type}}\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"card card-body mb-3\\\" #outputTypeOptionsBlock style=\\\"display: none;\\\">\\n                            <div>\\n                                Тут будут параметры\\n                            </div>\\n                            <div class=\\\"text-right mt-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"outputTypeOptionsBlock.style.display = 'none'\\\">\\n                                    Close\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label class=\\\"small\\\">Группа</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div [class.form-group-message]=\\\"formErrors.field.group\\\">\\n                                    <div class=\\\"input-group input-group-sm\\\">\\n                                        <select class=\\\"form-control\\\" name=\\\"field_group\\\" formControlName=\\\"group\\\">\\n                                            <option value=\\\"{{group}}\\\" *ngFor=\\\"let group of model.groups\\\">{{group}}</option>\\n                                        </select>\\n                                        <div class=\\\"input-group-btn\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Add group\\\" (click)=\\\"displayToggle(addGroupBlock); addGroupField.value = ''; addGroupField.focus()\\\">\\n                                                <i class=\\\"icon-plus\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                        <div class=\\\"input-group-btn\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete group\\\" (click)=\\\"deleteGroup()\\\">\\n                                                <i class=\\\"icon-cross\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                    <div *ngIf=\\\"formErrors.field.group\\\" class=\\\"alert alert-danger\\\">\\n                                        {{formErrors.field.group}}\\n                                    </div>\\n\\n                                    <div class=\\\"card p-1 mt-2\\\" #addGroupBlock style=\\\"display: none;\\\" [class.form-group-message]=\\\"formErrors.field.new_group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #addGroupField formControlName=\\\"new_group\\\">\\n                                        <div *ngIf=\\\"formErrors.field.new_group\\\" class=\\\"alert alert-danger mb-1\\\">\\n                                            {{formErrors.field.new_group}}\\n                                        </div>\\n                                        <div class=\\\"text-right mt-1\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addGroup();\\\">\\n                                                Add\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addGroupBlock.style.display = 'none'; formErrors.field.new_group = ''\\\">\\n                                                Cancel\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"required\\\" formControlName=\\\"required\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span class=\\\"small\\\">Обязательный</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"show_in_table\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span class=\\\"small\\\">Показывать в таблице</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"is_filter\\\" formControlName=\\\"is_filter\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span class=\\\"small\\\">Показывать в фильтре</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"alert alert-danger mt-3 mb-3\\\" [hidden]=\\\"!errorFieldMessage\\\">\\n                            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorFieldMessage = ''\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                            {{errorFieldMessage}}\\n                        </div>\\n\\n                        <div class=\\\"mt-3\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info btn-wide\\\" (click)=\\\"submitField()\\\" [hidden]=\\\"action != 'add_field'\\\">\\n                                <i class=\\\"icon-plus\\\"></i>\\n                                Add field\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success btn-wide\\\" (click)=\\\"displayToggle(fieldsBlock, true); submitField()\\\" [hidden]=\\\"action != 'edit_field'\\\">\\n                                <i class=\\\"icon-check\\\"></i>\\n                                Save field\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary btn-wide\\\" (click)=\\\"displayToggle(fieldsBlock, true); editFieldCancel()\\\">\\n                                Cancel\\n                            </button>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- /Field form -->\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row mt-3\\\">\\n            <div class=\\\"col-12\\\">\\n\\n                <label class=\\\"label-filled\\\">\\n                    Поля\\n                </label>\\n\\n                <hr class=\\\"mt-0 mb-0\\\">\\n                <div class=\\\"text-center mb-2\\\" style=\\\"margin-top: -0.8rem;\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" [ngSwitch]=\\\"fieldsBlock.style.display\\\" (click)=\\\"displayToggle(fieldsBlock)\\\">\\n                        <span *ngSwitchCase=\\\"'none'\\\">\\n                            <i class=\\\"icon-plus\\\"></i>\\n                            <span i18n>Expand</span>\\n                        </span>\\n                        <span *ngSwitchCase=\\\"'block'\\\">\\n                            <i class=\\\"icon-minus\\\"></i>\\n                            <span i18n>Collapse</span>\\n                        </span>\\n                    </button>\\n                </div>\\n\\n                <div #fieldsBlock style=\\\"display: block;\\\">\\n                    <table class=\\\"table table-striped table-divided mb-0\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Название</th>\\n                                <th>Системное имя</th>\\n                                <th>Тип ввода</th>\\n                                <th>Группа</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr class=\\\"show-on-hover-parent\\\" *ngFor=\\\"let item of model.fields\\\">\\n                                <td>\\n                                    {{item.title}}\\n                                </td>\\n                                <td>\\n                                    {{item.name}}\\n                                </td>\\n                                <td>\\n                                    {{item.input_type}}\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"relative\\\">\\n                                        <div class=\\\"show-on-hover\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"displayToggle(fieldsBlock); editField(item)\\\" [hidden]=\\\"item.name == currentFieldName\\\" ngbTooltip=\\\"Edit\\\">\\n                                                <i class=\\\"icon-pencil\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"displayToggle(fieldsBlock); copyField(item)\\\" ngbTooltip=\\\"Copy\\\">\\n                                                <i class=\\\"icon-stack\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"deleteField(item)\\\" [hidden]=\\\"item.name == currentFieldName\\\" ngbTooltip=\\\"Delete\\\">\\n                                                <i class=\\\"icon-cross\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                    {{item.group}}\\n                                </td>\\n                            </tr>\\n                            <tr [hidden]=\\\"model.fields.length > 0\\\" class=\\\"table-warning\\\">\\n                                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                    Empty\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n\\n                <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                    {{errorMessage}}\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-wide\\\">\\n            Save\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Cancel\\n        </button>\\n    </div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_content_types.html\n// module id = ../../../../../src/app/templates/modal_content_types.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\" [class.loading]=\\\"loading\\\">\\n\\n    <form #formElement=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.name\\\">\\n                    <label for=\\\"fieldName\\\" class=\\\"label-filled\\\">Системное имя</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" id=\\\"fieldName\\\" [(ngModel)]=\\\"data.name\\\">\\n                    <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.name}}\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group form-group-message\\\" [class.form-group-message]=\\\"formErrors.title\\\">\\n                    <label for=\\\"fieldTitle\\\" class=\\\"label-filled\\\">Название</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" formControlName=\\\"title\\\" id=\\\"fieldTitle\\\" [(ngModel)]=\\\"data.title\\\">\\n                    <div *ngIf=\\\"formErrors.title\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.title}}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"fieldDescription\\\" class=\\\"label-filled\\\">Описание</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"description\\\" formControlName=\\\"description\\\" id=\\\"fieldDescription\\\" [(ngModel)]=\\\"data.description\\\"></textarea>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n\\n    <label class=\\\"label-filled\\\">Свойства</label>\\n\\n    <table class=\\\"table table-bordered table-divided mb-0\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n                    Системное имя\\n                </th>\\n                <th>\\n                    Название\\n                </th>\\n                <th>\\n                    По умолчанию\\n                </th>\\n                <th></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let item of data.properties; let index=index\\\">\\n                <td>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.name\\\" name=\\\"name\\\">\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\">\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.default_value\\\" name=\\\"default_value\\\">\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteRow(index)\\\" ngbTooltip=\\\"Remove\\\">\\n                        <i class=\\\"icon-cross\\\"></i>\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n        <tfoot>\\n            <tr class=\\\"bg-faded\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addRow()\\\">\\n                        <i class=\\\"icon-plus\\\"></i>\\n                        Добавить\\n                    </button>\\n                </td>\\n            </tr>\\n        </tfoot>\\n    </table>\\n\\n    <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        {{errorMessage}}\\n    </div>\\n\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-wide\\\" [disabled]=\\\"submitted\\\" (click)=\\\"save()\\\">\\n        Save\\n    </button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n        Cancel\\n    </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_field_type.html\n// module id = ../../../../../src/app/templates/modal_field_type.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" [class.loading]=\\\"loading\\\">\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.content_type\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldContentType\\\">Тип контента</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldContentType\\\" class=\\\"form-control\\\" name=\\\"content_type\\\" formControlName=\\\"content_type\\\" (change)=\\\"onChangeContentType()\\\">\\n                    <option value=\\\"1\\\" *ngFor=\\\"let contentType of contentTypes\\\" [value]=\\\"contentType.name\\\">{{contentType.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.content_type\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.content_type}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <ngb-tabset>\\n            <ngb-tab title=\\\"{{groupName}}\\\" id=\\\"{{i + 1}}\\\" *ngFor=\\\"let groupName of currentContentType.groups; let i=index\\\">\\n                <ng-template ngbTabContent>\\n                    <div class=\\\"pt-3\\\">\\n\\n                        <div class=\\\"row form-group\\\" *ngFor=\\\"let field of currentContentType.fields | filterFieldByGroup: groupName\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">{{ field.title }}</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\" [ngSwitch]=\\\"field.input_type\\\">\\n\\n                                <input *ngSwitchCase=\\\"'text'\\\" type=\\\"text\\\" id=\\\"field_{{field.name}}\\\" class=\\\"form-control\\\" [formControlName]=\\\"field.name\\\">\\n\\n                                <input *ngSwitchCase=\\\"'number'\\\" type=\\\"number\\\" id=\\\"field_{{field.name}}\\\" min=\\\"0\\\" class=\\\"form-control\\\" [formControlName]=\\\"field.name\\\">\\n\\n                                <textarea *ngSwitchCase=\\\"'textarea'\\\" rows=\\\"6\\\" id=\\\"field_{{field.name}}\\\" class=\\\"form-control\\\" [formControlName]=\\\"field.name\\\"></textarea>\\n\\n                                <input *ngSwitchCase=\\\"'image'\\\" type=\\\"file\\\" id=\\\"field_{{field.name}}\\\" class=\\\"form-control\\\" [formControlName]=\\\"field.name\\\">\\n\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </ng-template>\\n            </ngb-tab>\\n        </ngb-tabset>\\n\\n        <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            {{errorMessage}}\\n        </div>\\n\\n    </div>\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-wide\\\">\\n            Save\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Cancel\\n        </button>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal_product.html\n// module id = ../../../../../src/app/templates/modal_product.html\n// module chunks = main","module.exports = \"\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/catalog/content_types']\\\">\\n                <i class=\\\"icon-box\\\"></i>\\n                Типы товаров\\n            </a>\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/catalog/field_types']\\\">\\n                <i class=\\\"icon-toggle\\\"></i>\\n                Типы полей\\n            </a>\\n        </div>\\n        <h3>\\n            <i class=\\\"icon-layers\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-right\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-info\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    Массовые дейсвия\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button class=\\\"dropdown-item\\\">Отключить / включить</button>\\n                    <button class=\\\"dropdown-item\\\">Удалить</button>\\n                </div>\\n            </div>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"modalProductOpen()\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n                Add product\\n            </button>\\n\\n        </div>\\n        <div class=\\\"float-left\\\">\\n\\n            <categories-menu (changeRequest)=\\\"openCategory($event)\\\"></categories-menu>\\n\\n        </div>\\n    </div>\\n\\n    <cmp-table [items]=\\\"items\\\" [itemsTotal]=\\\"100\\\" [tableFields]=\\\"tableFields\\\" (editItemRequest)=\\\"modalProductOpen($event)\\\"></cmp-table>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_catalog.html\n// module id = ../../../../../src/app/templates/page_catalog.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-box\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-right\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-info\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    Массовые дейсвия\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button class=\\\"dropdown-item\\\">Отключить / включить</button>\\n                    <button class=\\\"dropdown-item\\\">Удалить</button>\\n                </div>\\n            </div>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success d-inline-block btn-wide\\\" (click)=\\\"modalOpen()\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n                Add\\n            </button>\\n        </div>\\n        <div class=\\\"float-left\\\">\\n            <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/catalog']\\\">\\n                <i class=\\\"icon-arrow-left\\\"></i>\\n                Каталог\\n            </a>\\n        </div>\\n    </div>\\n\\n    <cmp-table [items]=\\\"items\\\" [itemsTotal]=\\\"100\\\" [tableFields]=\\\"tableFields\\\" (editItemRequest)=\\\"modalOpen($event)\\\" (copyItemRequest)=\\\"copyItem($event)\\\" (deleteItemRequest)=\\\"deleteItemConfirm($event)\\\"></cmp-table>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_content_types.html\n// module id = ../../../../../src/app/templates/page_content_types.html\n// module chunks = main","module.exports = \"\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-toggle\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-right\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-info\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    Массовые дейсвия\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button class=\\\"dropdown-item\\\">Отключить / включить</button>\\n                    <button class=\\\"dropdown-item\\\">Удалить</button>\\n                </div>\\n            </div>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success d-inline-block btn-wide\\\" (click)=\\\"modalOpen()\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n                Add\\n            </button>\\n        </div>\\n\\n        <div class=\\\"float-left\\\">\\n            <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/catalog']\\\">\\n                <i class=\\\"icon-arrow-left\\\"></i>\\n                Каталог\\n            </a>\\n        </div>\\n    </div>\\n\\n    <cmp-table [items]=\\\"items\\\" [itemsTotal]=\\\"100\\\" [tableFields]=\\\"tableFields\\\" (editItemRequest)=\\\"modalOpen($event)\\\" (deleteItemRequest)=\\\"deleteItemConfirm($event)\\\"></cmp-table>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_field_types.html\n// module id = ../../../../../src/app/templates/page_field_types.html\n// module chunks = main","module.exports = \"\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-bag\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-right\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    Массовые дейсвия\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button class=\\\"dropdown-item\\\">Изменить статус</button>\\n                    <button class=\\\"dropdown-item\\\">Удалить</button>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"float-left\\\">\\n\\n            <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\n                    <i class=\\\"icon-grid\\\"></i>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped table-divided mb-0\\\">\\n            <thead>\\n            <tr>\\n                <th>\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        ID\\n                        <i class=\\\"icon-arrow-down\\\"></i>\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Статус\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Дата и время\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Кол-во товаров\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Общая цена\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Пользователь\\n                    </button>\\n                </th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>1</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        01.03.2017\\n                    </td>\\n                    <td>\\n                        2\\n                    </td>\\n                    <td>\\n                        1 100\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>2</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success min-width150\\\">\\n                            Выполнен\\n                        </button>\\n                    </td>\\n                    <td>\\n                        22.02.2017\\n                    </td>\\n                    <td>\\n                        3\\n                    </td>\\n                    <td>\\n                        2 300\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>3</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        20.02.2017\\n                    </td>\\n                    <td>\\n                        5\\n                    </td>\\n                    <td>\\n                        5 520\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>3</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        20.02.2017\\n                    </td>\\n                    <td>\\n                        5\\n                    </td>\\n                    <td>\\n                        5 520\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class=\\\"card-footer\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <select class=\\\"form-control\\\">\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n            </select>\\n        </div>\\n\\n        <ngb-pagination [class]=\\\"'mb-0'\\\" [collectionSize]=\\\"120\\\" [page]=\\\"1\\\" [maxSize]=\\\"8\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"false\\\"></ngb-pagination>\\n\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_orders.html\n// module id = ../../../../../src/app/templates/page_orders.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <!--a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/settings/input_types']\\\">\\n                <i class=\\\"icon-upload\\\"></i>\\n                Типы ввода\\n            </a>\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/settings/output_types']\\\">\\n                <i class=\\\"icon-download\\\"></i>\\n                Типы вывода\\n            </a-->\\n        </div>\\n\\n        <h3>\\n            <i class=\\\"icon-bar-graph-2\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n\\n                <!-- statuses -->\\n                <label class=\\\"label-filled\\\">\\n                    Статусы\\n                </label>\\n\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body text-muted\\\">\\n                        Названия статусов заказов и цвет для вывода на странице заказов в административной части.\\n                    </div>\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <table class=\\\"table table-divided mb-0\\\">\\n                            <thead>\\n                            <tr>\\n                                <th>\\n                                    Название\\n                                </th>\\n                                <th>\\n                                    Шаблон письма\\n                                </th>\\n                                <th>\\n                                    Цвет\\n                                </th>\\n                                <th></th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Новый\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-info\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Принят к оплате\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-success\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Отправлен\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-warning\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Отменен\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-danger\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                            <tfoot>\\n                            <tr class=\\\"bg-faded\\\">\\n                                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-plus\\\"></i>\\n                                        Добавить\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            </tfoot>\\n                        </table>\\n\\n                    </div>\\n                </div>\\n                <!-- /statuses -->\\n\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n\\n                <!-- delivery -->\\n                <label class=\\\"label-filled\\\">\\n                    Методы доставки\\n                </label>\\n\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-body text-muted\\\">\\n                        Список методов доставки для вывода в форме заказа во внешней части сайта.\\n                    </div>\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <table class=\\\"table table-divided mb-0\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>\\n                                        Название\\n                                    </th>\\n                                    <th>\\n                                        Цена\\n                                    </th>\\n                                    <th>\\n                                        Макс. цена\\n                                    </th>\\n                                    <th></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Самовывоз\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Доставка по городу\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Доставка по городу\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                            <tfoot>\\n                                <tr class=\\\"bg-faded\\\">\\n                                    <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-plus\\\"></i>\\n                                            Добавить\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                            </tfoot>\\n                        </table>\\n\\n                    </div>\\n                </div>\\n                <!-- /delivery -->\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_settings.html\n// module id = ../../../../../src/app/templates/page_settings.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-bar-graph-2\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-left\\\">\\n\\n            <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\n                    <i class=\\\"icon-grid\\\"></i>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n    </div>\\n    <div class=\\\"card-body border-t\\\">\\n\\n        <br>\\n        <br>\\n        <br>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page_statistics.html\n// module id = ../../../../../src/app/templates/page_statistics.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { getTranslationProviders } from './app/i18n-providers';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\n//platformBrowserDynamic().bootstrapModule(AppModule);\n\ngetTranslationProviders().then(providers => {\n    const options = { providers };\n    platformBrowserDynamic().bootstrapModule(AppModule, options);\n});\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/main.ts"],"sourceRoot":"webpack:///"}