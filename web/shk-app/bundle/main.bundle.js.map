{"version":3,"sources":["/var/www/html/shopkeeper4/web/shk-app/locale/messages.ru.ts","/var/www/html/shopkeeper4/web/shk-app/src/$_gendir lazy","/var/www/html/shopkeeper4/web/shk-app/src/app/app-routing.module.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/app.component.css","/var/www/html/shopkeeper4/web/shk-app/src/app/app.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/app.module.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/catalog-category.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/catalog.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/categories.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/content-types.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/field-types.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/i18n-providers.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/list-recursive.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/modal.abstract.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/category.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/content_field.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/content_type.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type-property.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/multivalues.model.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/models/query-options.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/not-found.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/orders.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/page-table.abstract.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/pipes/filter-array-pipe.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/pipes/filter-field-by-group.pipe.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/pipes/orderby.pipe.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/product.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/render-input-field.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/render-output-field.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/categories.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/collections.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/content_types.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/data-service.abstract.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/products.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/services/system-name.service.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/settings.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/stat.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/table.component.ts","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/app.component.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-category.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-content_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-field_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/categories-menu.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/cmp-table.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-alert.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-category.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-confirm.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-content_types.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-field_type.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-product.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-catalog.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-orders.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-settings.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-statistics.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/render-input-field.html","/var/www/html/shopkeeper4/web/shk-app/src/app/templates/render-output-field.html","/var/www/html/shopkeeper4/web/shk-app/src/environments/environment.ts","/var/www/html/shopkeeper4/web/shk-app/src/main.ts"],"names":[],"mappings":"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GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;gBAChF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;gBAClF,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;gBACrF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;gBACjF,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,E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","file":"main.bundle.js","sourcesContent":["export const TRANSLATION_RU = `\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\n    <file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\">\n        <body>\n            <trans-unit id=\"4e7f5f07ae8e67878f35b34bcee10e39300ff41a\" datatype=\"html\">\n                <source>Orders</source>\n                <target>Заказы</target>\n            </trans-unit>\n            <trans-unit id=\"61e0f26d843eec0b33ff475e111b0c2f7a80b835\" datatype=\"html\">\n                <source>Statistics</source>\n                <target>Статистика</target>\n            </trans-unit>\n            <trans-unit id=\"532152365f64d8738343423767f1130c1a451e78\" datatype=\"html\">\n                <source>Catalog</source>\n                <target>Каталог</target>\n            </trans-unit>\n            <trans-unit id=\"121cc5391cd2a5115bc2b3160379ee5b36cd7716\" datatype=\"html\">\n                <source>Settings</source>\n                <target>Настройки</target>\n            </trans-unit>\n            <trans-unit id=\"1f332ec66f3bc8d943c248091be7f92772ba280f\" datatype=\"html\">\n                <source>Expand</source>\n                <target>Развернуть</target>\n            </trans-unit>\n            <trans-unit id=\"e8bcb762b48cf52fbea66ce9c4f6b970b99a80fd\" datatype=\"html\">\n                <source>Collapse</source>\n                <target>Свернуть</target>\n            </trans-unit>\n        </body>\n    </file>\n</xliff>\n`;\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/locale/messages.ru.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotFoundComponent } from './not-found.component';\nimport { OrdersComponent } from './orders.component';\nimport { CatalogComponent } from './catalog.component';\nimport { CatalogCategoryComponent } from './catalog-category.component';\nimport { ContentTypesComponent } from './content-types.component';\nimport { FieldTypesComponent } from './field-types.component';\nimport { StatisticsComponent } from './stat.component';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/orders',\n        pathMatch: 'full'\n    },\n    {\n        path: 'orders',\n        component: OrdersComponent,\n        data: {title: 'Orders'}\n    },\n    {\n        path: 'catalog',\n        component: CatalogComponent,\n        data: {title: 'Catalog'},\n        children: [\n            {\n                path: '',\n                redirectTo: 'category/0',\n                pathMatch: 'full'\n            },\n            {\n                path: 'category/:categoryId',\n                component: CatalogCategoryComponent,\n                data: {title: 'Catalog'}\n            },\n            {\n                path: 'content_types',\n                component: ContentTypesComponent,\n                data: {title: 'Content types'}\n            },\n            {\n                path: 'field_types',\n                component: FieldTypesComponent,\n                data: {title: 'Field types'}\n            },\n        ]\n    },\n    {\n        path: 'statistics',\n        component: StatisticsComponent,\n        data: {title: 'Statistics'}\n    },\n    {\n        path: 'settings',\n        component: SettingsComponent,\n        data: {title: 'Settings'}\n    },\n    {\n        path: '**',\n        component: NotFoundComponent,\n        data: {title: 'Page not found'}\n    }\n];\n@NgModule({\n    imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'modal-confirm',\n    templateUrl: 'templates/modal-confirm.html',\n    providers: []\n})\nexport class ConfirmModalContent {\n    @Input() modalTitle;\n    @Input() modalContent;\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n\n    accept() {\n        this.activeModal.close('accept');\n    }\n}\n\n@Component({\n    selector: 'modal-alert',\n    templateUrl: 'templates/modal-alert.html',\n    providers: []\n})\nexport class AlertModalContent {\n    @Input() modalTitle;\n    @Input() modalContent;\n    @Input() messageType;\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './templates/app.component.html',\n    styleUrls: [ './app.component.css' ],\n    providers: [ NgbTooltipConfig ]\n})\nexport class AppComponent {\n    title = 'Shopkeeper';\n\n    constructor(tooltipConfig: NgbTooltipConfig) {\n        tooltipConfig.placement = 'bottom';\n        tooltipConfig.container = 'body';\n        tooltipConfig.triggers = 'hover click';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule, NgbActiveModal, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { EditorModule, CalendarModule, ChipsModule } from 'primeng/primeng';\n\nimport { AppComponent, AlertModalContent, ConfirmModalContent } from './app.component';\nimport { NotFoundComponent } from './not-found.component';\nimport { OrdersComponent } from './orders.component';\nimport { CatalogComponent } from './catalog.component';\nimport { CatalogCategoryComponent } from './catalog-category.component';\nimport { ProductModalContent } from './product.component';\nimport { CategoriesMenuComponent, CategoriesModalComponent, CategoriesListComponent } from './categories.component';\nimport { ContentTypesComponent, ContentTypeModalContent } from './content-types.component';\nimport { FieldTypesComponent, FieldTypeModalContent } from './field-types.component';\nimport { StatisticsComponent } from './stat.component';\nimport { SettingsComponent } from './settings.component';\nimport { ListRecursiveComponent } from './list-recursive.component';\nimport { TableComponent } from './table.component';\nimport { InputFieldRenderComponent } from './render-input-field';\nimport { OutputFieldComponent } from './render-output-field';\n\nimport { FilterFieldByGroup } from './pipes/filter-field-by-group.pipe';\nimport { OrderByPipe } from './pipes/orderby.pipe';\nimport { FilterArrayPipe } from './pipes/filter-array-pipe';\n\nimport { ProductsService } from './services/products.service';\nimport { ContentTypesService } from './services/content_types.service';\nimport { CategoriesService } from './services/categories.service';\nimport { AppRoutingModule }     from './app-routing.module';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpModule,\n        HttpClientModule,\n        AppRoutingModule,\n        NgbModule.forRoot(),\n        EditorModule,\n        CalendarModule,\n        ChipsModule\n    ],\n    declarations: [\n        AppComponent,\n        NotFoundComponent,\n        OrdersComponent,\n        CategoriesMenuComponent,\n        CatalogComponent,\n        CatalogCategoryComponent,\n        ContentTypesComponent,\n        FieldTypesComponent,\n        StatisticsComponent,\n        SettingsComponent,\n        ListRecursiveComponent,\n        TableComponent,\n        CategoriesListComponent,\n        InputFieldRenderComponent,\n        OutputFieldComponent,\n\n        FilterFieldByGroup,\n        OrderByPipe,\n        FilterArrayPipe,\n\n        AlertModalContent,\n        ConfirmModalContent,\n        ProductModalContent,\n        ContentTypeModalContent,\n        CategoriesModalComponent,\n        FieldTypeModalContent\n    ],\n    providers: [ ProductsService, ContentTypesService, CategoriesService, NgbActiveModal, NgbTooltipConfig ],\n    entryComponents: [\n        AlertModalContent,\n        ConfirmModalContent,\n        ProductModalContent,\n        ContentTypeModalContent,\n        CategoriesModalComponent,\n        FieldTypeModalContent\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/app.module.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\n\nimport { Category } from \"./models/category.model\";\nimport { ProductsService } from \"./services/products.service\";\nimport { PageTableAbstractComponent } from './page-table.abstract'\nimport { ProductModalContent } from './product.component';\nimport { ContentType } from './models/content_type.model';\nimport { ContentTypesService } from './services/content_types.service';\nimport { Product } from './models/product.model';\n\n@Component({\n    selector: 'catalog-category',\n    templateUrl: 'templates/catalog-category.html',\n    providers: [ProductsService]\n})\nexport class CatalogCategoryComponent extends PageTableAbstractComponent<Product> {\n\n    title: string = 'Каталог';\n    currentCategory: Category;\n    currentContentType: ContentType;\n    tableFields = [];\n\n    constructor(\n        public dataService: ProductsService,\n        public activeModal: NgbActiveModal,\n        public modalService: NgbModal,\n        public titleService: Title,\n        private contentTypesService: ContentTypesService\n    ) {\n        super(dataService, activeModal, modalService, titleService);\n    }\n\n    ngOnInit(): void {\n        this.setTitle(this.title);\n    }\n\n    updateTableConfig(): void {\n        if(!this.currentContentType){\n            return;\n        }\n        this.tableFields = [\n            {\n                name: 'id',\n                title: 'ID',\n                outputType: 'number',\n                outputProperties: {}\n            }\n        ];\n        this.currentContentType.fields.forEach((field) => {\n            if (field.showInTable) {\n                this.tableFields.push({\n                    name: field.name,\n                    title: field.title,\n                    outputType: field.outputType,\n                    outputProperties: field.outputProperties\n                });\n            }\n        });\n    }\n\n    getModalContent() {\n        return ProductModalContent;\n    }\n\n    getContentType(): Observable<ContentType> {\n        return this.contentTypesService\n            .getItemByName(this.currentCategory.contentTypeName);\n    }\n\n    openCategory(category: Category): void {\n        this.currentCategory = _.clone(category);\n        if(!this.currentCategory.contentTypeName){\n            this.items = [];\n            this.tableFields = [];\n            this.currentCategory.id = 0;\n            return;\n        }\n\n        this.dataService.setRequestUrl('admin/products/' + this.currentCategory.id);\n        this.loading = true;\n        this.titleService.setTitle(this.title + ' / ' + this.currentCategory.title);\n        this.getContentType()\n            .subscribe((data) => {\n                this.currentContentType = data;\n                this.loading = false;\n                this.updateTableConfig();\n                this.getList();\n            }, () => {\n                this.items = [];\n                this.tableFields = [];\n                this.currentCategory.id = 0;\n            });\n    }\n\n    openRootCategory(): void {\n        this.currentCategory = new Category(0, false, 0, 'root', '', '', '', true);\n        this.titleService.setTitle(this.title);\n        this.dataService.setRequestUrl('admin/products/' + this.currentCategory.id);\n        this.getList();\n    }\n\n    setModalInputs(itemId?: number, isItemCopy: boolean = false): void {\n        PageTableAbstractComponent.prototype.setModalInputs.call(this, itemId, isItemCopy);\n        this.modalRef.componentInstance.category = this.currentCategory;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/catalog-category.component.ts","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'catalog',\n    templateUrl: 'templates/page-catalog.html',\n    providers: []\n})\nexport class CatalogComponent implements OnInit {\n\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/catalog.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContentType } from './models/content_type.model';\nimport { Category } from \"./models/category.model\";\nimport { ConfirmModalContent } from './app.component';\nimport { ListRecursiveComponent } from './list-recursive.component';\nimport { ModalContentAbstractComponent } from './modal.abstract';\nimport 'rxjs/add/operator/switchMap';\nimport * as _ from \"lodash\";\n\nimport { SystemNameService } from './services/system-name.service';\nimport { CategoriesService } from './services/categories.service'\nimport { ContentTypesService } from './services/content_types.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from \"rxjs/Observer\";\n\n/**\n * @class CategoriesModalComponent\n */\n@Component({\n    selector: 'category-modal-content',\n    templateUrl: 'templates/modal-category.html',\n    providers: [CategoriesService, SystemNameService, ContentTypesService]\n})\nexport class CategoriesModalComponent extends ModalContentAbstractComponent<Category> {\n\n    @Input() categories: Category[] = [];\n    @Input() currentCategory: Category;\n    @Input() isRoot: boolean = false;\n    model: Category = new Category(null, false, 0, '', '', '', '', true);\n    contentTypes: ContentType[] = [];\n\n    formFields = {\n        title: {\n            value: '',\n            disabled: false,\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        name: {\n            value: '',\n            disabled: false,\n            validators: [Validators.required],\n            messages: {\n                required: 'Name is required.'\n            }\n        },\n        description: {\n            value: '',\n            disabled: false,\n            validators: [],\n            messages: {}\n        },\n        parentId: {\n            value: 0,\n            disabled: false,\n            validators: [],\n            messages: {}\n        },\n        contentTypeName: {\n            value: '',\n            disabled: false,\n            validators: [Validators.required],\n            messages: {\n                required: 'Content type is required.'\n            }\n        },\n        isActive: {\n            value: false,\n            disabled: false,\n            validators: [],\n            messages: {}\n        }\n    };\n\n    constructor(\n        public fb: FormBuilder,\n        public dataService: CategoriesService,\n        public systemNameService: SystemNameService,\n        public activeModal: NgbActiveModal,\n        public tooltipConfig: NgbTooltipConfig,\n        private contentTypesService: ContentTypesService\n    ) {\n        super(fb, dataService, systemNameService, activeModal, tooltipConfig);\n    }\n\n    /** On initialize */\n    ngOnInit(): void {\n\n        // Filter root category and self\n        this.categories = _.filter(this.categories, (category) => {\n            if (this.isEditMode) {\n                return category.name != 'root'\n                    && category.id != this.currentCategory.id;\n            } else {\n                return category.name != 'root';\n            }\n        });\n\n        this.model.parentId = this.currentCategory.id;\n        this.model.contentTypeName = this.currentCategory.contentTypeName;\n        if (this.isRoot) {\n            this.model.id = 0;\n            this.model.title = 'Корневая категория';\n            this.model.name = 'root';\n            this.formFields.title.disabled = true;\n            this.formFields.name.disabled = true;\n            this.formFields.isActive.disabled = true;\n        }\n        ModalContentAbstractComponent.prototype.ngOnInit.call(this);\n        this.getContentTypes();\n    }\n\n    getContentTypes() {\n        this.contentTypesService.getListPage()\n            .subscribe(\n                data => {\n                    this.contentTypes = data.items;\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    saveRequest() {\n        if (this.isEditMode) {\n            return this.dataService.update(this.model);\n        } else {\n            return this.dataService.create(this.model);\n        }\n    }\n\n    save(): void {\n        this.submitted = true;\n\n        if (!this.form.valid) {\n            this.onValueChanged('form');\n            this.submitted = false;\n            return;\n        }\n\n        this.saveRequest()\n            .subscribe(() => this.closeModal(),\n                err => {\n                this.errorMessage = err.error;\n                this.submitted = false;\n            });\n    }\n}\n\n/**\n * @class CategoriesListComponent\n */\n@Component({\n    selector: 'categories-list',\n    template: `\n        <ul class=\"dropdown-menu dropdown-menu-hover\" *ngIf=\"items.length > 0\" [class.shadow]=\"parentId != 0\">\n            <li class=\"dropdown-item active\" *ngFor=\"let item of items\" [class.active]=\"item.id == currentId\"\n                [class.current-level]=\"getIsActiveParent(item.id)\">\n                <i class=\"icon-keyboard_arrow_right float-right m-2 pt-1\" [hidden]=\"!item.isFolder\"></i>\n                <a href=\"\" [routerLink]=\"['/catalog/category/', item.id]\" [class.text-muted]=\"!item.isActive\">\n                    {{item.title}}\n                </a>\n                <categories-list [inputItems]=\"inputItems\" [parentId]=\"item.id\" [currentId]=\"currentId\"></categories-list>\n            </li>\n        </ul>\n    `\n})\nexport class CategoriesListComponent extends ListRecursiveComponent {\n\n}\n\n/**\n * @class CategoriesMenuComponent\n */\n@Component({\n    selector: 'categories-menu',\n    templateUrl: 'templates/categories-menu.html',\n    providers: [CategoriesService]\n})\nexport class CategoriesMenuComponent implements OnInit {\n    @Input() rootTitle: string = 'Категории';\n    @Output() changeRequest = new EventEmitter<Category>();\n    currentCategory: Category = new Category(null, false, 0, 'root', this.rootTitle, '', '', true);\n    categories: Category[] = [];\n    errorMessage: string = '';\n    modalRef: NgbModalRef;\n    categoryId: number = 0;\n\n    constructor(\n        public router: Router,\n        private route: ActivatedRoute,\n        private modalService: NgbModal,\n        private categoriesService: CategoriesService\n    ) {\n    }\n\n    /** On initialize component */\n    ngOnInit(): void {\n        this.getCategoriesRequest()\n            .subscribe(\n                data => {\n                    this.categories = data.items;\n\n                    this.route.paramMap\n                        .subscribe(\n                            params => {\n                                this.categoryId = params.get('categoryId')\n                                    ? parseInt(params.get('categoryId'))\n                                    : 0;\n                                this.selectCurrent();\n                            }\n                        );\n                },\n                error => this.errorMessage = error\n            );\n    }\n\n    /** Select current category */\n    selectCurrent(): void {\n        if (this.currentCategory.id === this.categoryId) {\n            return;\n        }\n        const index = _.findIndex(this.categories, {id: this.categoryId});\n        if(index > -1){\n            this.currentCategory = _.clone(this.categories[index]);\n            this.changeRequest.emit(this.currentCategory);\n        } else {\n            this.openRootCategory();\n        }\n    }\n\n    /** Get categories */\n    getCategoriesRequest(): Observable<any> {\n        return this.categoriesService.getListPage();\n    }\n\n    /** Get categories */\n    getCategories(): void {\n        this.getCategoriesRequest()\n            .subscribe(\n                data => {\n                    this.categories = data.items;\n                    this.selectCurrent();\n                },\n                error => this.errorMessage = <any>error\n            );\n    }\n\n    /**\n     * Open modal category\n     * @param itemId\n     * @param isItemCopy\n     */\n    openModalCategory(itemId?: number, isItemCopy: boolean = false): void {\n        const isRoot = itemId === 0 || itemId === null;\n        const isEditMode = typeof itemId !== 'undefined' && !isItemCopy;\n        this.modalRef = this.modalService.open(CategoriesModalComponent, {size: 'lg'});\n        this.modalRef.componentInstance.modalTitle = isEditMode ? 'Edit category' : 'Add category';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.isItemCopy = isItemCopy || false;\n        this.modalRef.componentInstance.categories = _.cloneDeep(this.categories);\n        this.modalRef.componentInstance.currentCategory = this.currentCategory;\n        this.modalRef.componentInstance.isRoot = isRoot;\n        this.modalRef.componentInstance.isEditMode = isEditMode;\n        this.modalRef.result.then((result) => {\n            this.currentCategory.id = null;// For update current category data\n            this.getCategories();\n        }, (reason) => {\n\n        });\n    }\n\n    /**\n     * Update category data\n     * @param itemId\n     * @param data\n     */\n    updateCategoryData(itemId: number, data: any): void {\n        let index = _.findIndex(this.categories, {id: itemId});\n        if (index === -1) {\n            return;\n        }\n        let category = this.categories[index];\n        if (category.parentId == data.parentId) {\n            Object.keys(category).forEach(function (k, i) {\n                if (data[k]) {\n                    category[k] = data[k];\n                }\n            });\n        } else {\n            this.getCategories();\n        }\n    }\n\n    /**\n     * Confirm delete category\n     * @param itemId\n     */\n    deleteCategoryItemConfirm(itemId: number): void {\n        let index = _.findIndex(this.categories, {id: itemId});\n        if (index == -1) {\n            return;\n        }\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = 'Are you sure you want to remove category \"' + this.categories[index].title + '\"?';\n        this.modalRef.result.then((result) => {\n            if (result == 'accept') {\n                this.deleteCategoryItem(itemId);\n            }\n        }, (reason) => {\n\n        });\n    }\n\n    /**\n     * Delete category\n     * @param itemId\n     */\n    deleteCategoryItem(itemId: number): void {\n        this.categoriesService.deleteItem(itemId)\n            .subscribe((data) => {\n                    this.categoryId = 0;\n                    this.selectCurrent();\n                    this.getCategories();\n                },\n                err => this.errorMessage = err\n            );\n    }\n\n    /** Open root category */\n    openRootCategory(): void {\n        this.currentCategory = new Category(null, false, 0, 'root', this.rootTitle, '', '', true);\n        this.changeRequest.emit(this.currentCategory);\n    }\n\n    /** Go to root category */\n    goToRootCategory(): void {\n        this.router.navigate(['/catalog/category/0']);\n    }\n\n    /**\n     * Select category\n     * @param category\n     */\n    selectCategory(category: Category): void {\n        this.router.navigate(['/catalog/category', category.id]);\n    }\n\n    /** Copy category */\n    copyCategory(): void {\n        this.openModalCategory(this.currentCategory.id, true);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/categories.component.ts","import { Component, OnInit, Input, ViewChild, Injectable, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef, NgbPopover, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport * as _ from \"lodash\";\n\nimport { FieldTypesService } from './field-types.component';\nimport { ContentField } from './models/content_field.model';\nimport { ContentType } from './models/content_type.model';\nimport { FieldType } from \"./models/field-type.model\";\nimport { FieldTypeProperty } from './models/field-type-property.model';\nimport { QueryOptions } from './models/query-options';\nimport { PageTableAbstractComponent } from './page-table.abstract';\nimport { ModalContentAbstractComponent } from './modal.abstract';\n\nimport { ContentTypesService } from './services/content_types.service';\nimport { CollectionsService } from './services/collections.service';\nimport { SystemNameService } from './services/system-name.service';\n\n@Component({\n    selector: 'content-type-modal-content',\n    templateUrl: 'templates/modal-content_types.html',\n    providers: [ ContentTypesService, FieldTypesService, CollectionsService, SystemNameService ]\n})\nexport class ContentTypeModalContent extends ModalContentAbstractComponent<ContentType> {\n\n    @ViewChild('addCollectionBlock') elementAddCollectionBlock;\n    @ViewChild('addGroupBlock') elementAddGroupBlock;\n    modalRef: NgbModalRef;\n\n    constructor(\n        public fb: FormBuilder,\n        public dataService: ContentTypesService,\n        public systemNameService: SystemNameService,\n        public activeModal: NgbActiveModal,\n        public tooltipConfig: NgbTooltipConfig,\n        private fieldTypesService: FieldTypesService,\n        private collectionsService: CollectionsService,\n        private modalService: NgbModal\n    ) {\n        super(fb, dataService, systemNameService, activeModal, tooltipConfig);\n    }\n\n    model: ContentType = new ContentType(0, '', '', '', 'products', [], ['Основное','Служебное'], true);\n    fieldModel: ContentField = new ContentField(0, '', '', '', '', {}, '', {}, '', false, false, false);\n    fld_submitted: boolean = false;\n    errorFieldMessage: string;\n    action: string = 'add_field';\n    currentFieldName = '';\n    collections: any[] = ['products'];\n    fieldForm: FormGroup;\n    fieldTypes: FieldType[];\n    fieldTypeProperties: {} = {\n        input: [],\n        output: []\n    };\n\n    formFields = {\n        name: {\n            value: '',\n            validators: [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')],\n            messages: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters and numbers.'\n            }\n        },\n        title: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        description: {\n            value: '',\n            validators: [],\n            messages: {}\n        },\n        collection: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        newCollection: {\n            value: '',\n            validators: [Validators.pattern('[A-Za-z0-9_-]+')],\n            messages: {\n                pattern: 'The name must contain only Latin letters and numbers.',\n                exists: 'Collection with the same name already exists.'\n            }\n        },\n        isActive: {\n            value: '',\n            validators: [],\n            messages: {}\n        }\n    };\n\n    fieldsFormOptions = {\n        title: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        name: {\n            value: '',\n            validators: [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')],\n            messages: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters.'\n            }\n        },\n        description: {\n            value: '',\n            validators: [],\n            messages: {}\n        },\n        inputType: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Input type is required.'\n            }\n        },\n        outputType: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Output type is required.'\n            }\n        },\n        group: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Group is required.'\n            }\n        },\n        newGroup: {\n            value: '',\n            validators: [],\n            messages: {\n                exists: 'Group with the same name already exists.'\n            }\n        },\n        required: {\n            value: '',\n            validators: [],\n            messages: {}\n        },\n        showInTable: {\n            value: '',\n            validators: [],\n            messages: {}\n        },\n        isFilter: {\n            value: '',\n            validators: [],\n            messages: {}\n        }\n    };\n\n    buildForm(): void {\n        ModalContentAbstractComponent.prototype.buildForm.call(this);\n\n        let controls = this.buildControls(this.fieldsFormOptions, 'fieldModel', 'fld_');\n        this.fieldForm = this.fb.group(controls);\n        this.fieldForm.valueChanges\n            .subscribe(() => this.onValueChanged('fieldForm', 'fld_'));\n    }\n\n    /** On initialize */\n    ngOnInit(): void {\n        ModalContentAbstractComponent.prototype.ngOnInit.call(this);\n        this.getFieldTypes();\n        this.getCollectionsList();\n    }\n\n    /** Get field types */\n    getFieldTypes(): void {\n        let options = new QueryOptions('title', 'asc', 0, 0, 1);\n        this.fieldTypesService.getList(options)\n            .subscribe(\n                data => {\n                    this.fieldTypes = data;\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    /** Get collections list */\n    getCollectionsList(): void {\n        this.collectionsService.getList()\n            .subscribe(data => {\n                    if(data.length > 0){\n                        this.collections = data;\n                    }\n                }\n            );\n    }\n\n    /**\n     * Select field type properties\n     * @param {string} type\n     * @param {string} fieldTypeName\n     */\n    selectFieldTypeProperties(type: string, fieldTypeName?: string): void {\n        if(fieldTypeName){\n            this.fieldModel[type + 'Type'] = fieldTypeName;\n        }\n        let fieldType = _.find(this.fieldTypes, {name: this.fieldModel[type + 'Type']});\n        if(!fieldType){\n            this.fieldTypeProperties[type] = [];\n            return;\n        }\n\n        const modelPropertiesField = type + 'Properties';\n        const propNames = _.map(fieldType[type + 'Properties'], 'name');\n        this.fieldTypeProperties[type].splice(0);\n\n        fieldType[type + 'Properties'].forEach((v, i) => {\n            this.fieldTypeProperties[type].push(v);\n        });\n\n        for (let prop in this.fieldModel[modelPropertiesField]) {\n            if (this.fieldModel[modelPropertiesField].hasOwnProperty(prop)) {\n                if (propNames.indexOf(prop) === -1) {\n                    delete this.fieldModel[modelPropertiesField][prop];\n                }\n            }\n        }\n\n        for (let i in this.fieldTypeProperties[type]) {\n            if (this.fieldTypeProperties[type].hasOwnProperty(i)) {\n                let fldName = this.fieldTypeProperties[type][i].name;\n                if (typeof this.fieldModel[modelPropertiesField][fldName] == 'undefined') {\n                    this.fieldModel[modelPropertiesField][fldName] = this.fieldTypeProperties[type][i].default_value;\n                }\n            }\n        }\n        if (type == 'input' && !this.fieldModel.outputType) {\n            this.selectFieldTypeProperties('output', this.fieldModel.inputType);\n        }\n    }\n\n    /** Add collection */\n    addCollection(){\n        const fieldName = 'newCollection';\n        const control = this.form.get(fieldName);\n        if(!control.valid){\n            return false;\n        }\n        this.formErrors[fieldName] = '';\n        const value = control.value;\n\n        if( this.collections.indexOf(value) > -1){\n            this.formErrors[fieldName] += this.validationMessages[fieldName].exists;\n            return false;\n        }\n        this.collections.push(value);\n        this.model.collection = value;\n        this.elementAddCollectionBlock.nativeElement.style.display = 'none';\n        return true;\n    }\n\n    /** Delete collection */\n    deleteCollection(popover: NgbPopover){\n        if(!this.model.collection){\n            return;\n        }\n\n        if(popover.isOpen()){\n            popover.close();\n            return;\n        }\n\n        let popoverContent: any;\n        //popover.container = 'body';\n        popover.placement = 'top';\n        popover.popoverTitle = 'Confirm';\n\n        let confirm = function(){\n            this.loading = true;\n            console.log('deleteItemByName', this.model.collection);\n            // this.collectionsService.deleteItemByName(this.model.collection)\n            //     .then((res) => {\n            //         if(res.success){\n            //\n            //             let index = this.collections.indexOf(this.model.collection);\n            //             if(index > -1){\n            //                 this.collections.splice(index, 1);\n            //                 this.model.collection = this.collections[0];\n            //             }\n            //             popover.close();\n            //\n            //         } else {\n            //             if(res.msg){\n            //                 popoverContent.message = res.msg;\n            //             }\n            //         }\n            //         this.loading = false;\n            //     });\n        };\n\n        popoverContent = {\n            p: popover,\n            confirm: confirm.bind(this),\n            message: ''\n        };\n\n        popover.open(popoverContent);\n    }\n\n    /** Add group */\n    addGroup(){\n        const fieldName = 'newGroup';\n        const control = this.fieldForm.get(fieldName);\n        if( !control || !control.valid || !control.value ){\n            return false;\n        }\n        this.formErrors['fld_'+fieldName] = '';\n        const value = control.value;\n        let index = this.model.groups.indexOf(value);\n        if( index > -1 ){\n            this.formErrors['fld_'+fieldName] += this.validationMessages['fld_'+fieldName].exists;\n            return false;\n        }\n        this.model.groups.push(value);\n        this.fieldModel.group = value;\n        this.elementAddGroupBlock.nativeElement.style.display = 'none';\n        return true;\n    }\n\n    /** Delete group */\n    deleteGroup() {\n        let currentGroupName = this.fieldForm.get('group').value;\n        let index = _.findIndex(this.model.fields, {group: currentGroupName});\n        this.errorFieldMessage = '';\n        if (index > -1) {\n            this.errorFieldMessage = 'You can\\'t delete a group because it is not empty.';\n            return;\n        }\n        index = this.model.groups.indexOf(currentGroupName);\n        if (index > -1) {\n            this.model.groups.splice(index, 1);\n        }\n    }\n\n    /**\n     * Edit field\n     * @param field\n     */\n    editField(field: ContentField) {\n        this.action = 'edit_field';\n        this.fieldModel = _.clone(field);\n        let newFormValue = {};\n        for (const key in this.fieldsFormOptions) {\n            if (!this.fieldsFormOptions.hasOwnProperty(key)) {\n                continue;\n            }\n            newFormValue[key] = field[key] || '';\n        }\n        this.fieldForm.setValue(newFormValue);\n        this.currentFieldName = this.fieldModel.name;\n        this.fld_submitted = false;\n    }\n\n    /**\n     * Copy field\n     * @param field\n     */\n    copyField(field: ContentField) {\n        this.action = 'add_field';\n        this.fieldModel = _.clone(field);\n        this.fieldModel.name = '';\n        this.fieldForm.setValue(this.fieldModel);\n        this.currentFieldName = '';\n        this.fld_submitted = false;\n    }\n\n    /**\n     * Delete field\n     * @param field\n     */\n    deleteField(field: ContentField){\n        let index = _.findIndex( this.model.fields, {name: field.name} );\n        if( index == -1 ){\n            this.errorMessage = 'Field not found.';\n            return;\n        }\n        this.model.fields.splice(index, 1);\n    }\n\n    /** Reset field form */\n    resetFieldForm(){\n        this.action = 'add_field';\n        this.errorMessage = '';\n        this.errorFieldMessage = '';\n        this.fld_submitted = false;\n        this.currentFieldName = '';\n        this.fieldForm.reset();\n        this.fieldModel = new ContentField(0, '', '', '', '', {}, '', {}, '', false, false, false);\n    }\n\n    /** Cancel edit field */\n    editFieldCancel(){\n        this.resetFieldForm();\n        this.onValueChanged('fieldForm', 'fld_');\n    }\n\n    /** Change field order index */\n    fieldMove(index: number, direction: string): void{\n        if((direction == 'up' && index === 0)\n            || (direction == 'down' && index === this.model.fields.length - 1)){\n            return;\n        }\n        let newIndex = direction == 'up' ? index - 1 : index + 1;\n        let field = this.model.fields[index];\n\n        this.model.fields.splice(index, 1);\n        this.model.fields.splice(newIndex, 0, field);\n    }\n\n    /** Submit field */\n    submitField() {\n        this.fld_submitted = true;\n        if (!this.fieldForm.valid) {\n            this.onValueChanged('fieldForm', 'fld_');\n            this.fld_submitted = false;\n            return;\n        }\n        let data = _.clone(this.fieldModel);\n        let index = _.findIndex(this.model.fields, {name: data.name});\n        if (index > -1 && this.currentFieldName != data.name) {\n            this.errorMessage = 'A field named \"' + data.name + '\" already exists.';\n            return;\n        }\n\n        if (this.action == 'add_field') {\n            this.model.fields.push(_.clone(data));\n        }\n        else if (this.action == 'edit_field') {\n            index = _.findIndex(this.model.fields, {name: this.currentFieldName});\n            if (index > -1) {\n                this.model.fields[index] = _.clone(data);\n            }\n        }\n        this.resetFieldForm();\n    }\n\n    save() {\n        this.submitted = true;\n\n        if(!this.form.valid){\n            this.onValueChanged('form');\n            this.submitted = false;\n            return;\n        }\n\n        let callback = function(res: any){\n            console.log(res);\n            // if(res.success){\n            //     this.closeModal();\n            // } else {\n            //     if(res.msg){\n            //         this.submitted = false;\n            //         this.errorMessage = res.msg;\n            //     }\n            // }\n        };\n\n        if(this.model.id){\n            this.dataService.update(this.model).subscribe(callback.bind(this));\n        } else {\n            this.dataService.create(this.model).subscribe(callback.bind(this));\n        }\n    }\n}\n\n@Component({\n    selector: 'shk-content-types',\n    templateUrl: 'templates/catalog-content_types.html',\n    providers: [ ContentTypesService ]\n})\nexport class ContentTypesComponent extends PageTableAbstractComponent<ContentType> {\n\n    title: string = 'Типы контента';\n\n    constructor(\n        dataService: ContentTypesService,\n        activeModal: NgbActiveModal,\n        modalService: NgbModal,\n        titleService: Title\n    ) {\n        super(dataService, activeModal, modalService, titleService);\n    }\n\n    //TODO: get from settings\n    tableFields = [\n        {\n            name: 'id',\n            title: 'ID',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'title',\n            title: 'Название',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'name',\n            title: 'Системное имя',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'collection',\n            title: 'Коллекция',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'isActive',\n            title: 'Статус',\n            outputType: 'boolean',\n            outputProperties: {}\n        }\n    ];\n\n    getModalContent(){\n        return ContentTypeModalContent;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/content-types.component.ts","import { Component, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FieldType } from './models/field-type.model';\nimport { FieldTypeProperty } from './models/field-type-property.model';\n\nimport { DataService } from './services/data-service.abstract';\nimport { SystemNameService } from './services/system-name.service';\nimport { PageTableAbstractComponent } from './page-table.abstract';\nimport { ModalContentAbstractComponent } from './modal.abstract';\n\n@Injectable()\nexport class FieldTypesService extends DataService<FieldType> {\n\n    constructor(http: HttpClient) {\n        super(http);\n        this.setRequestUrl('admin/field_types');\n    }\n}\n\n@Component({\n    selector: 'field-type-modal-content',\n    templateUrl: 'templates/modal-field_type.html',\n    providers: [ FieldTypesService, SystemNameService ]\n})\nexport class FieldTypeModalContent extends ModalContentAbstractComponent<FieldType> {\n\n    model: FieldType = new FieldType(0, '', '', '', true, [], []);\n\n    formFields = {\n        title: {\n            value: '',\n            validators: [Validators.required],\n            messages: {\n                required: 'Title is required.'\n            }\n        },\n        name: {\n            value: '',\n            validators: [Validators.required, Validators.pattern('[A-Za-z0-9_-]+')],\n            messages: {\n                required: 'Name is required.',\n                pattern: 'The name must contain only Latin letters and numbers.'\n            }\n        },\n        description: {\n            value: '',\n            validators: [],\n            messages: {}\n        },\n        isActive: {\n            value: true,\n            validators: [],\n            messages: {}\n        }\n    };\n\n    constructor(\n        fb: FormBuilder,\n        dataService: FieldTypesService,\n        systemNameService: SystemNameService,\n        activeModal: NgbActiveModal,\n        tooltipConfig: NgbTooltipConfig\n    ) {\n        super(fb, dataService, systemNameService, activeModal, tooltipConfig);\n    }\n\n    addRow(type: string){\n        if(!this.model[type]){\n            this.model[type] = [];\n        }\n        this.model[type].push(new FieldTypeProperty('','',''));\n    }\n\n    deleteRow(index: number, type: string){\n        if(this.model[type].length < index + 1){\n            return;\n        }\n        this.model[type].splice(index, 1);\n    }\n\n    save(){\n        this.submitted = true;\n\n        if(!this.form.valid){\n            this.onValueChanged('form');\n            this.submitted = false;\n            return;\n        }\n\n        let callback = function(res: any){\n            console.log(res);\n            // if(res.success){\n            //     this.closeModal();\n            // } else {\n            //     if(res.msg){\n            //         this.submitted = false;\n            //         this.errorMessage = res.msg;\n            //     }\n            // }\n        };\n        //observer: PartialObserver\n\n        if(this.model.id){\n            this.dataService.update(this.model).subscribe(callback.bind(this));\n        } else {\n            this.dataService.create(this.model).subscribe(callback.bind(this));\n        }\n    }\n\n}\n\n@Component({\n    selector: 'shk-field-types',\n    templateUrl: 'templates/catalog-field_types.html',\n    providers: [ FieldTypesService ]\n})\nexport class FieldTypesComponent extends PageTableAbstractComponent<FieldType> {\n    title: string = 'Field types';\n\n    constructor(\n        dataService: FieldTypesService,\n        activeModal: NgbActiveModal,\n        modalService: NgbModal,\n        titleService: Title\n    ) {\n        super(dataService, activeModal, modalService, titleService);\n    }\n\n    tableFields = [\n        {\n            name: 'id',\n            title: 'ID',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'title',\n            title: 'Название',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'name',\n            title: 'Системное имя',\n            outputType: 'text',\n            outputProperties: {}\n        },\n        {\n            name: 'isActive',\n            title: 'Статус',\n            outputType: 'boolean',\n            outputProperties: {}\n        }\n    ];\n\n    getModalContent(){\n        return FieldTypeModalContent;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/field-types.component.ts","import { TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID } from '@angular/core';\nimport { TRANSLATION_RU } from '../../locale/messages.ru';\n\nexport function getTranslationProviders(): Promise<Object[]> {\n    // Get the locale id from the global\n    const locale = document['locale'] as string;\n    // return no providers if fail to get translation file for locale\n    const noProviders: Object[] = [];\n    // No locale or U.S. English: no translation providers\n    if (!locale || locale === 'en-US') {\n        return Promise.resolve(noProviders);\n    }\n    return getTranslations(locale)\n        .then( (translations: string ) => [\n            { provide: TRANSLATIONS, useValue: translations },\n            { provide: TRANSLATIONS_FORMAT, useValue: 'xlf' },\n            { provide: LOCALE_ID, useValue: locale }\n        ])\n        .catch(() => noProviders); // ignore if file not found\n}\n\nfunction getTranslations(locale: string) {\n    let translation;\n    switch (locale){\n        case 'ru':\n        case 'ru-RU':\n            translation = TRANSLATION_RU;\n            break;\n    }\n    return Promise.resolve( translation );\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/i18n-providers.ts","import {Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'list-recursive',\n    template: `\n        <ul>\n            <li *ngFor=\"let item of items\">\n                <a class=\"dropdown-item\">\n                    {{item.title}}\n                </a>\n                <list-recursive [inputItems]=\"inputItems\" [parentId]=\"item.id\" [currentId]=\"currentId\"></list-recursive>\n            </li>\n        </ul>\n    `\n})\nexport class ListRecursiveComponent implements OnInit, OnChanges {\n    @Input() inputItems: any[];\n    @Input() items: any[];\n    @Input() parentId: number;\n    @Input() currentId: number;\n    currentParentsIds: number[];\n\n    ngOnInit(): void {\n        this.filterInputItems();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.inputItems) {\n            this.filterInputItems();\n        }\n        if (changes.currentId) {\n            this.updateParentsIds();\n        }\n    }\n\n    filterInputItems() {\n        this.items = [];\n        let items = this.items;\n        const parentId = this.parentId;\n        this.inputItems.forEach(function (item) {\n            if (item.id !== item.parentId && item.parentId === parentId) {\n                items.push(item);\n            }\n        });\n        this.updateParentsIds();\n    }\n\n    /**\n     * Update parents ids\n     */\n    updateParentsIds(): void {\n        let index = _.findIndex(this.inputItems, {id: this.currentId});\n        this.currentParentsIds = [];\n        if (index === -1) {\n            return;\n        }\n        this.currentParentsIds = this.getParentIds(this.inputItems[index].parentId);\n    }\n\n    /**\n     *\n     * @param parentId\n     * @param parentIds\n     * @returns {number[]}\n     */\n    getParentIds(parentId, parentIds ?: number[]): number[] {\n        parentIds = parentIds || [];\n        if (parentId > 0) {\n            parentIds.push(parentId);\n            let index = _.findIndex(this.inputItems, {id: parentId});\n            if (index === -1) {\n                return parentIds;\n            }\n            return this.getParentIds(this.inputItems[index].parentId, parentIds);\n        } else {\n            return parentIds;\n        }\n    }\n\n    /**\n     * Check parent id\n     * @param itemId\n     * @returns {boolean}\n     */\n    getIsActiveParent(itemId: number): boolean {\n        return this.currentParentsIds.indexOf(itemId) > -1;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/list-recursive.component.ts","import { Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgbActiveModal, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SystemNameService } from './services/system-name.service';\nimport { DataService } from './services/data-service.abstract';\n\nexport abstract class ModalContentAbstractComponent<M> implements OnInit {\n    @Input() modalTitle: string;\n    @Input() itemId: number | null;\n    @Input() isItemCopy: boolean;\n    @Input() isEditMode: boolean;\n\n    submitted: boolean = false;\n    loading: boolean = false;\n    errorMessage: string;\n    form: FormGroup;\n    formErrors: { [key: string]: string } = {};\n    validationMessages: { [key: string]: { [key: string]: string } } = {};\n    formFields = {};\n    model: { [key: string]: any } = {};\n    files: { [key: string]: File } = {};\n\n    abstract save();\n\n    constructor(\n        public fb: FormBuilder,\n        public dataService: DataService<any>,\n        public systemNameService: SystemNameService,\n        public activeModal: NgbActiveModal,\n        public tooltipConfig: NgbTooltipConfig\n    ) {\n        tooltipConfig.placement = 'bottom';\n        tooltipConfig.container = 'body';\n        tooltipConfig.triggers = 'hover click';\n    }\n\n    ngOnInit(): void {\n        this.buildForm();\n        if (this.isEditMode || this.isItemCopy) {\n            this.getModelData();\n        }\n    }\n\n    getSystemFieldName(): string {\n        return 'name';\n    }\n\n    getModelData(): void {\n        this.loading = true;\n        this.dataService.getItem(this.itemId)\n            .subscribe(data => {\n                if (this.isItemCopy) {\n                    data.id = null;\n                    data[this.getSystemFieldName()] = '';\n                }\n                this.model = data as M;\n                this.loading = false;\n            }, (err) => {\n                this.errorMessage = err;\n                this.loading = false;\n            });\n    }\n\n    /** Build form groups */\n    buildForm(): void {\n        let controls = this.buildControls(this.formFields, 'model');\n        this.form = this.fb.group(controls);\n        this.form.valueChanges\n            .subscribe(() => this.onValueChanged('form'));\n    }\n\n    /** Build controls */\n    buildControls(options: {}, modelName: string, keyPrefix: string = ''): { [s: string]: FormControl; } {\n        let controls = {};\n        for (let key in options) {\n            if (!options.hasOwnProperty(key)) {\n                continue;\n            }\n            let opts = options[key];\n            if (!this[modelName][key]) {\n                this[modelName][key] = opts.value;\n            }\n            controls[key] = new FormControl({\n                value: this[modelName][key] || '',\n                disabled: opts.disabled || false\n            }, opts.validators);\n            this.formErrors[keyPrefix + key] = '';\n            this.validationMessages[keyPrefix + key] = opts.messages;\n        }\n        return controls;\n    }\n\n    getControl(name: string): AbstractControl {\n        return this.form.controls['name'];\n    }\n\n    /** Callback on form value changed */\n    onValueChanged(formName: string, keyPrefix: string = ''): void {\n        if (!this[formName]) {\n            return;\n        }\n        let data = this[formName].value;\n\n        for (let fieldName in data) {\n            if (!data.hasOwnProperty(fieldName)) {\n                continue;\n            }\n            this.formErrors[keyPrefix + fieldName] = '';\n            let control = this[formName].get(fieldName);\n            if (control && (control.dirty || this[keyPrefix + 'submitted']) && !control.valid) {\n                for (let key in control.errors) {\n                    if (this.validationMessages[keyPrefix + fieldName][key]) {\n                        this.formErrors[keyPrefix + fieldName] += this.validationMessages[keyPrefix + fieldName][key] + ' ';\n                    } else {\n                        this.formErrors[keyPrefix + fieldName] += 'Error. ';\n                    }\n                }\n            }\n        }\n    }\n\n    /** Element display toggle */\n    displayToggle(element: HTMLElement, display?: boolean): void {\n        display = display || element.style.display == 'none';\n        element.style.display = display ? 'block' : 'none';\n    }\n\n    generateName(model): void {\n        let title = model.title || '';\n        model.name = this.systemNameService.generateName(title);\n    }\n\n    /** Close modal */\n    closeModal() {\n        let reason = this.itemId ? 'edit' : 'create';\n        this.activeModal.close({reason: reason, data: this.model});\n    }\n\n    close(e: MouseEvent) {\n        e.preventDefault();\n        this.activeModal.dismiss('canceled');\n    }\n\n    /** Submit form */\n    onSubmit() {\n        this.submitted = true;\n        this.closeModal();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/modal.abstract.ts","export class Category {\n    constructor(\n        public id: number,\n        public isFolder: boolean,\n        public parentId: number,\n        public name: string,\n        public title: string,\n        public description: string,\n        public contentTypeName: string,\n        public isActive: boolean\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/category.model.ts","export class ContentField {\n    constructor(\n        public id: number,\n        public name: string,\n        public title: string,\n        public description: string,\n        public inputType: string,\n        public inputProperties: {[key: string]: string|number|string[]},\n        public outputType: string,\n        public outputProperties: {[key: string]: string|number},\n        public group: string,\n        public required: boolean,\n        public isFilter: boolean,\n        public showInTable: boolean,\n        public options?: {}[]\n    ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/content_field.model.ts","import { ContentField } from './content_field.model';\n\nexport class ContentType {\n    constructor(\n        public id: number,\n        public name: string,\n        public title: string,\n        public description: string,\n        public collection: string,\n        public fields: ContentField[],\n        public groups: string[],\n        public isActive: boolean\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/content_type.model.ts","export class FieldTypeProperty {\n    constructor(\n        public name: string,\n        public title: string,\n        public default_value: string\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type-property.model.ts","import { FieldTypeProperty } from './field-type-property.model';\n\nexport class FieldType {\n    constructor(\n        public id: number,\n        public name: string,\n        public title: string,\n        public description: string,\n        public isActive: boolean,\n        public inputProperties: FieldTypeProperty[],\n        public outputProperties: FieldTypeProperty[]\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/field-type.model.ts","export class MultiValues {\n    constructor(\n        public values: (string | number)[],\n        public checked: boolean[]\n    ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/multivalues.model.ts","export class QueryOptions {\n    constructor(\n        public sort_by: string,\n        public sort_dir: string,\n        public page: number,\n        public limit?: number,\n        public full?: number,\n        public only_active?: number\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/models/query-options.ts","import { Component} from '@angular/core';\n\n@Component({\n    selector: 'not-found-app',\n    template: `<h3 class=\"mt-3\">Page not found.</h3>`\n})\nexport class NotFoundComponent { }\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/not-found.component.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page-orders.html'\n})\nexport class OrdersComponent implements OnInit {\n    title = 'Заказы';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/orders.component.ts","import { OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { QueryOptions } from './models/query-options';\nimport { AlertModalContent, ConfirmModalContent } from './app.component';\n\nimport { DataService } from './services/data-service.abstract';\n\nexport abstract class PageTableAbstractComponent<M> implements OnInit {\n    errorMessage: string;\n    items: M[] = [];\n    title: string = 'Page with data table';\n    modalRef: NgbModalRef;\n    loading: boolean = false;\n    selectedIds: number[] = [];\n    collectionSize = 0;\n    queryOptions: QueryOptions = new QueryOptions('name', 'asc', 1, 10, 0, 0);\n\n    abstract getModalContent();\n\n    constructor(\n        public dataService: DataService<any>,\n        public activeModal: NgbActiveModal,\n        public modalService: NgbModal,\n        public titleService: Title\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.setTitle(this.title);\n        this.getList();\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    modalOpen(itemId?: number, isItemCopy: boolean = false): void {\n        this.modalRef = this.modalService.open(this.getModalContent(), {size: 'lg', backdrop: 'static'});\n        this.setModalInputs(itemId, isItemCopy);\n        this.modalRef.result.then((result) => {\n            this.getList();\n        }, (reason) => {\n            //console.log( 'reason', reason );\n        });\n    }\n\n    setModalInputs(itemId?: number, isItemCopy: boolean = false): void {\n        const isEditMode = typeof itemId !== 'undefined' && !isItemCopy;\n        this.modalRef.componentInstance.modalTitle = isEditMode ? 'Edit' : 'Add';\n        this.modalRef.componentInstance.itemId = itemId || 0;\n        this.modalRef.componentInstance.isItemCopy = isItemCopy || false;\n        this.modalRef.componentInstance.isEditMode = isEditMode;\n    }\n\n    deleteItemConfirm(itemId: number): void {\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = 'Are you sure you want to remove this item?';\n        this.modalRef.result.then((result) => {\n            if (result == 'accept') {\n                this.deleteItem(itemId);\n            }\n        });\n    }\n\n    confirmAction(message: string) {\n        this.modalRef = this.modalService.open(ConfirmModalContent);\n        this.modalRef.componentInstance.modalTitle = 'Confirm';\n        this.modalRef.componentInstance.modalContent = message;\n        return this.modalRef.result;\n    }\n\n    blockSelected() {\n        if (this.selectedIds.length === 0) {\n            this.showAlert('Nothing is selected.');\n            return;\n        }\n        console.log('blockSelected', this.selectedIds);\n    }\n\n    deleteSelected() {\n        if (this.selectedIds.length === 0) {\n            this.showAlert('Nothing is selected.');\n            return;\n        }\n        this.confirmAction('Are you sure you want to delete all selected items?')\n            .then((result) => {\n                if (result == 'accept') {\n                    this.dataService.deleteByArray(this.selectedIds)\n                        .subscribe((res) => {\n                            this.getList();\n                        }, err => this.showAlert(err));\n                }\n            });\n    }\n\n    showAlert(message: string) {\n        this.modalRef = this.modalService.open(AlertModalContent);\n        this.modalRef.componentInstance.modalContent = message;\n        this.modalRef.componentInstance.modalTitle = 'Error';\n        this.modalRef.componentInstance.messageType = 'error';\n    }\n\n    deleteItem(itemId: number): void {\n        this.confirmAction('Are you sure you want to remove this item?')\n            .then((result) => {\n                if (result == 'accept') {\n                    this.dataService.deleteItem(itemId)\n                        .subscribe((res) => {\n                            this.getList();\n                        }, err => {\n                            this.showAlert(err);\n                        });\n                }\n            });\n    }\n\n    actionRequest(actionValue: [string, number]): void {\n        switch (actionValue[0]) {\n            case 'edit':\n                this.modalOpen(actionValue[1]);\n                break;\n            case 'copy':\n                this.modalOpen(actionValue[1], true);\n                break;\n            case 'delete':\n                this.deleteItem(actionValue[1]);\n                break;\n            case 'changeQuery':\n                this.getList();\n                break;\n        }\n    }\n\n    getList(): void {\n        this.loading = true;\n        this.dataService.getListPage(this.queryOptions)\n            .subscribe(\n                data => {\n                    this.items = data.items;\n                    this.collectionSize = data.total;\n                    this.loading = false;\n                },\n                error => this.errorMessage = error\n            );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/page-table.abstract.ts","import { Pipe } from '@angular/core';\n\n// Filter Array of Objects\n@Pipe({\n    name: 'filter',\n    pure: false\n})\nexport class FilterArrayPipe {\n    transform(value: any, filter: {[key: string]: string}): any {\n        if (filter && Array.isArray(value)) {\n            const filterKeys = Object.keys(filter);\n            return value.filter(item =>\n                filterKeys.reduce((memo, keyName) =>\n                memo && item[keyName] === filter[keyName], true));\n        } else {\n            return value;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/pipes/filter-array-pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { ContentField } from \"../models/content_field.model\";\n\n@Pipe({ name: 'filterFieldByGroup' })\nexport class FilterFieldByGroup implements PipeTransform {\n    transform(allFields: ContentField[], groupName: string) {\n        return allFields.filter(field => field.group == groupName);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/pipes/filter-field-by-group.pipe.ts","/*\n * https://github.com/FuelInteractive/fuel-ui\n * Example use\n *\t\tBasic Array of single type: *ngFor=\"let todo of todoService.todos | orderBy : '-'\"\n *\t\tMultidimensional Array Sort on single column: *ngFor=\"let todo of todoService.todos | orderBy : ['-status']\"\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor=\"let todo of todoService.todos | orderBy : ['status', '-title']\"\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'orderBy', pure: false})\nexport class OrderByPipe implements PipeTransform {\n\n    value:string[] =[];\n\n    static _orderByComparator(a:any, b:any):number{\n\n        if(a === null || typeof a === 'undefined') a = 0;\n        if(b === null || typeof b === 'undefined') b = 0;\n\n        if((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))){\n            //Isn't a number so lowercase the string to properly compare\n            if(a.toLowerCase() < b.toLowerCase()) return -1;\n            if(a.toLowerCase() > b.toLowerCase()) return 1;\n        }\n        else{\n            //Parse strings as numbers to compare properly\n            if(parseFloat(a) < parseFloat(b)) return -1;\n            if(parseFloat(a) > parseFloat(b)) return 1;\n        }\n\n        return 0; //equal each other\n    }\n\n    transform(input:any, config:string = '+'): any {\n\n        //invalid input given\n        if(!input) return input;\n\n        //make a copy of the input's reference\n        this.value = [...input];\n        let value = this.value;\n\n        if(!Array.isArray(value)) return value;\n\n        if(!Array.isArray(config) || (Array.isArray(config) && config.length == 1)){\n            let propertyToCheck:string = !Array.isArray(config) ? config : config[0];\n            let desc = propertyToCheck.substr(0, 1) == '-';\n\n            //Basic array\n            if(!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+'){\n                return !desc ? value.sort() : value.sort().reverse();\n            }\n            else {\n                let property:string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\n                    ? propertyToCheck.substr(1)\n                    : propertyToCheck;\n\n                return value.sort(function(a:any,b:any){\n                    let aValue = a[property];\n                    let bValue = b[property];\n\n                    let propertySplit = property.split('.');\n\n                    if(typeof aValue === 'undefined' && typeof bValue === 'undefined' && propertySplit.length > 1){\n                        aValue = a;\n                        bValue = b;\n                        for(let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]];\n                            bValue = bValue[propertySplit[j]];\n                        }\n                    }\n\n                    return !desc\n                        ? OrderByPipe._orderByComparator(aValue, bValue)\n                        : -OrderByPipe._orderByComparator(aValue, bValue);\n                });\n            }\n        }\n        else {\n            //Loop over property of the array in order and sort\n            return value.sort(function(a:any,b:any){\n                for(let i:number = 0; i < config.length; i++){\n                    let desc = config[i].substr(0, 1) == '-';\n                    let property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\n                        ? config[i].substr(1)\n                        : config[i];\n\n                    let aValue = a[property];\n                    let bValue = b[property];\n\n                    let propertySplit = property.split('.');\n\n                    if(typeof aValue === 'undefined' && typeof bValue === 'undefined' && propertySplit.length > 1){\n                        aValue = a;\n                        bValue = b;\n                        for(let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]];\n                            bValue = bValue[propertySplit[j]];\n                        }\n                    }\n\n                    let comparison = !desc\n                        ? OrderByPipe._orderByComparator(aValue, bValue)\n                        : -OrderByPipe._orderByComparator(aValue, bValue);\n\n                    //Don't return 0 yet in case of needing to sort by next property\n                    if(comparison != 0) return comparison;\n                }\n\n                return 0; //equal each other\n            });\n        }\n    }\n}\n\nexport let ORDERBY_PROVIDERS = [\n    OrderByPipe\n];\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/pipes/orderby.pipe.ts","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal, NgbTooltipConfig  } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\n\nimport { ContentType } from './models/content_type.model';\nimport { Category } from \"./models/category.model\";\nimport { ModalContentAbstractComponent } from './modal.abstract';\nimport { CategoriesService } from './services/categories.service';\nimport { ContentTypesService } from './services/content_types.service';\nimport { ProductsService } from './services/products.service';\nimport { SystemNameService } from './services/system-name.service';\nimport { Product } from './models/product.model';\n\n@Component({\n    selector: 'product-modal-content',\n    templateUrl: 'templates/modal-product.html',\n    providers: [ SystemNameService ]\n})\nexport class ProductModalContent extends ModalContentAbstractComponent<Product> {\n\n    @Input() category: Category;\n    categories: Category[] = [];\n    contentTypes: ContentType[] = [];\n    currentContentType: ContentType = new ContentType(0, '', '', '', '', [], [], true);\n    model: Product = {} as Product;\n\n    formFields = {\n        parentId: {\n            value: 0,\n            validators: [Validators.required],\n            messages: {\n                required: 'Category is required.'\n            }\n        },\n        isActive: {\n            value: true,\n            validators: [],\n            messages: {}\n        }\n    };\n\n    constructor(\n        public fb: FormBuilder,\n        public dataService: ProductsService,\n        public systemNameService: SystemNameService,\n        public activeModal: NgbActiveModal,\n        public tooltipConfig: NgbTooltipConfig,\n        private contentTypesService: ContentTypesService,\n        private categoriesService: CategoriesService\n    ) {\n        super(fb, dataService, systemNameService, activeModal, tooltipConfig);\n\n        this.model.id = 0;\n        this.model.parentId = 0;\n    }\n\n    ngOnInit(): void {\n        this.model.parentId = this.category.id;\n        this.dataService.setRequestUrl('admin/products/' + this.category.id);\n\n        this.buildForm();\n        this.getCategories();\n        this.getContentType()\n            .subscribe(() => {\n                if (this.itemId) {\n                    this.getModelData();\n                }\n            }, (msg) => {\n                this.errorMessage = msg;\n            });\n    }\n\n    getSystemFieldName(): string {\n        const index = _.findIndex(this.currentContentType.fields, {inputType: 'system_name'});\n        return index > -1 ? this.currentContentType.fields[index].name : 'name';\n    }\n\n    getCategories() {\n        this.loading = true;\n        this.categoriesService.getList()\n            .subscribe(data => {\n                this.categories = data;\n                this.loading = false;\n            }, (err) => {\n                this.errorMessage = err;\n            });\n    }\n\n    getContentType(): Observable<ContentType> {\n        if(!this.category.contentTypeName){\n            // return Promise.reject('Content type name not found.');\n        }\n        this.loading = true;\n        return this.contentTypesService.getItemByName(this.category.contentTypeName);\n            // .subscribe((data) => {\n            //     this.currentContentType = data as ContentType;\n            //     this.errorMessage = '';\n            //     this.updateForm();\n            //     this.loading = false;\n            // }, (err) => {\n            //     this.errorMessage = err;\n            // });\n    }\n\n    updateForm(data ?: any): void {\n        if(!data){\n            data = _.clone(this.model);\n        }\n        let newKeys = _.map(this.currentContentType.fields, function(field){\n            return field.name;\n        });\n        newKeys.push('parentId', 'isActive');\n\n        //Remove keys\n        for (let key in this.form.controls) {\n            if (this.form.controls.hasOwnProperty(key)) {\n                if(newKeys.indexOf(key) === -1){\n                    this.form.removeControl(key);\n                }\n            }\n        }\n        this.model = _.pick(data, newKeys);\n    }\n\n    onChangeContentType(): void {\n        const parentId = parseInt(String(this.model.parentId));\n        let index = _.findIndex(this.categories, {id: parentId});\n        if (index == -1) {\n            return;\n        }\n        this.category = _.clone(this.categories[index]);\n        this.getContentType();\n    }\n\n    saveFiles(itemId: number) {\n\n        console.log('SAVE FILES', this.files, itemId);\n\n        const formData: FormData = new FormData();\n        for (let key in this.files) {\n            if (this.files.hasOwnProperty(key) && this.files[key] instanceof File) {\n                formData.append(key, this.files[key], this.files[key].name);\n            }\n        }\n\n        // TODO: Save files\n\n    }\n\n    save() {\n        this.submitted = true;\n        if(!this.form.valid){\n            this.onValueChanged('form');\n            this.submitted = false;\n            return;\n        }\n\n        this.dataService.setRequestUrl('admin/products/' + this.category.id);\n\n        let callback = function (res: any) {\n            if (res.success) {\n                if (!_.isEmpty(this.files) && res.data._id) {\n                    this.saveFiles(res.data._id);\n                } else {\n                    this.closeModal();\n                }\n            } else {\n                if (res.msg) {\n                    this.submitted = false;\n                    this.errorMessage = res.msg;\n                }\n            }\n        };\n\n        if (this.model.id) {\n            // this.dataService.update(this.model).then(callback.bind(this));\n        } else {\n            // this.dataService.create(this.model).then(callback.bind(this));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/product.component.ts","import { Component, OnInit, Input, OnChanges, SimpleChange, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from 'lodash';\nimport { isNumeric } from 'rxjs/util/isNumeric';\n\nimport { ContentField } from \"./models/content_field.model\";\nimport { SystemNameService } from './services/system-name.service';\nimport { MultiValues } from './models/multivalues.model';\nimport { Properties } from './models/properties.iterface';\n\n@Component({\n    selector: 'input-field-renderer',\n    templateUrl: 'templates/render-input-field.html',\n    providers: [ SystemNameService ]\n})\nexport class InputFieldRenderComponent implements OnInit, OnChanges {\n\n    @Input() fields: ContentField[];\n    @Input() groups: string[];\n    @Input() model: any;\n    @Input() form: FormGroup;\n    @Input() formErrors: {[key: string]: string};\n    @Input() validationMessages: {[key: string]: {[key: string]: string}};\n    @Input() selectedItems: { [key: string]: string; } = {};\n    @Input() files: { [key: string]: File } = {};\n    fieldsMultivalues: {[key: string]: MultiValues} = {};\n    submitted = false;\n    calendarLocale = {\n        en: {\n            firstDayOfWeek: 0,\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'],\n            monthNames: [ 'January','February','March','April','May','June','July','August','September','October','November','December' ],\n            monthNamesShort: [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ],\n            today: 'Today',\n            clear: 'Clear'\n        },\n        ru: {\n            firstDayOfWeek: 1,\n            dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n            dayNamesShort: ['Вос', 'Пон', 'Втор', 'Среда', 'Чет', 'Пятн', 'Суб'],\n            dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n            monthNames: [ 'Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь' ],\n            monthNamesShort: [ 'Янв', 'Февр', 'Мар', 'Апр', 'Май', 'Июнь','Июль', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек' ],\n            today: 'Сегодня',\n            clear: 'Сбросить'\n        }\n    };\n\n    constructor(\n        private changeDetectionRef: ChangeDetectorRef,\n        private systemNameService: SystemNameService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.buildControls();\n    }\n\n    ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n        this.buildControls();\n    }\n\n    buildControls() {\n        this.fields.forEach(function(field){\n            this.setFieldProperties(field);\n            this.setFieldOptions(field);\n            this.setValue(field);\n            this.formErrors[field.name] = '';\n            if(!this.validationMessages[field.name]){\n                this.validationMessages[field.name] = {};\n            }\n\n            if (!this.form.controls[field.name]) {\n                let validators = this.getValidators(field);\n                let control = new FormControl(this.model[field.name], validators);\n                this.form.addControl(field.name, control);\n            }\n        }.bind(this));\n        this.changeDetectionRef.detectChanges();\n    }\n\n    setFieldProperties(field: ContentField): void {\n\n        let propertiesDefault: Properties;\n\n        switch (field.inputType) {\n            case 'number':\n\n                propertiesDefault = {\n                    handler: '',\n                    min: null,\n                    max: null,\n                    step: 1\n                };\n                field.inputProperties = this.extendProperties(\n                    field.inputProperties,\n                    propertiesDefault\n                );\n\n                break;\n            case 'date':\n\n                propertiesDefault = {\n                    handler: '',\n                    format: 'mm/dd/yy',\n                    show_time: 0,\n                    hour_format: 24,\n                    locale: 'en'\n                };\n                field.inputProperties = this.extendProperties(\n                    field.inputProperties,\n                    propertiesDefault\n                );\n\n                break;\n\n            case 'rich_text':\n\n                propertiesDefault = {\n                    handler: '',\n                    formats: 'background,bold,color,font,code,italic,link,strike,script,underline,blockquote,header,indent,list,align,direction,code-block,formula,image,video,clean'\n                };\n                field.inputProperties = this.extendProperties(\n                    field.inputProperties,\n                    propertiesDefault\n                );\n                field.inputProperties.formats = String(field.inputProperties.formats).split(',');\n\n                break;\n            default:\n\n                break;\n        }\n    }\n\n    setFieldOptions(field: ContentField): void {\n\n        field.options = [];\n        let valueArr;\n\n        switch (field.inputType) {\n            case 'radio':\n            case 'select':\n\n                valueArr = field.inputProperties.values_list\n                    ? String(field.inputProperties.values_list).split('||')\n                    : [];\n                valueArr.forEach((optStr, index) => {\n                    let opts = optStr.split('==');\n                    if (!opts[1]) {\n                        opts[1] = opts[0];\n                    }\n                    field.options.push(_.zipObject(['title','value'], opts));\n                });\n\n                break;\n            case 'checkbox':\n\n                valueArr = field.inputProperties.values_list\n                    ? String(field.inputProperties.values_list).split('||')\n                    : [];\n\n                if (!_.isArray(this.model[field.name])) {\n                    this.model[field.name] = [];\n                }\n\n                this.fieldsMultivalues[field.name] = new MultiValues([], []);\n                valueArr.forEach((optStr, index) => {\n                    let opts = optStr.split('==');\n                    if (!opts[1]) {\n                        opts[1] = opts[0];\n                    }\n                    field.options.push(_.zipObject(['title','value'], opts));\n                    this.fieldsMultivalues[field.name].values.push(opts[1]);\n                    this.fieldsMultivalues[field.name].checked.push(this.model[field.name].indexOf(opts[1]) > -1);\n                });\n\n                break;\n        }\n    }\n\n    setValue(field: ContentField): void {\n        let defaultValue = null,\n            modelValue = this.model[field.name] || null;\n        if (typeof field.inputProperties.value !== 'undefined') {\n            defaultValue = field.inputProperties.value;\n        }\n\n        switch (field.inputType){\n            case 'date':\n\n                defaultValue = new Date();\n                if (modelValue) {\n                    modelValue = new Date(modelValue);\n                }\n\n                break;\n            case 'number':\n                defaultValue = parseInt(String(defaultValue));\n                break;\n            case 'tags':\n            case 'checkbox':\n                defaultValue = defaultValue ? defaultValue.split('||') : [];\n                break;\n        }\n        this.model[field.name] = modelValue || defaultValue;\n    }\n\n    selectValue(e, fieldName: string, value: string): void {\n        if (!_.isArray(this.model[fieldName])) {\n            this.model[fieldName] = [];\n        }\n        const valIndex = this.fieldsMultivalues[fieldName].values.indexOf(value);\n        if (valIndex === -1) {\n            return;\n        }\n        if (e.target.checked) {\n            this.model[fieldName].push(value);\n            this.fieldsMultivalues[fieldName].checked[valIndex] = true;\n        } else {\n            this.model[fieldName].splice(this.model[fieldName].indexOf(value), 1);\n            this.fieldsMultivalues[fieldName].checked[valIndex] = false;\n        }\n    }\n\n    getValidators(field: ContentField): any[] {\n        let validators = [];\n        if(field.required){\n            validators.push(Validators.required);\n            this.validationMessages[field.name].required = field.title + ' is required.';\n        }\n        return validators;\n    }\n\n    extendProperties(object1: Properties, object2: Properties): Properties {\n        object1 = _.extend({}, object2, object1);\n        for (let key in object1) {\n            if (object1.hasOwnProperty(key)) {\n                if (isNumeric(object1[key])) {\n                    object1[key] = parseInt(String(object1[key]));\n                }\n            }\n        }\n        return object1;\n    }\n\n    generateName(field: ContentField): void {\n        const sourceFieldName = field.inputProperties.source_field\n            ? String(field.inputProperties.source_field)\n            : 'title';\n        const title = this.model[sourceFieldName] || '';\n        this.model[field.name] = this.systemNameService.generateName(title);\n        this.changeDetectionRef.detectChanges();\n    }\n\n    fileChange(event, fieldName: string, imgPreviewEl?: HTMLImageElement) {\n        const fileList: FileList = event.target.files;\n        if (fileList.length > 0) {\n            this.form.controls[fieldName].setValue(fileList[0].name);\n            this.selectedItems[fieldName] = fileList[0].name;\n            this.files[fieldName] = fileList[0];\n\n            if (imgPreviewEl) {\n                const reader = new FileReader();\n                reader.onload = function(e: ProgressEvent) {\n                    const fr = e.target as FileReader;\n                    imgPreviewEl.src = fr.result;\n                    imgPreviewEl.style.display = 'block';\n                };\n                reader.readAsDataURL(fileList[0]);\n            }\n        }\n    }\n\n    fileClear(fieldName: string, imgPreviewEl?: HTMLImageElement) {\n        this.model[fieldName] = null;\n        this.form.controls[fieldName].reset(null);\n        delete this.selectedItems[fieldName];\n        delete this.files[fieldName];\n        if (imgPreviewEl) {\n            imgPreviewEl.src = '';\n            imgPreviewEl.style.display = 'none';\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/render-input-field.ts","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { ContentField } from \"./models/content_field.model\";\n\n@Component({\n    selector: 'output-field',\n    templateUrl: 'templates/render-output-field.html',\n    providers: []\n})\nexport class OutputFieldComponent implements OnInit {\n\n    @Input() value: string | number | boolean;\n    @Input() outputType: string;\n    @Input() options: {};\n\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        //console.log(this.options);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/render-output-field.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data-service.abstract';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { Category } from '../models/category.model';\n\n@Injectable()\nexport class CategoriesService extends DataService<Category> {\n\n    constructor(http: HttpClient) {\n        super(http);\n        this.setRequestUrl('admin/categories');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/categories.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data-service.abstract';\n\nimport { Observable } from \"rxjs/Observable\";\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class CollectionsService extends DataService<any> {\n\n    constructor(public http: HttpClient) {\n        super(http);\n        this.setRequestUrl('admin/collections');\n    }\n\n    deleteItemByName(itemName: string): Observable<string> {\n        const url = `${this.getRequestUrl()}/${itemName}`;\n        return this.http.delete<string>(url, {headers: this.headers})\n            .pipe(\n                catchError(this.handleError<string>())\n            );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/collections.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { DataService } from './data-service.abstract';\nimport { ContentType } from '../models/content_type.model';\n\n@Injectable()\nexport class ContentTypesService extends DataService<ContentType> {\n\n    constructor(http: HttpClient) {\n        super(http);\n        this.setRequestUrl('admin/content_types');\n    }\n\n    getItemByName(name: string): Observable<ContentType> {\n        const url = this.getRequestUrl() + `/by_name/${name}`;\n        return this.http.get<ContentType>(url).pipe(\n            catchError(this.handleError<ContentType>())\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/content_types.service.ts","import { Http, Response, URLSearchParams } from '@angular/http';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { QueryOptions } from '../models/query-options';\nimport { DataList } from '../models/data-list.interface';\nimport { SimpleEntity } from '../models/simple-entity.interface';\n\nexport interface outputData {\n    data: any | any[] | null;\n    successMsg: string;\n    errorMsg: string;\n    total: number;\n}\n\nexport abstract class DataService<M extends SimpleEntity> {\n\n    public headers = new HttpHeaders({'Content-Type': 'application/json'});\n    private requestUrl = '';\n\n    constructor(\n        public http: HttpClient\n    ) {\n        this.requestUrl = 'app/data_list';\n    }\n\n    setRequestUrl(url){\n        this.requestUrl = url;\n    }\n\n    getRequestUrl(){\n        return this.requestUrl;\n    }\n\n    getItem(id: number): Observable<M> {\n        const url = this.getRequestUrl() + `/${id}`;\n        return this.http.get<M>(url).pipe(\n            catchError(this.handleError<M>())\n        );\n    }\n\n    getList(options ?: QueryOptions): Observable<M[]> {\n        let params = new HttpParams();\n        for(let name in options){\n            if(!options.hasOwnProperty(name)){\n                continue;\n            }\n            params.set(name, options[name]);\n        }\n        return this.http.get<M[]>(this.getRequestUrl(), {params: params})\n            .pipe(\n                catchError(this.handleError())\n            );\n    }\n\n    getListPage(options ?: QueryOptions): Observable<DataList<M>> {\n        let params = new HttpParams();\n        for(let name in options){\n            if(!options.hasOwnProperty(name)){\n                continue;\n            }\n            params.set(name, options[name]);\n        }\n        return this.http.get<DataList<M>>(this.getRequestUrl(), {params: params})\n            .pipe(\n                catchError(this.handleError())\n            );\n    }\n\n    deleteItem(id: number): Observable<M> {\n        const url = this.getRequestUrl() + `/${id}`;\n        return this.http.delete<M>(url, {headers: this.headers}).pipe(\n            catchError(this.handleError<M>())\n        );\n    }\n\n    deleteByArray(idsArray: number[]): Observable<M> {\n        const url = this.getRequestUrl() + '/batch';\n        let params = new HttpParams();\n        params.set('ids', JSON.stringify(idsArray));\n        return this.http.delete(url, {\n                headers: this.headers,\n                params: params\n            })\n            .pipe(\n                catchError(this.handleError<M>())\n            );\n    }\n\n    create(item: M): Observable<M> {\n        return this.http.post<M>(this.getRequestUrl(), item, {headers: this.headers}).pipe(\n            catchError(this.handleError<M>())\n        );\n    }\n\n    // update(item: any): Promise<any> {\n    //     const url = this.getRequestUrl() + `/${item.id}`;\n    //     return this.http\n    //         .put(url, JSON.stringify(item), {headers: this.headers})\n    //         .toPromise()\n    //         .then(this.extractData)\n    //         .catch(this.handleError);\n    // }\n\n    update(item: M): Observable<M> {\n        const url = this.getRequestUrl() + `/${item.id}`;\n        return this.http.put(url, item, {headers: this.headers}).pipe(\n            catchError(this.handleError<M>())\n        );\n    }\n\n    handleError<T> (operation = 'operation', result?: T) {\n        return (err: any): Observable<T> => {\n            if (err.error) {\n                throw err.error;\n            }\n\n            return of(result as T);\n        };\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/data-service.abstract.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './data-service.abstract';\n\nimport { Product } from '../models/product.model';\n\n@Injectable()\nexport class ProductsService extends DataService<Product> {\n\n    constructor(http:HttpClient) {\n        super(http);\n        this.setRequestUrl('admin/products');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/products.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SystemNameService {\n\n    private transitMap = {\n        ru: {\n            'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V', 'в': 'v', 'Г': 'G', 'г': 'g',\n            'Д': 'D', 'д': 'd', 'Е': 'E', 'е': 'e', 'Ё': 'E', 'ё': 'e', 'Ж': 'Zh', 'ж': 'zh',\n            'З': 'Z', 'з': 'z', 'И': 'I', 'и': 'i', 'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k',\n            'Л': 'L', 'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n', 'О': 'O', 'о': 'o',\n            'П': 'P', 'п': 'p', 'Р': 'R', 'р': 'r', 'С': 'S', 'с': 's', 'Т': 'T', 'т': 't',\n            'У': 'U', 'у': 'u', 'Ф': 'F', 'ф': 'f', 'Х': 'Kh', 'х': 'kh', 'Ц': 'Ts', 'ц': 'ts',\n            'Ч': 'Ch', 'ч': 'ch', 'Ш': 'Sh', 'ш': 'sh', 'Щ': 'Sch', 'щ': 'sch', 'ь': '', 'Ы': 'Y',\n            'ы': 'y', 'ъ': '', 'Э': 'E', 'э': 'e', 'Ю': 'Yu', 'ю': 'yu', 'Я': 'Ya', 'я': 'ya',\n            ' ': '-', '\\\\': '', '/': '', '\\'': '', '\"': '', '[': '', ']': '', '{': '', '}': '',\n            '(': '', ')': ''\n        }\n    };\n\n    mapWords(char: string, lang: string) {\n        return Object.prototype.hasOwnProperty.call(this.transitMap[lang], char)\n            ? this.transitMap[lang][char]\n            : char;\n    }\n\n    transliterate(word: string) {\n        return word.split('')\n            .map((char) => this.mapWords(char,'ru'))\n            .join('');\n    }\n\n    generateName(title: string): string{\n        title = this.transliterate(title);\n        return title.toLowerCase();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/services/system-name.service.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page-settings.html'\n})\nexport class SettingsComponent implements OnInit {\n    title = 'Настройки';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/settings.component.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'shk-settings',\n    templateUrl: 'templates/page-statistics.html'\n})\nexport class StatisticsComponent implements OnInit {\n    title = 'Статистика';\n\n    constructor(\n        private titleService: Title\n    ) {}\n\n    ngOnInit(): void {\n        this.setTitle( this.title );\n    }\n\n    public setTitle( newTitle: string ): void {\n        this.titleService.setTitle( newTitle );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/stat.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QueryOptions } from './models/query-options';\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: 'cmp-table',\n    templateUrl: 'templates/cmp-table.html'\n})\nexport class TableComponent implements OnInit {\n    @Input() items: any[];\n    @Input() tableFields: any[];\n    @Input() collectionSize: number;\n    @Input() currentPage: number;\n    @Input() queryOptions: QueryOptions;\n    @Input() loading: boolean;\n    @Input() selectedIds: number[] = [];\n    @Output() actionRequest = new EventEmitter();\n\n    constructor(\n        public router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.queryOptions.sort_by = this.tableFields.length > 0\n            ? this.tableFields[0].name\n            : 'id';\n    }\n\n    selectSortBy(fieldName: string): void {\n        if (this.queryOptions.sort_by == fieldName) {\n            this.queryOptions.sort_dir = this.queryOptions.sort_dir == 'asc' ? 'desc' : 'asc';\n        } else {\n            this.queryOptions.sort_by = fieldName;\n        }\n        this.actionRequest.emit(['changeQuery', this.queryOptions]);\n    }\n\n    selectAll(event): void {\n        if (event.target.checked) {\n            for (let item of this.items) {\n                this.selectedIds.push(item.id);\n            }\n        } else {\n            this.selectedIds.splice(0);\n        }\n    }\n\n    setSelected(event, itemId: number): void {\n        const index = this.selectedIds.indexOf(itemId);\n        if (event.target.checked) {\n            if (index == -1) {\n                this.selectedIds.push(itemId);\n            }\n        } else if (index > -1) {\n            this.selectedIds.splice(index, 1);\n        }\n    }\n\n    pageChange(): void{\n        this.actionRequest.emit(['changeQuery', this.queryOptions]);\n    }\n\n    action(actionName: string, actionValue ?: number): void {\n        this.actionRequest.emit([actionName, actionValue]);\n    }\n\n    getIsSelected(itemId: number): boolean {\n        return this.selectedIds.lastIndexOf(itemId) > -1;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/app/table.component.ts","module.exports = \"<div>\\n\\n    <div class=\\\"card-navbar\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/orders']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-bag\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Orders</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/statistics']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-bar-graph-2\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Statistics</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/catalog']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-layers\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Catalog</span>\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/settings']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-cog\\\"></i>\\n                <span class=\\\"hidden-xs-down\\\" i18n>Settings</span>\\n            </a>\\n        </div>\\n    </div>\\n\\n    <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/app.component.html\n// module id = ../../../../../src/app/templates/app.component.html\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n    <div class=\\\"float-right\\\">\\n\\n        <div ngbDropdown class=\\\"d-inline-block mr-1\\\">\\n            <button class=\\\"btn btn-info\\\" ngbDropdownToggle>\\n                Массовые дейсвия\\n            </button>\\n            <div ngbDropdownMenu>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"blockSelected()\\\">Отключить / включить</button>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"deleteSelected()\\\">Удалить</button>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-success d-inline-block btn-wide\\\" (click)=\\\"modalOpen()\\\">\\n            <i class=\\\"icon-plus\\\"></i>\\n            Add\\n        </button>\\n\\n    </div>\\n    <div class=\\\"float-left\\\">\\n\\n        <categories-menu (changeRequest)=\\\"openCategory($event)\\\"></categories-menu>\\n\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<cmp-table [items]=\\\"items\\\" [(selectedIds)]=\\\"selectedIds\\\" [collectionSize]=\\\"collectionSize\\\" [queryOptions]=\\\"queryOptions\\\" [tableFields]=\\\"tableFields\\\" [(loading)]=\\\"loading\\\" (actionRequest)=\\\"actionRequest($event)\\\"></cmp-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-category.html\n// module id = ../../../../../src/app/templates/catalog-category.html\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n    <div class=\\\"float-right\\\">\\n\\n        <div ngbDropdown class=\\\"d-inline-block mr-1\\\">\\n            <button class=\\\"btn btn-info\\\" ngbDropdownToggle>\\n                Массовые дейсвия\\n            </button>\\n            <div ngbDropdownMenu>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"blockSelected()\\\">Отключить / включить</button>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"deleteSelected()\\\">Удалить</button>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-success d-inline-block btn-wide\\\" (click)=\\\"modalOpen()\\\">\\n            <i class=\\\"icon-plus\\\"></i>\\n            Add\\n        </button>\\n\\n    </div>\\n    <div class=\\\"float-left\\\">\\n        <a class=\\\"btn btn-outline-secondary\\\" [routerLink]=\\\"['/catalog']\\\">\\n            <i class=\\\"icon-arrow-left\\\"></i>\\n            Каталог\\n        </a>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<cmp-table [items]=\\\"items\\\" [(selectedIds)]=\\\"selectedIds\\\" [collectionSize]=\\\"collectionSize\\\" [queryOptions]=\\\"queryOptions\\\" [tableFields]=\\\"tableFields\\\" [(loading)]=\\\"loading\\\" (actionRequest)=\\\"actionRequest($event)\\\"></cmp-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-content_types.html\n// module id = ../../../../../src/app/templates/catalog-content_types.html\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n    <div class=\\\"float-right\\\">\\n\\n        <div ngbDropdown class=\\\"d-inline-block mr-1\\\">\\n            <button class=\\\"btn btn-info\\\" ngbDropdownToggle>\\n                Массовые дейсвия\\n            </button>\\n            <div ngbDropdownMenu>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"blockSelected()\\\">Отключить / включить</button>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"deleteSelected()\\\">Удалить</button>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-success d-inline-block btn-wide\\\" (click)=\\\"modalOpen()\\\">\\n            <i class=\\\"icon-plus\\\"></i>\\n            Add\\n        </button>\\n\\n    </div>\\n\\n    <div class=\\\"float-left\\\">\\n        <a class=\\\"btn btn-outline-secondary\\\" [routerLink]=\\\"['/catalog']\\\">\\n            <i class=\\\"icon-arrow-left\\\"></i>\\n            Каталог\\n        </a>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<cmp-table [items]=\\\"items\\\" [(selectedIds)]=\\\"selectedIds\\\" [collectionSize]=\\\"collectionSize\\\" [queryOptions]=\\\"queryOptions\\\" [tableFields]=\\\"tableFields\\\" [(loading)]=\\\"loading\\\" (actionRequest)=\\\"actionRequest($event)\\\"></cmp-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/catalog-field_types.html\n// module id = ../../../../../src/app/templates/catalog-field_types.html\n// module chunks = main","module.exports = \"<div class=\\\"d-inline-block dropdown\\\">\\n    <button class=\\\"btn btn-secondary dropdown-toggle dropdown-toggle-hover\\\">\\n        <i class=\\\"icon-folder\\\"></i>\\n        {{currentCategory.title}}\\n    </button>\\n    <div class=\\\"dropdown-menu shadow\\\" #categoriesDropdown>\\n        <div class=\\\"dropdown-header\\\">\\n            <button class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Open root category\\\" (click)=\\\"goToRootCategory()\\\" *ngIf=\\\"currentCategory.id > 0\\\">\\n                <i class=\\\"icon-home\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Add new category\\\" (click)=\\\"openModalCategory()\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Edit current category\\\" (click)=\\\"openModalCategory(currentCategory.id)\\\">\\n                <i class=\\\"icon-pencil\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Copy category\\\" (click)=\\\"copyCategory()\\\" [hidden]=\\\"!currentCategory.id\\\">\\n                <i class=\\\"icon-stack\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" ngbTooltip=\\\"Delete current category\\\" (click)=\\\"deleteCategoryItemConfirm(currentCategory.id)\\\" [hidden]=\\\"!currentCategory.id\\\">\\n                <i class=\\\"icon-cross\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <div class=\\\"dropdown-header\\\" *ngIf=\\\"categories.length == 0\\\">\\n            No categories.\\n        </div>\\n\\n        <categories-list [inputItems]=\\\"categories\\\" [parentId]=\\\"0\\\" [currentId]=\\\"currentCategory.id\\\"></categories-list>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/categories-menu.html\n// module id = ../../../../../src/app/templates/categories-menu.html\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\" [class.loading]=\\\"loading\\\">\\n    <table class=\\\"table table-striped table-divided mb-0\\\">\\n        <thead>\\n            <tr>\\n                <th class=\\\"text-left\\\">\\n                    <label class=\\\"custom-control custom-checkbox\\\" [hidden]=\\\"items.length === 0\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" (click)=\\\"selectAll($event)\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </th>\\n                <th *ngFor=\\\"let tableField of tableFields; let index=index\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\" (click)=\\\"selectSortBy(tableField.name)\\\">\\n                        {{tableField.title}}\\n                        <i [class.icon-arrow-down]=\\\"queryOptions.sort_dir == 'asc'\\\" [class.icon-arrow-up]=\\\"queryOptions.sort_dir == 'desc'\\\" [style.visibility]=\\\"tableField.name == queryOptions.sort_by ? 'visible' : 'hidden'\\\"></i>\\n                    </button>\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr class=\\\"show-on-hover-parent\\\" *ngFor=\\\"let item of items\\\">\\n                <td>\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [checked]=\\\"getIsSelected(item.id)\\\" (click)=\\\"setSelected($event, item.id)\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </td>\\n                <td *ngFor=\\\"let tableField of tableFields; let index=index\\\">\\n                    <div class=\\\"relative\\\" *ngIf=\\\"index == tableFields.length - 1\\\">\\n                        <div class=\\\"show-on-hover no-wrap\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Edit\\\" (click)=\\\"action('edit', item.id)\\\">\\n                                <i class=\\\"icon-pencil\\\"></i>\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Copy\\\" (click)=\\\"action('copy', item.id)\\\">\\n                                <i class=\\\"icon-stack\\\"></i>\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete\\\" (click)=\\\"action('delete', item.id)\\\">\\n                                <i class=\\\"icon-cross\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n\\n                    <output-field [value]=\\\"item[tableField.name]\\\" [outputType]=\\\"tableField.outputType\\\" [options]=\\\"tableField.outputProperties\\\"></output-field>\\n\\n                </td>\\n            </tr>\\n            <tr [hidden]=\\\"items.length > 0\\\" class=\\\"table-active\\\">\\n                <td [attr.colspan]=\\\"tableFields.length + 1\\\" class=\\\"text-center p-4\\\">\\n                    Empty.\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <div class=\\\"pt-3\\\" [hidden]=\\\"items.length === 0\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"queryOptions.limit\\\" (change)=\\\"pageChange()\\\">\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"20\\\">20</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n            </select>\\n        </div>\\n\\n        <ngb-pagination *ngIf=\\\"collectionSize > queryOptions.limit\\\" [class]=\\\"'mb-0'\\\" [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"queryOptions.page\\\" [maxSize]=\\\"queryOptions.limit\\\" (pageChange)=\\\"pageChange()\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"false\\\"></ngb-pagination>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/cmp-table.html\n// module id = ../../../../../src/app/templates/cmp-table.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{modalContent}}\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-info btn-wide\\\" (click)=\\\"activeModal.close()\\\">\\n        Ok\\n    </button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-alert.html\n// module id = ../../../../../src/app/templates/modal-alert.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<form [formGroup]=\\\"form\\\" [class.loading]=\\\"loading\\\">\\n\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.parentId\\\" *ngIf=\\\"!isRoot\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldContentType\\\">Родительская папка</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldParent\\\" class=\\\"form-control\\\" name=\\\"parentId\\\" formControlName=\\\"parentId\\\" [(ngModel)]=\\\"model.parentId\\\">\\n                    <option value=\\\"0\\\">Корневая категория</option>\\n                    <option value=\\\"{{category.id}}\\\" *ngFor=\\\"let category of categories | orderBy: 'title'\\\">{{category.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.parentId\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.parentId}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.title\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldTitle\\\">Название</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <input type=\\\"text\\\" id=\\\"fieldTitle\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"model.title\\\">\\n                <div *ngIf=\\\"formErrors.title\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.title}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.name\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldName\\\">Системное имя</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" id=\\\"fieldName\\\" [(ngModel)]=\\\"model.name\\\">\\n                    <div class=\\\"input-group-btn\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbTooltip=\\\"Generate\\\" (click)=\\\"generateName(model)\\\" [disabled]=\\\"getControl('name').disabled\\\">\\n                            <i class=\\\"icon-reload\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.name}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldDescription\\\">Описание</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <textarea type=\\\"text\\\" id=\\\"fieldDescription\\\" rows=\\\"4\\\" class=\\\"form-control\\\" name=\\\"description\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.contentTypeName\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldContentType\\\">Тип контента</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldContentType\\\" class=\\\"form-control\\\" name=\\\"contentTypeName\\\" formControlName=\\\"contentTypeName\\\" [(ngModel)]=\\\"model.contentTypeName\\\">\\n                    <option value=\\\"1\\\" *ngFor=\\\"let contentType of contentTypes\\\" [value]=\\\"contentType.name\\\">{{contentType.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.contentTypeName\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.contentTypeName}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"col-md-7 ml-md-auto\\\">\\n\\n                <div class=\\\"card card-body p-2 pl-3\\\">\\n\\n                    <label class=\\\"custom-control custom-checkbox m-0\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"isActive\\\" formControlName=\\\"isActive\\\" [(ngModel)]=\\\"model.isActive\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span>Активный</span>\\n                    </label>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            {{errorMessage}}\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-wide\\\" [disabled]=\\\"submitted\\\" (click)=\\\"save()\\\">\\n            Save\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"close($event)\\\">\\n            Cancel\\n        </button>\\n    </div>\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-category.html\n// module id = ../../../../../src/app/templates/modal-category.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{modalContent}}\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success btn-wide\\\" (click)=\\\"accept()\\\">\\n        Yes\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.close()\\\">\\n        No\\n    </button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-confirm.html\n// module id = ../../../../../src/app/templates/modal-confirm.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<ng-template #confirmPopover let-confirm=\\\"confirm\\\" let-p=\\\"p\\\" let-msg=\\\"message\\\">\\n    <p class=\\\"text-center\\\">Delete this item?</p>\\n    <div class=\\\"alert alert-danger p-2\\\" *ngIf=\\\"msg\\\">{{msg}}</div>\\n    <div class=\\\"text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"confirm()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"p.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<form [class.loading]=\\\"loading\\\">\\n\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n            <!-- ContentType form -->\\n            <div class=\\\"col-lg-4\\\" [formGroup]=\\\"form\\\">\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.title\\\">\\n                    <label class=\\\"label-filled\\\">\\n                        Название\\n                    </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" formControlName=\\\"title\\\" [(ngModel)]=\\\"model.title\\\">\\n                    <div *ngIf=\\\"formErrors.title\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.title}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.name\\\">\\n                    <label for=\\\"fieldName\\\" class=\\\"label-filled\\\">Системное имя</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" id=\\\"fieldName\\\" [(ngModel)]=\\\"model.name\\\">\\n                        <div class=\\\"input-group-btn\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbTooltip=\\\"Generate\\\" (click)=\\\"generateName(model)\\\">\\n                                <i class=\\\"icon-reload\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.name}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"label-filled\\\">\\n                        Описание\\n                    </label>\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"description\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.collection\\\">\\n                    <div class=\\\"col-12\\\">\\n\\n                        <div class=\\\"form-group mb-0\\\">\\n                            <label class=\\\"label-filled\\\">Коллекция</label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <select class=\\\"form-control form-control-sm\\\" name=\\\"collection\\\" formControlName=\\\"collection\\\" [(ngModel)]=\\\"model.collection\\\">\\n                                    <option value=\\\"{{collection}}\\\" *ngFor=\\\"let collection of collections\\\">{{collection}}</option>\\n                                </select>\\n                                <div class=\\\"input-group-btn\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Add collection\\\" (click)=\\\"displayToggle(addCollectionBlock); addCollectionField.value = ''; onValueChanged(); addCollectionField.focus()\\\">\\n                                        <i class=\\\"icon-plus\\\"></i>\\n                                    </button>\\n                                </div>\\n                                <div class=\\\"input-group-btn\\\" [ngbPopover]=\\\"confirmPopover\\\" #buttonDeleteCollection=\\\"ngbPopover\\\" triggers=\\\"manual\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete\\\" (click)=\\\"deleteCollection(buttonDeleteCollection)\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"card p-1 mt-2\\\" #addCollectionBlock style=\\\"display: none;\\\" [class.form-group-message]=\\\"formErrors.newCollection\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"newCollection\\\" #addCollectionField>\\n                                <div *ngIf=\\\"formErrors.newCollection\\\" class=\\\"alert alert-danger mb-1\\\">\\n                                    {{formErrors.newCollection}}\\n                                </div>\\n\\n                                <div class=\\\"text-right mt-1\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addCollection()\\\">\\n                                        Add\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addCollectionBlock.style.display = 'none'; formErrors.newCollection = ''\\\">\\n                                        Cancel\\n                                    </button>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-12\\\">\\n\\n                        <div class=\\\"card card-body p-2 pl-3\\\">\\n\\n                            <label class=\\\"custom-control custom-checkbox m-0\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"isActive\\\" formControlName=\\\"isActive\\\" [(ngModel)]=\\\"model.isActive\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span>Активный</span>\\n                            </label>\\n\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <!-- /ContentType form -->\\n\\n            <!-- Field form -->\\n            <div class=\\\"col-lg-8\\\" [formGroup]=\\\"fieldForm\\\">\\n\\n                <label class=\\\"label-filled\\\" [hidden]=\\\"action != 'add_field'\\\">\\n                    Добавить поле\\n                </label>\\n                <label class=\\\"label-filled\\\" [hidden]=\\\"action != 'edit_field'\\\">\\n                    Редактировать поле\\n                </label>\\n\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\">\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.fld_title\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Название</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"field_title\\\" formControlName=\\\"title\\\" [(ngModel)]=\\\"fieldModel.title\\\">\\n                                <div *ngIf=\\\"formErrors.fld_title\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.fld_title}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.fld_name\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Системное имя</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"field_name\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"fieldModel.name\\\">\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Generate\\\" (click)=\\\"generateName(fieldModel)\\\">\\n                                            <i class=\\\"icon-reload\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors.fld_name\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.fld_name}}\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Описание</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <textarea type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" rows=\\\"3\\\" name=\\\"field_description\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"fieldModel.description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.fld_inputType\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Тип ввода</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"field_inputType\\\" formControlName=\\\"inputType\\\" [(ngModel)]=\\\"fieldModel.inputType\\\" (ngModelChange)=\\\"selectFieldTypeProperties('input')\\\">\\n                                        <option value=\\\"\\\"></option>\\n                                        <option value=\\\"{{fieldType.name}}\\\" *ngFor=\\\"let fieldType of fieldTypes\\\">{{fieldType.title}}</option>\\n                                    </select>\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Options\\\" (click)=\\\"displayToggle(inputTypeOptionsBlock)\\\">\\n                                            <i class=\\\"icon-cog\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors.fld_inputType\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.fld_inputType}}\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"card card-body bg-light mb-3\\\" #inputTypeOptionsBlock style=\\\"display: none;\\\" [hidden]=\\\"!fieldModel.inputType\\\">\\n                            <div>\\n                                <div class=\\\"alert alert-secondary small\\\" [hidden]=\\\"fieldTypeProperties.input.length > 0\\\">\\n                                    There are no parameters.\\n                                </div>\\n                                <div class=\\\"row form-group\\\" *ngFor=\\\"let property of fieldTypeProperties.input\\\">\\n                                    <div class=\\\"col-md-5\\\">\\n                                        {{property.title}}\\n                                    </div>\\n                                    <div class=\\\"col-md-7\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"fieldModel.inputProperties[property.name]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-right mt-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"inputTypeOptionsBlock.style.display = 'none';\\\">\\n                                    Close\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\" [class.form-group-message]=\\\"formErrors.fld_outputType\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Тип вывода</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"field_outputType\\\" formControlName=\\\"outputType\\\" [(ngModel)]=\\\"fieldModel.outputType\\\" (ngModelChange)=\\\"selectFieldTypeProperties('output')\\\">\\n                                        <option value=\\\"\\\"></option>\\n                                        <option value=\\\"{{fieldType.name}}\\\" *ngFor=\\\"let fieldType of fieldTypes\\\">{{fieldType.title}}</option>\\n                                    </select>\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Options\\\" (click)=\\\"displayToggle(outputTypeOptionsBlock)\\\">\\n                                            <i class=\\\"icon-cog\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors.fld_outputType\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors.fld_outputType}}\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"card card-body bg-light mb-3\\\" #outputTypeOptionsBlock style=\\\"display: none;\\\" [hidden]=\\\"!fieldModel.outputType\\\">\\n                            <div class=\\\"alert alert-secondary small\\\" [hidden]=\\\"fieldTypeProperties.output.length > 0\\\">\\n                                There are no parameters.\\n                            </div>\\n                            <div class=\\\"row form-group\\\" *ngFor=\\\"let property of fieldTypeProperties.output\\\">\\n                                <div class=\\\"col-md-5\\\">\\n                                    {{property.title}}\\n                                </div>\\n                                <div class=\\\"col-md-7\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"fieldModel.outputProperties[property.name]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-right mt-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"outputTypeOptionsBlock.style.display = 'none'\\\">\\n                                    Close\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label>Группа</label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <div [class.form-group-message]=\\\"formErrors.fld_group\\\">\\n                                    <div class=\\\"input-group input-group-sm\\\">\\n                                        <select class=\\\"form-control\\\" name=\\\"field_group\\\" formControlName=\\\"group\\\" [(ngModel)]=\\\"fieldModel.group\\\">\\n                                            <option value=\\\"\\\"></option>\\n                                            <option [value]=\\\"groupName\\\" *ngFor=\\\"let groupName of model.groups\\\">{{groupName}}</option>\\n                                        </select>\\n                                        <div class=\\\"input-group-btn\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Add group\\\" (click)=\\\"displayToggle(addGroupBlock); addGroupField.value = ''; addGroupField.focus()\\\">\\n                                                <i class=\\\"icon-plus\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                        <div class=\\\"input-group-btn\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" ngbTooltip=\\\"Delete group\\\" (click)=\\\"deleteGroup()\\\">\\n                                                <i class=\\\"icon-cross\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                    <div *ngIf=\\\"formErrors.fld_group\\\" class=\\\"alert alert-danger\\\">\\n                                        {{formErrors.fld_group}}\\n                                    </div>\\n\\n                                    <div class=\\\"card p-1 mt-2\\\" #addGroupBlock style=\\\"display: none;\\\" [class.form-group-message]=\\\"formErrors.fld_newGroup\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #addGroupField formControlName=\\\"newGroup\\\">\\n                                        <div *ngIf=\\\"formErrors.fld_newGroup\\\" class=\\\"alert alert-danger mb-1\\\">\\n                                            {{formErrors.fld_newGroup}}\\n                                        </div>\\n                                        <div class=\\\"text-right mt-1\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addGroup();\\\">\\n                                                Add\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addGroupBlock.style.display = 'none'; formErrors.fld_newGroup = ''\\\">\\n                                                Cancel\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"required\\\" formControlName=\\\"required\\\" [(ngModel)]=\\\"fieldModel.required\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span>Обязательное</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"showInTable\\\" formControlName=\\\"showInTable\\\" [(ngModel)]=\\\"fieldModel.showInTable\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span>Показывать в таблице</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row mb-0\\\">\\n                            <div class=\\\"col-md-7 offset-md-5\\\">\\n\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"isFilter\\\" formControlName=\\\"isFilter\\\" [(ngModel)]=\\\"fieldModel.isFilter\\\">\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\n                                    <span>Показывать в фильтре</span>\\n                                </label>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"alert alert-danger mt-3 mb-3\\\" [hidden]=\\\"!errorFieldMessage\\\">\\n                            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorFieldMessage = ''\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                            {{errorFieldMessage}}\\n                        </div>\\n\\n                        <div class=\\\"mt-3\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info btn-wide\\\" (click)=\\\"submitField()\\\" [hidden]=\\\"action != 'add_field'\\\">\\n                                <i class=\\\"icon-plus\\\"></i>\\n                                Add field\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success btn-wide\\\" (click)=\\\"displayToggle(fieldsBlock, true); submitField()\\\" [hidden]=\\\"action != 'edit_field'\\\">\\n                                <i class=\\\"icon-check\\\"></i>\\n                                Save field\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary btn-wide\\\" (click)=\\\"displayToggle(fieldsBlock, true); editFieldCancel()\\\">\\n                                Cancel\\n                            </button>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <!-- /Field form -->\\n\\n        </div>\\n\\n        <div class=\\\"form-group row mt-3\\\">\\n            <div class=\\\"col-12\\\">\\n\\n                <label class=\\\"label-filled\\\">\\n                    Поля\\n                </label>\\n\\n                <hr class=\\\"mt-0 mb-0\\\">\\n                <div class=\\\"text-center mb-2\\\" style=\\\"margin-top: -0.8rem;\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary bg-white text-secondary btn-xs\\\" [ngSwitch]=\\\"fieldsBlock.style.display\\\" (click)=\\\"displayToggle(fieldsBlock)\\\">\\n                        <span *ngSwitchCase=\\\"'none'\\\">\\n                            <i class=\\\"icon-plus\\\"></i>\\n                            <span i18n>Expand</span>\\n                        </span>\\n                            <span *ngSwitchCase=\\\"'block'\\\">\\n                            <i class=\\\"icon-minus\\\"></i>\\n                            <span i18n>Collapse</span>\\n                        </span>\\n                    </button>\\n                </div>\\n\\n                <div #fieldsBlock class=\\\"table-responsive\\\" style=\\\"display: block;\\\">\\n                    <table class=\\\"table table-striped table-divided mb-0\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Название</th>\\n                                <th>Тип ввода</th>\\n                                <th>Группа</th>\\n                                <th>Обязательное?</th>\\n                                <th>В таблице?</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr class=\\\"show-on-hover-parent\\\" *ngFor=\\\"let field of model.fields; let index=index\\\">\\n                                <td>\\n                                    {{field.title}}\\n                                    <span class=\\\"text-muted\\\">({{field.name}})</span>\\n                                </td>\\n                                <td>\\n                                    {{field.inputType}}\\n                                </td>\\n                                <td>\\n                                    {{field.group}}\\n                                </td>\\n                                <td>\\n                                    <output-field [value]=\\\"field.required\\\" outputType=\\\"boolean\\\"></output-field>\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"relative\\\">\\n                                        <div class=\\\"show-on-hover\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"fieldMove(index, 'up')\\\" ngbTooltip=\\\"Move up\\\" *ngIf=\\\"index > 0\\\">\\n                                                <i class=\\\"icon-arrow-up\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"fieldMove(index, 'down')\\\" ngbTooltip=\\\"Move down\\\" *ngIf=\\\"index < model.fields.length - 1\\\">\\n                                                <i class=\\\"icon-arrow-down\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"displayToggle(fieldsBlock); editField(field)\\\" [hidden]=\\\"field.name == currentFieldName\\\" ngbTooltip=\\\"Edit\\\">\\n                                                <i class=\\\"icon-pencil\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"displayToggle(fieldsBlock); copyField(field)\\\" ngbTooltip=\\\"Copy\\\">\\n                                                <i class=\\\"icon-stack\\\"></i>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"deleteField(field)\\\" [hidden]=\\\"field.name == currentFieldName\\\" ngbTooltip=\\\"Delete\\\">\\n                                                <i class=\\\"icon-cross\\\"></i>\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n\\n                                    <output-field [value]=\\\"field.showInTable\\\" outputType=\\\"boolean\\\"></output-field>\\n                                </td>\\n                            </tr>\\n                            <tr [hidden]=\\\"model.fields.length > 0\\\" class=\\\"table-active\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"text-center p-3\\\">\\n                                    Empty\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n\\n                <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                    {{errorMessage}}\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-wide\\\" [disabled]=\\\"submitted && form.valid\\\" (click)=\\\"save()\\\">\\n            Save\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Cancel\\n        </button>\\n    </div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-content_types.html\n// module id = ../../../../../src/app/templates/modal-content_types.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\" [class.loading]=\\\"loading\\\">\\n\\n    <form #formElement=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n\\n                <div class=\\\"form-group form-group-message\\\" [class.form-group-message]=\\\"formErrors.title\\\">\\n                    <label for=\\\"fieldTitle\\\" class=\\\"label-filled\\\">Название</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" formControlName=\\\"title\\\" id=\\\"fieldTitle\\\" [(ngModel)]=\\\"model.title\\\">\\n                    <div *ngIf=\\\"formErrors.title\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.title}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors.name\\\">\\n                    <label for=\\\"fieldName\\\" class=\\\"label-filled\\\">Системное имя</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" id=\\\"fieldName\\\" [(ngModel)]=\\\"model.name\\\">\\n                        <div class=\\\"input-group-btn\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbTooltip=\\\"Generate\\\" (click)=\\\"generateName(model)\\\">\\n                                <i class=\\\"icon-reload\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                        {{formErrors.name}}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-12\\\">\\n\\n                        <div class=\\\"card card-body p-2 pl-3\\\">\\n\\n                            <label class=\\\"custom-control custom-checkbox m-0\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"isActive\\\" formControlName=\\\"isActive\\\" [(ngModel)]=\\\"model.isActive\\\">\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\n                                <span>Активный</span>\\n                            </label>\\n\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"fieldDescription\\\" class=\\\"label-filled\\\">Описание</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"description\\\" formControlName=\\\"description\\\" id=\\\"fieldDescription\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n\\n    <!-- Input -->\\n    <label class=\\\"label-filled\\\">Параметры ввода</label>\\n\\n    <hr class=\\\"mt-0 mb-0\\\">\\n    <div class=\\\"text-center mb-2\\\" style=\\\"margin-top: -0.8rem;\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary bg-white text-secondary btn-xs\\\" [ngSwitch]=\\\"collapseContainer1.style.display\\\" (click)=\\\"displayToggle(collapseContainer1)\\\">\\n            <span *ngSwitchCase=\\\"'none'\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n                <span i18n>Expand</span>\\n            </span>\\n            <span *ngSwitchCase=\\\"'block'\\\">\\n                <i class=\\\"icon-minus\\\"></i>\\n                <span i18n>Collapse</span>\\n            </span>\\n        </button>\\n    </div>\\n\\n    <div #collapseContainer1 class=\\\"mb-3\\\" style=\\\"display: block;\\\">\\n        <table class=\\\"table table-bordered table-divided mb-0\\\">\\n            <thead>\\n            <tr>\\n                <th>\\n                    Системное имя\\n                </th>\\n                <th>\\n                    Название\\n                </th>\\n                <th>\\n                    По умолчанию\\n                </th>\\n                <th></th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let item of model.inputProperties; let index=index\\\">\\n                    <td>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.name\\\" name=\\\"name\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.default_value\\\" name=\\\"default_value\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteRow(index, 'inputProperties')\\\" ngbTooltip=\\\"Remove\\\">\\n                            <i class=\\\"icon-cross\\\"></i>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            <tfoot>\\n            <tr class=\\\"bg-faded\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addRow('inputProperties')\\\">\\n                        <i class=\\\"icon-plus\\\"></i>\\n                        Добавить\\n                    </button>\\n                </td>\\n            </tr>\\n            </tfoot>\\n        </table>\\n    </div>\\n    <!-- /Input -->\\n\\n    <!-- Output -->\\n    <label class=\\\"label-filled\\\">Параметры вывода</label>\\n\\n    <hr class=\\\"mt-0 mb-0\\\">\\n    <div class=\\\"text-center mb-2\\\" style=\\\"margin-top: -0.8rem;\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary bg-white text-secondary btn-xs\\\" [ngSwitch]=\\\"collapseContainer2.style.display\\\" (click)=\\\"displayToggle(collapseContainer2)\\\">\\n            <span *ngSwitchCase=\\\"'none'\\\">\\n                <i class=\\\"icon-plus\\\"></i>\\n                <span i18n>Expand</span>\\n            </span>\\n            <span *ngSwitchCase=\\\"'block'\\\">\\n                <i class=\\\"icon-minus\\\"></i>\\n                <span i18n>Collapse</span>\\n            </span>\\n        </button>\\n    </div>\\n\\n    <div #collapseContainer2 style=\\\"display: none;\\\">\\n        <table class=\\\"table table-bordered table-divided mb-0\\\">\\n            <thead>\\n                <tr>\\n                    <th>\\n                        Системное имя\\n                    </th>\\n                    <th>\\n                        Название\\n                    </th>\\n                    <th>\\n                        По умолчанию\\n                    </th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let item of model.outputProperties; let index=index\\\">\\n                    <td>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.name\\\" name=\\\"name\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.default_value\\\" name=\\\"default_value\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteRow(index, 'outputProperties')\\\" ngbTooltip=\\\"Remove\\\">\\n                            <i class=\\\"icon-cross\\\"></i>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            <tfoot>\\n                <tr class=\\\"bg-faded\\\">\\n                    <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addRow('outputProperties')\\\">\\n                            <i class=\\\"icon-plus\\\"></i>\\n                            Добавить\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tfoot>\\n        </table>\\n    </div>\\n    <!-- /Output -->\\n\\n    <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        {{errorMessage}}\\n    </div>\\n\\n</div>\\n<div class=\\\"modal-footer d-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success btn-wide\\\" [disabled]=\\\"submitted\\\" (click)=\\\"save()\\\">\\n        Save\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n        Cancel\\n    </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-field_type.html\n// module id = ../../../../../src/app/templates/modal-field_type.html\n// module chunks = main","module.exports = \"<div class=\\\"modal-header d-block\\\">\\n    <div class=\\\"d-block float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Close\\n        </button>\\n    </div>\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n</div>\\n\\n<form [formGroup]=\\\"form\\\" [class.loading]=\\\"loading\\\">\\n    <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.parentId\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <label for=\\\"fieldCategory\\\">Основная категория</label>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <select id=\\\"fieldCategory\\\" class=\\\"form-control\\\" name=\\\"parentId\\\" formControlName=\\\"parentId\\\" [(ngModel)]=\\\"model.parentId\\\" (change)=\\\"onChangeContentType()\\\">\\n                    <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">{{category.title}}</option>\\n                </select>\\n                <div *ngIf=\\\"formErrors.parentId\\\" class=\\\"alert alert-danger\\\">\\n                    {{formErrors.parentId}}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\" [class.form-group-message]=\\\"formErrors.isActive\\\">\\n            <div class=\\\"col-md-7 ml-md-auto\\\">\\n                <div class=\\\"card card-body p-2 pl-3\\\">\\n\\n                    <label class=\\\"custom-control custom-checkbox m-0\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" name=\\\"isActive\\\" formControlName=\\\"isActive\\\" [(ngModel)]=\\\"model.isActive\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span>Активный</span>\\n                    </label>\\n\\n                </div>\\n            </div>\\n        </div>\\n\\n        <input-field-renderer [(fields)]=\\\"currentContentType.fields\\\" [(groups)]=\\\"currentContentType.groups\\\" [(formErrors)]=\\\"formErrors\\\" [(validationMessages)]=\\\"validationMessages\\\" [(model)]=\\\"model\\\" [(form)]=\\\"form\\\" [(files)]=\\\"files\\\"></input-field-renderer>\\n\\n        <div class=\\\"alert alert-danger mt-3 mb-0\\\" [hidden]=\\\"!errorMessage\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"errorMessage = ''\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            {{errorMessage}}\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer d-block\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-wide\\\" [disabled]=\\\"submitted\\\" (click)=\\\"save()\\\">\\n            Save\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"activeModal.dismiss()\\\">\\n            Cancel\\n        </button>\\n    </div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/modal-product.html\n// module id = ../../../../../src/app/templates/modal-product.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <a class=\\\"btn btn-outline-primary mr-1\\\" href=\\\"\\\" [routerLink]=\\\"['content_types']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-box\\\"></i>\\n                Типы контента\\n            </a>\\n            <a class=\\\"btn btn-outline-primary\\\" href=\\\"\\\" [routerLink]=\\\"['field_types']\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"icon-toggle\\\"></i>\\n                Типы полей\\n            </a>\\n        </div>\\n        <h3>\\n            <i class=\\\"icon-layers\\\"></i>\\n            <span i18n>Catalog</span>\\n        </h3>\\n\\n        <hr>\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-catalog.html\n// module id = ../../../../../src/app/templates/page-catalog.html\n// module chunks = main","module.exports = \"\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-bag\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-right\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    Массовые дейсвия\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button class=\\\"dropdown-item\\\">Изменить статус</button>\\n                    <button class=\\\"dropdown-item\\\">Удалить</button>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"float-left\\\">\\n\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                <div class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                        <i class=\\\"icon-date_range\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped table-divided mb-0\\\">\\n            <thead>\\n            <tr>\\n                <th>\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                    </label>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        ID\\n                        <i class=\\\"icon-arrow-down\\\"></i>\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Статус\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Дата и время\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Кол-во товаров\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Общая цена\\n                    </button>\\n                </th>\\n                <th>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-link\\\">\\n                        Пользователь\\n                    </button>\\n                </th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>1</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        01.03.2017\\n                    </td>\\n                    <td>\\n                        2\\n                    </td>\\n                    <td>\\n                        1 100\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>2</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success min-width150\\\">\\n                            Выполнен\\n                        </button>\\n                    </td>\\n                    <td>\\n                        22.02.2017\\n                    </td>\\n                    <td>\\n                        3\\n                    </td>\\n                    <td>\\n                        2 300\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>3</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        20.02.2017\\n                    </td>\\n                    <td>\\n                        5\\n                    </td>\\n                    <td>\\n                        5 520\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n                <tr class=\\\"show-on-hover-parent\\\">\\n                    <td>\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                        </label>\\n                    </td>\\n                    <th>3</th>\\n                    <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info min-width150\\\">\\n                            Новый\\n                        </button>\\n                    </td>\\n                    <td>\\n                        20.02.2017\\n                    </td>\\n                    <td>\\n                        5\\n                    </td>\\n                    <td>\\n                        5 520\\n                    </td>\\n                    <td>\\n                        <div class=\\\"relative\\\">\\n                            <div class=\\\"show-on-hover\\\">\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        username@domain.com\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n\\n    <div class=\\\"card-footer\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <select class=\\\"form-control\\\">\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n            </select>\\n        </div>\\n\\n        <ngb-pagination [class]=\\\"'mb-0'\\\" [collectionSize]=\\\"120\\\" [page]=\\\"1\\\" [maxSize]=\\\"8\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"false\\\"></ngb-pagination>\\n\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-orders.html\n// module id = ../../../../../src/app/templates/page-orders.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"float-right\\\">\\n            <!--a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/settings/input_types']\\\">\\n                <i class=\\\"icon-upload\\\"></i>\\n                Типы ввода\\n            </a>\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/settings/output_types']\\\">\\n                <i class=\\\"icon-download\\\"></i>\\n                Типы вывода\\n            </a-->\\n        </div>\\n\\n        <h3>\\n            <i class=\\\"icon-bar-graph-2\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n\\n                <!-- statuses -->\\n                <label class=\\\"label-filled\\\">\\n                    Статусы\\n                </label>\\n\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body text-muted\\\">\\n                        Названия статусов заказов и цвет для вывода на странице заказов в административной части.\\n                    </div>\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <table class=\\\"table table-divided mb-0\\\">\\n                            <thead>\\n                            <tr>\\n                                <th>\\n                                    Название\\n                                </th>\\n                                <th>\\n                                    Шаблон письма\\n                                </th>\\n                                <th>\\n                                    Цвет\\n                                </th>\\n                                <th></th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Новый\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-info\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Принят к оплате\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-success\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Отправлен\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-warning\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Отменен\\\">\\n                                </td>\\n                                <td>\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"userEmailStatus\\\">\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm bg-danger\\\" style=\\\"width: 30px;\\\">\\n                                        &nbsp;\\n                                    </button>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-cross\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                            <tfoot>\\n                            <tr class=\\\"bg-faded\\\">\\n                                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                    <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                        <i class=\\\"icon-plus\\\"></i>\\n                                        Добавить\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            </tfoot>\\n                        </table>\\n\\n                    </div>\\n                </div>\\n                <!-- /statuses -->\\n\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n\\n                <!-- delivery -->\\n                <label class=\\\"label-filled\\\">\\n                    Методы доставки\\n                </label>\\n\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-body text-muted\\\">\\n                        Список методов доставки для вывода в форме заказа во внешней части сайта.\\n                    </div>\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <table class=\\\"table table-divided mb-0\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>\\n                                        Название\\n                                    </th>\\n                                    <th>\\n                                        Цена\\n                                    </th>\\n                                    <th>\\n                                        Макс. цена\\n                                    </th>\\n                                    <th></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Самовывоз\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Доставка по городу\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\n                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"\\\" value=\\\"Доставка по городу\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"0\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control form-control-sm mwidth-80 m-auto\\\" name=\\\"\\\" value=\\\"\\\">\\n                                    </td>\\n                                    <td class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                            <tfoot>\\n                                <tr class=\\\"bg-faded\\\">\\n                                    <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                        <button class=\\\"btn btn-secondary btn-sm\\\">\\n                                            <i class=\\\"icon-plus\\\"></i>\\n                                            Добавить\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                            </tfoot>\\n                        </table>\\n\\n                    </div>\\n                </div>\\n                <!-- /delivery -->\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-settings.html\n// module id = ../../../../../src/app/templates/page-settings.html\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n\\n        <h3>\\n            <i class=\\\"icon-bar-graph-2\\\"></i>\\n            {{title}}\\n        </h3>\\n\\n        <hr>\\n\\n        <div class=\\\"float-left\\\">\\n\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                <div class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                        <i class=\\\"icon-date_range\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n\\n    </div>\\n    <div class=\\\"card-body border-t\\\">\\n\\n        <br>\\n        <br>\\n        <br>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/page-statistics.html\n// module id = ../../../../../src/app/templates/page-statistics.html\n// module chunks = main","module.exports = \"\\n<ngb-tabset justify=\\\"fill\\\">\\n    <ngb-tab *ngFor=\\\"let groupName of groups; let i=index\\\">\\n        <ng-template ngbTabTitle>{{groupName}}</ng-template>\\n        <ng-template ngbTabContent>\\n            <div class=\\\"pt-3\\\">\\n\\n                <div class=\\\"form-group\\\" [class.form-group-message]=\\\"formErrors[field.name]\\\" [formGroup]=\\\"form\\\" *ngFor=\\\"let field of fields | filterFieldByGroup: groupName\\\">\\n\\n                    <div [ngSwitch]=\\\"field.inputType\\\">\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'system_name'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\">\\n                                    <div class=\\\"input-group-btn\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ngbTooltip=\\\"Generate\\\" (click)=\\\"generateName(field)\\\">\\n                                            <i class=\\\"icon-reload\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'text'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"text\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" class=\\\"form-control\\\">\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'name'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"text\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" class=\\\"form-control\\\">\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'number'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" [min]=\\\"field.inputProperties.min\\\" [max]=\\\"field.inputProperties.max\\\" [step]=\\\"field.inputProperties.step\\\">\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'textarea'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <textarea rows=\\\"6\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" class=\\\"form-control\\\"></textarea>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'image'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"file\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" accept=\\\"image/*\\\" style=\\\"display:none;\\\" (change)=\\\"fileChange($event, field.name, imgPreview)\\\" #fileInput>\\n                                <input type=\\\"hidden\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\">\\n\\n                                <div class=\\\"relative\\\" [ngClass]=\\\"{'show-on-hover-parent': selectedItems[field.name]}\\\">\\n                                    <div>\\n                                        <img src=\\\"\\\" alt=\\\"Preview\\\" class=\\\"img-thumbnail\\\" style=\\\"width:250px; display:none;\\\" #imgPreview>\\n                                    </div>\\n                                    <div class=\\\"show-on-hover\\\" style=\\\"top:10px; left:10px; right:auto;\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"fileInput.click()\\\">\\n                                            <i class=\\\"icon-upload\\\"></i>\\n                                            Обзор\\n                                        </button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" *ngIf=\\\"model[field.name]\\\" (click)=\\\"fileClear(field.name, imgPreview)\\\" title=\\\"Clear\\\">\\n                                            <i class=\\\"icon-cross\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"py-2 text-secondary\\\" *ngIf=\\\"selectedItems[field.name]\\\">\\n                                    <i class=\\\"icon-file\\\"></i>\\n                                    {{selectedItems[field.name]}}\\n                                </div>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'file'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"file\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" style=\\\"display:none;\\\" (change)=\\\"fileChange($event, field.name)\\\" #fileInput>\\n                                <input type=\\\"hidden\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-wide\\\" (click)=\\\"fileInput.click()\\\">\\n                                    <i class=\\\"icon-upload\\\"></i>\\n                                    Обзор\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" *ngIf=\\\"model[field.name]\\\" (click)=\\\"fileClear(field.name)\\\" title=\\\"Clear\\\">\\n                                    <i class=\\\"icon-cross\\\"></i>\\n                                </button>\\n                                <div class=\\\"pt-2 text-secondary\\\" *ngIf=\\\"selectedItems[field.name]\\\">\\n                                    <i class=\\\"icon-file\\\"></i>\\n                                    {{selectedItems[field.name]}}\\n                                </div>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'color'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <input type=\\\"color\\\" id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" class=\\\"form-control\\\">\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'rich_text'\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                                <p-editor [formControlName]=\\\"field.name\\\"\\n                                          [(ngModel)]=\\\"model[field.name]\\\"\\n                                          [formats]=\\\"field.inputProperties.formats\\\"\\n                                          [style]=\\\"{'height':'320px'}\\\">\\n                                    <p-header>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <select class=\\\"ql-header\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('header') > -1\\\"></select>\\n                                            <select class=\\\"ql-font\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('font') > -1\\\"></select>\\n                                            <select class=\\\"ql-size\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('size') > -1\\\"></select>\\n                                        </span>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('bold') > -1\\\"></button>\\n                                            <button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('italic') > -1\\\"></button>\\n                                            <button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('underline') > -1\\\"></button>\\n                                            <button class=\\\"ql-strike\\\" aria-label=\\\"Strike\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('strike') > -1\\\"></button>\\n                                        </span>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <select class=\\\"ql-color\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('color') > -1\\\"></select>\\n                                            <select class=\\\"ql-background\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('background') > -1\\\"></select>\\n                                        </span>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <button class=\\\"ql-list\\\" value=\\\"ordered\\\" aria-label=\\\"Ordered List\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('list') > -1\\\"></button>\\n                                            <button class=\\\"ql-list\\\" value=\\\"bullet\\\" aria-label=\\\"Unordered List\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('list') > -1\\\"></button>\\n                                            <select class=\\\"ql-align\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('align') > -1\\\"></select>\\n                                        </span>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <button class=\\\"ql-link\\\" aria-label=\\\"Insert Link\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('link') > -1\\\"></button>\\n                                            <button class=\\\"ql-image\\\" aria-label=\\\"Insert Image\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('image') > -1\\\"></button>\\n                                            <button class=\\\"ql-video\\\" aria-label=\\\"Insert Video\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('video') > -1\\\"></button>\\n                                            <button class=\\\"ql-code-block\\\" aria-label=\\\"Insert Code Block\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('code-block') > -1\\\"></button>\\n                                        </span>\\n                                        <span class=\\\"ql-formats\\\">\\n                                            <button class=\\\"ql-clean\\\" aria-label=\\\"Remove Styles\\\" *ngIf=\\\"field.inputProperties.formats.indexOf('clean') > -1\\\"></button>\\n                                        </span>\\n                                    </p-header>\\n                                </p-editor>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'date'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <p-calendar [formControlName]=\\\"field.name\\\"\\n                                            [(ngModel)]=\\\"model[field.name]\\\"\\n                                            [dateFormat]=\\\"field.inputProperties.format\\\"\\n                                            [showTime]=\\\"field.inputProperties.show_time\\\"\\n                                            [hourFormat]=\\\"field.inputProperties.hour_format\\\"\\n                                            [locale]=\\\"calendarLocale[field.inputProperties.locale]\\\"\\n                                            [showButtonBar]=\\\"true\\\"\\n                                            [showIcon]=\\\"true\\\"\\n                                            [icon]=\\\"'icon-date_range'\\\"></p-calendar>\\n\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'select'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <select id=\\\"field_{{field.name}}\\\" [name]=\\\"field.name\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\" class=\\\"form-control\\\">\\n                                    <option *ngFor=\\\"let opt of field.options\\\" [value]=\\\"opt.value\\\">{{opt.title}}</option>\\n                                </select>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'radio'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <label class=\\\"mr-3\\\" *ngFor=\\\"let opt of field.options\\\">\\n                                    <input type=\\\"radio\\\" [name]=\\\"field.name\\\" [value]=\\\"opt.value\\\" [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\">\\n                                    {{opt.title}}\\n                                </label>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'checkbox'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n                                <label class=\\\"mr-3\\\" *ngFor=\\\"let opt of field.options; let index=index\\\">\\n                                    <input type=\\\"checkbox\\\" [name]=\\\"field.name + index\\\" [value]=\\\"opt.value\\\" (change)=\\\"selectValue($event, field.name, opt.value)\\\" [checked]=\\\"fieldsMultivalues[field.name].checked[index]\\\">\\n                                    {{opt.title}}\\n                                </label>\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngSwitchCase=\\\"'tags'\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <label for=\\\"field_{{field.name}}\\\">\\n                                    {{field.title}}\\n                                    <span class=\\\"text-danger\\\" *ngIf=\\\"field.required\\\">*</span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"col-md-7\\\">\\n\\n                                <p-chips [formControlName]=\\\"field.name\\\" [(ngModel)]=\\\"model[field.name]\\\"></p-chips>\\n\\n                                <div *ngIf=\\\"formErrors[field.name]\\\" class=\\\"alert alert-danger\\\">\\n                                    {{formErrors[field.name]}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n</ngb-tabset>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/render-input-field.html\n// module id = ../../../../../src/app/templates/render-input-field.html\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"outputType\\\">\\n    <div *ngSwitchCase=\\\"'boolean'\\\" class=\\\"text-center\\\">\\n        <i class=\\\"big text-success icon-circle-check\\\" [hidden]=\\\"!value\\\"></i>\\n        <i class=\\\"big text-muted icon-circle-cross\\\" [hidden]=\\\"value\\\"></i>\\n    </div>\\n    <div *ngSwitchDefault>{{value}}</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/shopkeeper4/web/shk-app/src/app/templates/render-output-field.html\n// module id = ../../../../../src/app/templates/render-output-field.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { getTranslationProviders } from './app/i18n-providers';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\n//platformBrowserDynamic().bootstrapModule(AppModule);\n\ngetTranslationProviders().then(providers => {\n    const options = { providers };\n    platformBrowserDynamic().bootstrapModule(AppModule, options);\n});\n\n\n// WEBPACK FOOTER //\n// /var/www/html/shopkeeper4/web/shk-app/src/main.ts"],"sourceRoot":"webpack:///"}