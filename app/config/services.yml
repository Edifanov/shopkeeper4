# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    #service_name:
    #    class: AppBundle\Directory\ClassName
    #    arguments: ['@another_service_name', 'plain_value', '%parameter_name%']

    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller/*'
        tags: ['controller.service_arguments']

    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags: [serializer.normalizer]

    mongodb_paramconverter:
        class: Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter
        arguments: ["@doctrine_mongodb"]
        tags:
            - { name: request.param_converter }

    mongo.connection:
        class: Doctrine\MongoDB\Connection
        factory: ["@doctrine.odm.mongodb.document_manager", getConnection]
        calls:
            - [initialize, []]

    mongo:
        class: Mongo
        factory: ["@mongo.connection", getMongo]

    AppBundle\EventListener\ExceptionListener:
        public: true
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
        arguments: [ '@twig', '@service_container' ]

    AppBundle\EventListener\KernelEventListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
        arguments: [ '@service_container' ]

    AppBundle\Twig\AppExtension:
        tags: ['twig.extension']
        arguments: [ "@service_container" ]
